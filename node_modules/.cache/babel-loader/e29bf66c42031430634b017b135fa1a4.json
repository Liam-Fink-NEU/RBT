{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLTableCellElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get colSpan() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"colSpan\"];\n  }\n\n  set colSpan(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'colSpan' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this[impl][\"colSpan\"] = V;\n  }\n\n  get rowSpan() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"rowSpan\"];\n  }\n\n  set rowSpan(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'rowSpan' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this[impl][\"rowSpan\"] = V;\n  }\n\n  get headers() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"headers\");\n    return value === null ? \"\" : value;\n  }\n\n  set headers(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'headers' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"headers\", V);\n  }\n\n  get cellIndex() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"cellIndex\"];\n  }\n\n  get scope() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"scope\"];\n  }\n\n  set scope(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'scope' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this[impl][\"scope\"] = V;\n  }\n\n  get abbr() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"abbr\");\n    return value === null ? \"\" : value;\n  }\n\n  set abbr(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'abbr' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"abbr\", V);\n  }\n\n  get align() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"align\");\n    return value === null ? \"\" : value;\n  }\n\n  set align(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"align\", V);\n  }\n\n  get axis() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"axis\");\n    return value === null ? \"\" : value;\n  }\n\n  set axis(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'axis' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"axis\", V);\n  }\n\n  get height() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"height\");\n    return value === null ? \"\" : value;\n  }\n\n  set height(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'height' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"height\", V);\n  }\n\n  get width() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"width\");\n    return value === null ? \"\" : value;\n  }\n\n  set width(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'width' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"width\", V);\n  }\n\n  get ch() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"char\");\n    return value === null ? \"\" : value;\n  }\n\n  set ch(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'ch' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"char\", V);\n  }\n\n  get chOff() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"charoff\");\n    return value === null ? \"\" : value;\n  }\n\n  set chOff(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'chOff' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"charoff\", V);\n  }\n\n  get noWrap() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"nowrap\");\n  }\n\n  set noWrap(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'noWrap' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"nowrap\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"nowrap\");\n    }\n  }\n\n  get vAlign() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"valign\");\n    return value === null ? \"\" : value;\n  }\n\n  set vAlign(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'vAlign' property on 'HTMLTableCellElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"valign\", V);\n  }\n\n  get bgColor() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"bgcolor\");\n    return value === null ? \"\" : value;\n  }\n\n  set bgColor(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'bgColor' property on 'HTMLTableCellElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n    this.setAttributeNS(null, \"bgcolor\", V);\n  }\n\n}\n\nObject.defineProperties(HTMLTableCellElement.prototype, {\n  colSpan: {\n    enumerable: true\n  },\n  rowSpan: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  cellIndex: {\n    enumerable: true\n  },\n  scope: {\n    enumerable: true\n  },\n  abbr: {\n    enumerable: true\n  },\n  align: {\n    enumerable: true\n  },\n  axis: {\n    enumerable: true\n  },\n  height: {\n    enumerable: true\n  },\n  width: {\n    enumerable: true\n  },\n  ch: {\n    enumerable: true\n  },\n  chOff: {\n    enumerable: true\n  },\n  noWrap: {\n    enumerable: true\n  },\n  vAlign: {\n    enumerable: true\n  },\n  bgColor: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"HTMLTableCellElement\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLTableCellElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableCellElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableCellElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLTableCellElement,\n  expose: {\n    Window: {\n      HTMLTableCellElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLTableCellElement-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableCellElement.js"],"names":["conversions","require","utils","impl","implSymbol","HTMLElement","HTMLTableCellElement","interface","constructor","TypeError","colSpan","module","exports","is","V","context","rowSpan","headers","value","getAttributeNS","setAttributeNS","cellIndex","scope","abbr","align","axis","height","width","ch","chOff","noWrap","hasAttributeNS","removeAttributeNS","vAlign","bgColor","treatNullAsEmptyString","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,IAAI,GAAGD,KAAK,CAACE,UAAnB;;AACA,MAAMC,WAAW,GAAGJ,OAAO,CAAC,kBAAD,CAA3B;;AAEA,MAAMK,oBAAN,SAAmCD,WAAW,CAACE,SAA/C,CAAyD;AACvDC,EAAAA,WAAW,GAAG;AACZ,UAAM,IAAIC,SAAJ,CAAc,qBAAd,CAAN;AACD;;AAED,MAAIC,OAAJ,GAAc;AACZ,QAAI,CAAC,IAAD,IAAS,CAACC,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKN,IAAL,EAAW,SAAX,CAAP;AACD;;AAED,MAAIO,OAAJ,CAAYI,CAAZ,EAAe;AACb,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,eAAD,CAAX,CAA6Bc,CAA7B,EAAgC;AAClCC,MAAAA,OAAO,EAAE;AADyB,KAAhC,CAAJ;AAIA,SAAKZ,IAAL,EAAW,SAAX,IAAwBW,CAAxB;AACD;;AAED,MAAIE,OAAJ,GAAc;AACZ,QAAI,CAAC,IAAD,IAAS,CAACL,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKN,IAAL,EAAW,SAAX,CAAP;AACD;;AAED,MAAIa,OAAJ,CAAYF,CAAZ,EAAe;AACb,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,eAAD,CAAX,CAA6Bc,CAA7B,EAAgC;AAClCC,MAAAA,OAAO,EAAE;AADyB,KAAhC,CAAJ;AAIA,SAAKZ,IAAL,EAAW,SAAX,IAAwBW,CAAxB;AACD;;AAED,MAAIG,OAAJ,GAAc;AACZ,QAAI,CAAC,IAAD,IAAS,CAACN,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMS,KAAK,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,SAA1B,CAAd;AACA,WAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD;;AAED,MAAID,OAAJ,CAAYH,CAAZ,EAAe;AACb,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKK,cAAL,CAAoB,IAApB,EAA0B,SAA1B,EAAqCN,CAArC;AACD;;AAED,MAAIO,SAAJ,GAAgB;AACd,QAAI,CAAC,IAAD,IAAS,CAACV,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKN,IAAL,EAAW,WAAX,CAAP;AACD;;AAED,MAAImB,KAAJ,GAAY;AACV,QAAI,CAAC,IAAD,IAAS,CAACX,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKN,IAAL,EAAW,OAAX,CAAP;AACD;;AAED,MAAImB,KAAJ,CAAUR,CAAV,EAAa;AACX,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKZ,IAAL,EAAW,OAAX,IAAsBW,CAAtB;AACD;;AAED,MAAIS,IAAJ,GAAW;AACT,QAAI,CAAC,IAAD,IAAS,CAACZ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMS,KAAK,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,MAA1B,CAAd;AACA,WAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD;;AAED,MAAIK,IAAJ,CAAST,CAAT,EAAY;AACV,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKK,cAAL,CAAoB,IAApB,EAA0B,MAA1B,EAAkCN,CAAlC;AACD;;AAED,MAAIU,KAAJ,GAAY;AACV,QAAI,CAAC,IAAD,IAAS,CAACb,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMS,KAAK,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,OAA1B,CAAd;AACA,WAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD;;AAED,MAAIM,KAAJ,CAAUV,CAAV,EAAa;AACX,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKK,cAAL,CAAoB,IAApB,EAA0B,OAA1B,EAAmCN,CAAnC;AACD;;AAED,MAAIW,IAAJ,GAAW;AACT,QAAI,CAAC,IAAD,IAAS,CAACd,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMS,KAAK,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,MAA1B,CAAd;AACA,WAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD;;AAED,MAAIO,IAAJ,CAASX,CAAT,EAAY;AACV,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKK,cAAL,CAAoB,IAApB,EAA0B,MAA1B,EAAkCN,CAAlC;AACD;;AAED,MAAIY,MAAJ,GAAa;AACX,QAAI,CAAC,IAAD,IAAS,CAACf,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMS,KAAK,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,QAA1B,CAAd;AACA,WAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD;;AAED,MAAIQ,MAAJ,CAAWZ,CAAX,EAAc;AACZ,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKK,cAAL,CAAoB,IAApB,EAA0B,QAA1B,EAAoCN,CAApC;AACD;;AAED,MAAIa,KAAJ,GAAY;AACV,QAAI,CAAC,IAAD,IAAS,CAAChB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMS,KAAK,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,OAA1B,CAAd;AACA,WAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD;;AAED,MAAIS,KAAJ,CAAUb,CAAV,EAAa;AACX,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKK,cAAL,CAAoB,IAApB,EAA0B,OAA1B,EAAmCN,CAAnC;AACD;;AAED,MAAIc,EAAJ,GAAS;AACP,QAAI,CAAC,IAAD,IAAS,CAACjB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMS,KAAK,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,MAA1B,CAAd;AACA,WAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD;;AAED,MAAIU,EAAJ,CAAOd,CAAP,EAAU;AACR,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKK,cAAL,CAAoB,IAApB,EAA0B,MAA1B,EAAkCN,CAAlC;AACD;;AAED,MAAIe,KAAJ,GAAY;AACV,QAAI,CAAC,IAAD,IAAS,CAAClB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMS,KAAK,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,SAA1B,CAAd;AACA,WAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD;;AAED,MAAIW,KAAJ,CAAUf,CAAV,EAAa;AACX,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKK,cAAL,CAAoB,IAApB,EAA0B,SAA1B,EAAqCN,CAArC;AACD;;AAED,MAAIgB,MAAJ,GAAa;AACX,QAAI,CAAC,IAAD,IAAS,CAACnB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKsB,cAAL,CAAoB,IAApB,EAA0B,QAA1B,CAAP;AACD;;AAED,MAAID,MAAJ,CAAWhB,CAAX,EAAc;AACZ,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,SAAD,CAAX,CAAuBc,CAAvB,EAA0B;AAC5BC,MAAAA,OAAO,EAAE;AADmB,KAA1B,CAAJ;;AAIA,QAAID,CAAJ,EAAO;AACL,WAAKM,cAAL,CAAoB,IAApB,EAA0B,QAA1B,EAAoC,EAApC;AACD,KAFD,MAEO;AACL,WAAKY,iBAAL,CAAuB,IAAvB,EAA6B,QAA7B;AACD;AACF;;AAED,MAAIC,MAAJ,GAAa;AACX,QAAI,CAAC,IAAD,IAAS,CAACtB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMS,KAAK,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,QAA1B,CAAd;AACA,WAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD;;AAED,MAAIe,MAAJ,CAAWnB,CAAX,EAAc;AACZ,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE;AADqB,KAA5B,CAAJ;AAIA,SAAKK,cAAL,CAAoB,IAApB,EAA0B,QAA1B,EAAoCN,CAApC;AACD;;AAED,MAAIoB,OAAJ,GAAc;AACZ,QAAI,CAAC,IAAD,IAAS,CAACvB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAMS,KAAK,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,SAA1B,CAAd;AACA,WAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD;;AAED,MAAIgB,OAAJ,CAAYpB,CAAZ,EAAe;AACb,QAAI,CAAC,IAAD,IAAS,CAACH,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIJ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAEDK,IAAAA,CAAC,GAAGd,WAAW,CAAC,WAAD,CAAX,CAAyBc,CAAzB,EAA4B;AAC9BC,MAAAA,OAAO,EAAE,oFADqB;AAE9BoB,MAAAA,sBAAsB,EAAE;AAFM,KAA5B,CAAJ;AAKA,SAAKf,cAAL,CAAoB,IAApB,EAA0B,SAA1B,EAAqCN,CAArC;AACD;;AAlTsD;;AAoTzDsB,MAAM,CAACC,gBAAP,CAAwB/B,oBAAoB,CAACgC,SAA7C,EAAwD;AACtD5B,EAAAA,OAAO,EAAE;AAAE6B,IAAAA,UAAU,EAAE;AAAd,GAD6C;AAEtDvB,EAAAA,OAAO,EAAE;AAAEuB,IAAAA,UAAU,EAAE;AAAd,GAF6C;AAGtDtB,EAAAA,OAAO,EAAE;AAAEsB,IAAAA,UAAU,EAAE;AAAd,GAH6C;AAItDlB,EAAAA,SAAS,EAAE;AAAEkB,IAAAA,UAAU,EAAE;AAAd,GAJ2C;AAKtDjB,EAAAA,KAAK,EAAE;AAAEiB,IAAAA,UAAU,EAAE;AAAd,GAL+C;AAMtDhB,EAAAA,IAAI,EAAE;AAAEgB,IAAAA,UAAU,EAAE;AAAd,GANgD;AAOtDf,EAAAA,KAAK,EAAE;AAAEe,IAAAA,UAAU,EAAE;AAAd,GAP+C;AAQtDd,EAAAA,IAAI,EAAE;AAAEc,IAAAA,UAAU,EAAE;AAAd,GARgD;AAStDb,EAAAA,MAAM,EAAE;AAAEa,IAAAA,UAAU,EAAE;AAAd,GAT8C;AAUtDZ,EAAAA,KAAK,EAAE;AAAEY,IAAAA,UAAU,EAAE;AAAd,GAV+C;AAWtDX,EAAAA,EAAE,EAAE;AAAEW,IAAAA,UAAU,EAAE;AAAd,GAXkD;AAYtDV,EAAAA,KAAK,EAAE;AAAEU,IAAAA,UAAU,EAAE;AAAd,GAZ+C;AAatDT,EAAAA,MAAM,EAAE;AAAES,IAAAA,UAAU,EAAE;AAAd,GAb8C;AActDN,EAAAA,MAAM,EAAE;AAAEM,IAAAA,UAAU,EAAE;AAAd,GAd8C;AAetDL,EAAAA,OAAO,EAAE;AAAEK,IAAAA,UAAU,EAAE;AAAd,GAf6C;AAgBtD,GAACC,MAAM,CAACC,WAAR,GAAsB;AAAEvB,IAAAA,KAAK,EAAE,sBAAT;AAAiCwB,IAAAA,YAAY,EAAE;AAA/C;AAhBgC,CAAxD;AAkBA,MAAMC,KAAK,GAAG;AACZ;AACA;AACA;AACAC,EAAAA,oBAAoB,EAAE,EAJV;;AAKZ/B,EAAAA,EAAE,CAACgC,GAAD,EAAM;AACN,QAAIA,GAAJ,EAAS;AACP,UAAI3C,KAAK,CAAC4C,MAAN,CAAaD,GAAb,EAAkB1C,IAAlB,KAA2B0C,GAAG,CAAC1C,IAAD,CAAH,YAAqB4C,IAAI,CAACC,cAAzD,EAAyE;AACvE,eAAO,IAAP;AACD;;AACD,WAAK,MAAMC,WAAX,IAA0BtC,MAAM,CAACC,OAAP,CAAegC,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACJ,GAAD,CAAf,EAAsB;AACpB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAjBW;;AAkBZK,EAAAA,MAAM,CAACL,GAAD,EAAM;AACV,QAAIA,GAAJ,EAAS;AACP,UAAIA,GAAG,YAAYE,IAAI,CAACC,cAAxB,EAAwC;AACtC,eAAO,IAAP;AACD;;AAED,YAAMG,OAAO,GAAGjD,KAAK,CAACkD,cAAN,CAAqBP,GAArB,CAAhB;;AACA,WAAK,MAAMI,WAAX,IAA0BtC,MAAM,CAACC,OAAP,CAAegC,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACE,OAAD,CAAf,EAA0B;AACxB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAhCW;;AAiCZE,EAAAA,OAAO,CAACR,GAAD,EAAM;AAAE9B,IAAAA,OAAO,GAAG;AAAZ,MAAqC,EAA3C,EAA+C;AACpD,QAAIJ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkBgC,GAAlB,CAAJ,EAA4B;AAC1B,aAAO3C,KAAK,CAACoD,cAAN,CAAqBT,GAArB,CAAP;AACD;;AACD,UAAM,IAAIpC,SAAJ,CAAe,GAAEM,OAAQ,yCAAzB,CAAN;AACD,GAtCW;;AAwCZwC,EAAAA,MAAM,CAACC,eAAD,EAAkBC,WAAlB,EAA+B;AACnC,QAAIZ,GAAG,GAAGT,MAAM,CAACmB,MAAP,CAAcjD,oBAAoB,CAACgC,SAAnC,CAAV;AACAO,IAAAA,GAAG,GAAG,KAAKa,KAAL,CAAWb,GAAX,EAAgBW,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOZ,GAAP;AACD,GA5CW;;AA6CZc,EAAAA,UAAU,CAACH,eAAD,EAAkBC,WAAlB,EAA+B;AACvC,QAAIZ,GAAG,GAAGT,MAAM,CAACmB,MAAP,CAAcjD,oBAAoB,CAACgC,SAAnC,CAAV;AACAO,IAAAA,GAAG,GAAG,KAAKa,KAAL,CAAWb,GAAX,EAAgBW,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOvD,KAAK,CAACoD,cAAN,CAAqBT,GAArB,CAAP;AACD,GAjDW;;AAkDZe,EAAAA,cAAc,CAACf,GAAD,EAAM;AAClBxC,IAAAA,WAAW,CAACuD,cAAZ,CAA2Bf,GAA3B;AACD,GApDW;;AAqDZa,EAAAA,KAAK,CAACb,GAAD,EAAMW,eAAN,EAAuBC,WAAvB,EAAoC;AACvC,QAAI,CAACA,WAAL,EAAkBA,WAAW,GAAG,EAAd;AAElBA,IAAAA,WAAW,CAACN,OAAZ,GAAsBN,GAAtB;;AAEA,SAAKe,cAAL,CAAoBf,GAApB;;AACAT,IAAAA,MAAM,CAACyB,cAAP,CAAsBhB,GAAtB,EAA2B1C,IAA3B,EAAiC;AAC/Be,MAAAA,KAAK,EAAE,IAAI6B,IAAI,CAACC,cAAT,CAAwBQ,eAAxB,EAAyCC,WAAzC,CADwB;AAE/Bf,MAAAA,YAAY,EAAE;AAFiB,KAAjC;AAKAG,IAAAA,GAAG,CAAC1C,IAAD,CAAH,CAAUD,KAAK,CAAC4D,aAAhB,IAAiCjB,GAAjC;;AACA,QAAIE,IAAI,CAACgB,IAAT,EAAe;AACbhB,MAAAA,IAAI,CAACgB,IAAL,CAAUlB,GAAG,CAAC1C,IAAD,CAAb,EAAqBsD,WAArB;AACD;;AACD,WAAOZ,GAAP;AACD,GArEW;;AAsEZtC,EAAAA,SAAS,EAAED,oBAtEC;AAuEZ0D,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAE3D,MAAAA;AAAF;AADF;AAvEI,CAAd,C,CA0EG;;AACHK,MAAM,CAACC,OAAP,GAAiB+B,KAAjB;;AAEA,MAAMI,IAAI,GAAG9C,OAAO,CAAC,uCAAD,CAApB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLTableCellElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get colSpan() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"colSpan\"];\n  }\n\n  set colSpan(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'colSpan' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this[impl][\"colSpan\"] = V;\n  }\n\n  get rowSpan() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"rowSpan\"];\n  }\n\n  set rowSpan(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'rowSpan' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this[impl][\"rowSpan\"] = V;\n  }\n\n  get headers() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"headers\");\n    return value === null ? \"\" : value;\n  }\n\n  set headers(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'headers' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"headers\", V);\n  }\n\n  get cellIndex() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"cellIndex\"];\n  }\n\n  get scope() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"scope\"];\n  }\n\n  set scope(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'scope' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this[impl][\"scope\"] = V;\n  }\n\n  get abbr() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"abbr\");\n    return value === null ? \"\" : value;\n  }\n\n  set abbr(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'abbr' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"abbr\", V);\n  }\n\n  get align() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"align\");\n    return value === null ? \"\" : value;\n  }\n\n  set align(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"align\", V);\n  }\n\n  get axis() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"axis\");\n    return value === null ? \"\" : value;\n  }\n\n  set axis(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'axis' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"axis\", V);\n  }\n\n  get height() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"height\");\n    return value === null ? \"\" : value;\n  }\n\n  set height(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'height' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"height\", V);\n  }\n\n  get width() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"width\");\n    return value === null ? \"\" : value;\n  }\n\n  set width(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'width' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"width\", V);\n  }\n\n  get ch() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"char\");\n    return value === null ? \"\" : value;\n  }\n\n  set ch(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'ch' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"char\", V);\n  }\n\n  get chOff() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"charoff\");\n    return value === null ? \"\" : value;\n  }\n\n  set chOff(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'chOff' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"charoff\", V);\n  }\n\n  get noWrap() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"nowrap\");\n  }\n\n  set noWrap(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'noWrap' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"nowrap\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"nowrap\");\n    }\n  }\n\n  get vAlign() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"valign\");\n    return value === null ? \"\" : value;\n  }\n\n  set vAlign(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'vAlign' property on 'HTMLTableCellElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"valign\", V);\n  }\n\n  get bgColor() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"bgcolor\");\n    return value === null ? \"\" : value;\n  }\n\n  set bgColor(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'bgColor' property on 'HTMLTableCellElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n\n    this.setAttributeNS(null, \"bgcolor\", V);\n  }\n}\nObject.defineProperties(HTMLTableCellElement.prototype, {\n  colSpan: { enumerable: true },\n  rowSpan: { enumerable: true },\n  headers: { enumerable: true },\n  cellIndex: { enumerable: true },\n  scope: { enumerable: true },\n  abbr: { enumerable: true },\n  align: { enumerable: true },\n  axis: { enumerable: true },\n  height: { enumerable: true },\n  width: { enumerable: true },\n  ch: { enumerable: true },\n  chOff: { enumerable: true },\n  noWrap: { enumerable: true },\n  vAlign: { enumerable: true },\n  bgColor: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"HTMLTableCellElement\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLTableCellElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableCellElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableCellElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLTableCellElement,\n  expose: {\n    Window: { HTMLTableCellElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLTableCellElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}