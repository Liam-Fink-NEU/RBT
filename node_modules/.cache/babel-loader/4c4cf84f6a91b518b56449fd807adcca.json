{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst isBlob = require(\"./Blob.js\").is;\n\nconst convertBlob = require(\"./Blob.js\").convert;\n\nconst BinaryType = require(\"./BinaryType.js\");\n\nconst impl = utils.implSymbol;\n\nconst EventTarget = require(\"./EventTarget.js\");\n\nmodule.exports = {\n  createInterface: function (defaultPrivateData = {}) {\n    class WebSocket extends EventTarget.interface {\n      constructor(url) {\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to construct 'WebSocket': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to construct 'WebSocket': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[1];\n\n          if (curArg !== undefined) {\n            if (utils.isObject(curArg)) {\n              if (curArg[Symbol.iterator] !== undefined) {\n                if (!utils.isObject(curArg)) {\n                  throw new TypeError(\"Failed to construct 'WebSocket': parameter 2\" + \" sequence\" + \" is not an iterable object.\");\n                } else {\n                  const V = [];\n                  const tmp = curArg;\n\n                  for (let nextItem of tmp) {\n                    nextItem = conversions[\"DOMString\"](nextItem, {\n                      context: \"Failed to construct 'WebSocket': parameter 2\" + \" sequence\" + \"'s element\"\n                    });\n                    V.push(nextItem);\n                  }\n\n                  curArg = V;\n                }\n              } else {}\n            } else {\n              curArg = conversions[\"DOMString\"](curArg, {\n                context: \"Failed to construct 'WebSocket': parameter 2\"\n              });\n            }\n          } else {\n            curArg = [];\n          }\n\n          args.push(curArg);\n        }\n        return iface.setup(Object.create(new.target.prototype), args);\n      }\n\n      close() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        const args = [];\n        {\n          let curArg = arguments[0];\n\n          if (curArg !== undefined) {\n            curArg = conversions[\"unsigned short\"](curArg, {\n              context: \"Failed to execute 'close' on 'WebSocket': parameter 1\",\n              clamp: true\n            });\n          }\n\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[1];\n\n          if (curArg !== undefined) {\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'close' on 'WebSocket': parameter 2\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        return this[impl].close(...args);\n      }\n\n      send(data) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'send' on 'WebSocket': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        const args = [];\n        {\n          let curArg = arguments[0];\n\n          if (isBlob(curArg)) {\n            {\n              let curArg = arguments[0];\n              curArg = convertBlob(curArg, {\n                context: \"Failed to execute 'send' on 'WebSocket': parameter 1\"\n              });\n              args.push(curArg);\n            }\n          } else if (curArg instanceof ArrayBuffer || typeof SharedArrayBuffer !== \"undefined\" && curArg instanceof SharedArrayBuffer) {\n            {\n              let curArg = arguments[0];\n              curArg = conversions[\"ArrayBuffer\"](curArg, {\n                context: \"Failed to execute 'send' on 'WebSocket': parameter 1\"\n              });\n              args.push(curArg);\n            }\n          } else if (ArrayBuffer.isView(curArg)) {\n            {\n              let curArg = arguments[0];\n\n              if (ArrayBuffer.isView(curArg)) {} else {\n                throw new TypeError(\"Failed to execute 'send' on 'WebSocket': parameter 1\" + \" is not of any supported type.\");\n              }\n\n              args.push(curArg);\n            }\n          } else {\n            {\n              let curArg = arguments[0];\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'send' on 'WebSocket': parameter 1\"\n              });\n              args.push(curArg);\n            }\n          }\n        }\n        return this[impl].send(...args);\n      }\n\n      get url() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"url\"];\n      }\n\n      get readyState() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"readyState\"];\n      }\n\n      get bufferedAmount() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"bufferedAmount\"];\n      }\n\n      get onopen() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onopen\"]);\n      }\n\n      set onopen(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n        this[impl][\"onopen\"] = V;\n      }\n\n      get onerror() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onerror\"]);\n      }\n\n      set onerror(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n        this[impl][\"onerror\"] = V;\n      }\n\n      get onclose() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onclose\"]);\n      }\n\n      set onclose(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n        this[impl][\"onclose\"] = V;\n      }\n\n      get extensions() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"extensions\"];\n      }\n\n      get protocol() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"protocol\"];\n      }\n\n      get onmessage() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onmessage\"]);\n      }\n\n      set onmessage(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n        this[impl][\"onmessage\"] = V;\n      }\n\n      get binaryType() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"binaryType\"]);\n      }\n\n      set binaryType(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = `${V}`;\n\n        if (!BinaryType.enumerationValues.has(V)) {\n          return;\n        }\n\n        this[impl][\"binaryType\"] = V;\n      }\n\n    }\n\n    Object.defineProperties(WebSocket.prototype, {\n      close: {\n        enumerable: true\n      },\n      send: {\n        enumerable: true\n      },\n      url: {\n        enumerable: true\n      },\n      readyState: {\n        enumerable: true\n      },\n      bufferedAmount: {\n        enumerable: true\n      },\n      onopen: {\n        enumerable: true\n      },\n      onerror: {\n        enumerable: true\n      },\n      onclose: {\n        enumerable: true\n      },\n      extensions: {\n        enumerable: true\n      },\n      protocol: {\n        enumerable: true\n      },\n      onmessage: {\n        enumerable: true\n      },\n      binaryType: {\n        enumerable: true\n      },\n      [Symbol.toStringTag]: {\n        value: \"WebSocket\",\n        configurable: true\n      },\n      CONNECTING: {\n        value: 0,\n        enumerable: true\n      },\n      OPEN: {\n        value: 1,\n        enumerable: true\n      },\n      CLOSING: {\n        value: 2,\n        enumerable: true\n      },\n      CLOSED: {\n        value: 3,\n        enumerable: true\n      }\n    });\n    Object.defineProperties(WebSocket, {\n      CONNECTING: {\n        value: 0,\n        enumerable: true\n      },\n      OPEN: {\n        value: 1,\n        enumerable: true\n      },\n      CLOSING: {\n        value: 2,\n        enumerable: true\n      },\n      CLOSED: {\n        value: 3,\n        enumerable: true\n      }\n    });\n    const iface = {\n      create(constructorArgs, privateData) {\n        let obj = Object.create(WebSocket.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return obj;\n      },\n\n      createImpl(constructorArgs, privateData) {\n        let obj = Object.create(WebSocket.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return utils.implForWrapper(obj);\n      },\n\n      _internalSetup(obj) {\n        EventTarget._internalSetup(obj);\n      },\n\n      setup(obj, constructorArgs, privateData) {\n        if (!privateData) privateData = {};\n\n        for (var prop in defaultPrivateData) {\n          if (!(prop in privateData)) {\n            privateData[prop] = defaultPrivateData[prop];\n          }\n        }\n\n        privateData.wrapper = obj;\n\n        this._internalSetup(obj);\n\n        Object.defineProperty(obj, impl, {\n          value: new Impl.implementation(constructorArgs, privateData),\n          configurable: true\n        });\n        obj[impl][utils.wrapperSymbol] = obj;\n\n        if (Impl.init) {\n          Impl.init(obj[impl], privateData);\n        }\n\n        return obj;\n      },\n\n      interface: WebSocket,\n      expose: {\n        Window: {\n          WebSocket\n        },\n        Worker: {\n          WebSocket\n        }\n      }\n    }; // iface\n\n    return iface;\n  },\n  // createInterface\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'WebSocket'.`);\n  }\n\n}; // module.exports\n\nconst Impl = require(\"../websockets/WebSocket-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/WebSocket.js"],"names":["conversions","require","utils","isBlob","is","convertBlob","convert","BinaryType","impl","implSymbol","EventTarget","module","exports","createInterface","defaultPrivateData","WebSocket","interface","constructor","url","arguments","length","TypeError","args","curArg","context","push","undefined","isObject","Symbol","iterator","V","tmp","nextItem","iface","setup","Object","create","new","target","prototype","close","clamp","send","data","ArrayBuffer","SharedArrayBuffer","isView","readyState","bufferedAmount","onopen","tryWrapperForImpl","tryImplForWrapper","onerror","onclose","extensions","protocol","onmessage","binaryType","enumerationValues","has","defineProperties","enumerable","toStringTag","value","configurable","CONNECTING","OPEN","CLOSING","CLOSED","constructorArgs","privateData","obj","createImpl","implForWrapper","_internalSetup","prop","wrapper","defineProperty","Impl","implementation","wrapperSymbol","init","expose","Window","Worker","_mixedIntoPredicates","hasOwn","isMixedInto","isImpl","wrapperForImpl"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst isBlob = require(\"./Blob.js\").is;\nconst convertBlob = require(\"./Blob.js\").convert;\nconst BinaryType = require(\"./BinaryType.js\");\nconst impl = utils.implSymbol;\nconst EventTarget = require(\"./EventTarget.js\");\n\nmodule.exports = {\n  createInterface: function(defaultPrivateData = {}) {\n    class WebSocket extends EventTarget.interface {\n      constructor(url) {\n        if (arguments.length < 1) {\n          throw new TypeError(\n            \"Failed to construct 'WebSocket': 1 argument required, but only \" + arguments.length + \" present.\"\n          );\n        }\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"USVString\"](curArg, { context: \"Failed to construct 'WebSocket': parameter 1\" });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[1];\n          if (curArg !== undefined) {\n            if (utils.isObject(curArg)) {\n              if (curArg[Symbol.iterator] !== undefined) {\n                if (!utils.isObject(curArg)) {\n                  throw new TypeError(\n                    \"Failed to construct 'WebSocket': parameter 2\" + \" sequence\" + \" is not an iterable object.\"\n                  );\n                } else {\n                  const V = [];\n                  const tmp = curArg;\n                  for (let nextItem of tmp) {\n                    nextItem = conversions[\"DOMString\"](nextItem, {\n                      context: \"Failed to construct 'WebSocket': parameter 2\" + \" sequence\" + \"'s element\"\n                    });\n\n                    V.push(nextItem);\n                  }\n                  curArg = V;\n                }\n              } else {\n              }\n            } else {\n              curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'WebSocket': parameter 2\" });\n            }\n          } else {\n            curArg = [];\n          }\n          args.push(curArg);\n        }\n        return iface.setup(Object.create(new.target.prototype), args);\n      }\n\n      close() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n        const args = [];\n        {\n          let curArg = arguments[0];\n          if (curArg !== undefined) {\n            curArg = conversions[\"unsigned short\"](curArg, {\n              context: \"Failed to execute 'close' on 'WebSocket': parameter 1\",\n              clamp: true\n            });\n          }\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[1];\n          if (curArg !== undefined) {\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'close' on 'WebSocket': parameter 2\"\n            });\n          }\n          args.push(curArg);\n        }\n        return this[impl].close(...args);\n      }\n\n      send(data) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\n            \"Failed to execute 'send' on 'WebSocket': 1 argument required, but only \" + arguments.length + \" present.\"\n          );\n        }\n        const args = [];\n        {\n          let curArg = arguments[0];\n          if (isBlob(curArg)) {\n            {\n              let curArg = arguments[0];\n              curArg = convertBlob(curArg, { context: \"Failed to execute 'send' on 'WebSocket': parameter 1\" });\n              args.push(curArg);\n            }\n          } else if (\n            curArg instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== \"undefined\" && curArg instanceof SharedArrayBuffer)\n          ) {\n            {\n              let curArg = arguments[0];\n              curArg = conversions[\"ArrayBuffer\"](curArg, {\n                context: \"Failed to execute 'send' on 'WebSocket': parameter 1\"\n              });\n              args.push(curArg);\n            }\n          } else if (ArrayBuffer.isView(curArg)) {\n            {\n              let curArg = arguments[0];\n              if (ArrayBuffer.isView(curArg)) {\n              } else {\n                throw new TypeError(\n                  \"Failed to execute 'send' on 'WebSocket': parameter 1\" + \" is not of any supported type.\"\n                );\n              }\n              args.push(curArg);\n            }\n          } else {\n            {\n              let curArg = arguments[0];\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'send' on 'WebSocket': parameter 1\"\n              });\n              args.push(curArg);\n            }\n          }\n        }\n        return this[impl].send(...args);\n      }\n\n      get url() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"url\"];\n      }\n\n      get readyState() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"readyState\"];\n      }\n\n      get bufferedAmount() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"bufferedAmount\"];\n      }\n\n      get onopen() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onopen\"]);\n      }\n\n      set onopen(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n\n        this[impl][\"onopen\"] = V;\n      }\n\n      get onerror() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onerror\"]);\n      }\n\n      set onerror(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n\n        this[impl][\"onerror\"] = V;\n      }\n\n      get onclose() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onclose\"]);\n      }\n\n      set onclose(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n\n        this[impl][\"onclose\"] = V;\n      }\n\n      get extensions() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"extensions\"];\n      }\n\n      get protocol() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"protocol\"];\n      }\n\n      get onmessage() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onmessage\"]);\n      }\n\n      set onmessage(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n\n        this[impl][\"onmessage\"] = V;\n      }\n\n      get binaryType() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"binaryType\"]);\n      }\n\n      set binaryType(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = `${V}`;\n        if (!BinaryType.enumerationValues.has(V)) {\n          return;\n        }\n\n        this[impl][\"binaryType\"] = V;\n      }\n    }\n    Object.defineProperties(WebSocket.prototype, {\n      close: { enumerable: true },\n      send: { enumerable: true },\n      url: { enumerable: true },\n      readyState: { enumerable: true },\n      bufferedAmount: { enumerable: true },\n      onopen: { enumerable: true },\n      onerror: { enumerable: true },\n      onclose: { enumerable: true },\n      extensions: { enumerable: true },\n      protocol: { enumerable: true },\n      onmessage: { enumerable: true },\n      binaryType: { enumerable: true },\n      [Symbol.toStringTag]: { value: \"WebSocket\", configurable: true },\n      CONNECTING: { value: 0, enumerable: true },\n      OPEN: { value: 1, enumerable: true },\n      CLOSING: { value: 2, enumerable: true },\n      CLOSED: { value: 3, enumerable: true }\n    });\n    Object.defineProperties(WebSocket, {\n      CONNECTING: { value: 0, enumerable: true },\n      OPEN: { value: 1, enumerable: true },\n      CLOSING: { value: 2, enumerable: true },\n      CLOSED: { value: 3, enumerable: true }\n    });\n    const iface = {\n      create(constructorArgs, privateData) {\n        let obj = Object.create(WebSocket.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return obj;\n      },\n      createImpl(constructorArgs, privateData) {\n        let obj = Object.create(WebSocket.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return utils.implForWrapper(obj);\n      },\n      _internalSetup(obj) {\n        EventTarget._internalSetup(obj);\n      },\n      setup(obj, constructorArgs, privateData) {\n        if (!privateData) privateData = {};\n\n        for (var prop in defaultPrivateData) {\n          if (!(prop in privateData)) {\n            privateData[prop] = defaultPrivateData[prop];\n          }\n        }\n\n        privateData.wrapper = obj;\n\n        this._internalSetup(obj);\n        Object.defineProperty(obj, impl, {\n          value: new Impl.implementation(constructorArgs, privateData),\n          configurable: true\n        });\n\n        obj[impl][utils.wrapperSymbol] = obj;\n        if (Impl.init) {\n          Impl.init(obj[impl], privateData);\n        }\n        return obj;\n      },\n      interface: WebSocket,\n      expose: {\n        Window: { WebSocket },\n        Worker: { WebSocket }\n      }\n    }; // iface\n    return iface;\n  }, // createInterface\n\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'WebSocket'.`);\n  }\n}; // module.exports\n\nconst Impl = require(\"../websockets/WebSocket-impl.js\");\n"]},"metadata":{},"sourceType":"script"}