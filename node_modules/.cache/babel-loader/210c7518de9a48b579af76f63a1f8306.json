{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst isHTMLOptionElement = require(\"./HTMLOptionElement.js\").is;\n\nconst isHTMLOptGroupElement = require(\"./HTMLOptGroupElement.js\").is;\n\nconst isHTMLElement = require(\"./HTMLElement.js\").is;\n\nconst convertHTMLOptionElement = require(\"./HTMLOptionElement.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst HTMLCollection = require(\"./HTMLCollection.js\");\n\nclass HTMLOptionsCollection extends HTMLCollection.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  add(element) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'add' on 'HTMLOptionsCollection': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n\n      if (isHTMLOptionElement(curArg) || isHTMLOptGroupElement(curArg)) {\n        curArg = utils.implForWrapper(curArg);\n      } else {\n        throw new TypeError(\"Failed to execute 'add' on 'HTMLOptionsCollection': parameter 1\" + \" is not of any supported type.\");\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n\n      if (curArg !== undefined) {\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          if (isHTMLElement(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else if (typeof curArg === \"number\") {\n            curArg = conversions[\"long\"](curArg, {\n              context: \"Failed to execute 'add' on 'HTMLOptionsCollection': parameter 2\"\n            });\n          } else {\n            curArg = conversions[\"long\"](curArg, {\n              context: \"Failed to execute 'add' on 'HTMLOptionsCollection': parameter 2\"\n            });\n          }\n        }\n      } else {\n        curArg = null;\n      }\n\n      args.push(curArg);\n    }\n    return this[impl].add(...args);\n  }\n\n  remove(index) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'remove' on 'HTMLOptionsCollection': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"long\"](curArg, {\n        context: \"Failed to execute 'remove' on 'HTMLOptionsCollection': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].remove(...args);\n  }\n\n  get length() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"length\"];\n  }\n\n  set length(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'length' property on 'HTMLOptionsCollection': The provided value\"\n    });\n    this[impl][\"length\"] = V;\n  }\n\n  get selectedIndex() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"selectedIndex\"];\n  }\n\n  set selectedIndex(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"long\"](V, {\n      context: \"Failed to set the 'selectedIndex' property on 'HTMLOptionsCollection': The provided value\"\n    });\n    this[impl][\"selectedIndex\"] = V;\n  }\n\n}\n\nObject.defineProperties(HTMLOptionsCollection.prototype, {\n  add: {\n    enumerable: true\n  },\n  remove: {\n    enumerable: true\n  },\n  length: {\n    enumerable: true\n  },\n  selectedIndex: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"HTMLOptionsCollection\",\n    configurable: true\n  },\n  [Symbol.iterator]: {\n    value: Array.prototype[Symbol.iterator],\n    configurable: true,\n    writable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLOptionsCollection'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLOptionsCollection.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLOptionsCollection.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLCollection._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n\n        const desc = this.getOwnPropertyDescriptor(target, P);\n\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n\n          if (parent === null) {\n            return undefined;\n          }\n\n          return Reflect.get(target, P, receiver);\n        }\n\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n\n        const getter = desc.get;\n\n        if (getter === undefined) {\n          return undefined;\n        }\n\n        return Reflect.apply(getter, receiver, []);\n      },\n\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n\n        const desc = this.getOwnPropertyDescriptor(target, P);\n\n        if (desc !== undefined) {\n          return true;\n        }\n\n        const parent = Object.getPrototypeOf(target);\n\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n\n        return false;\n      },\n\n      ownKeys(target) {\n        const keys = new Set();\n\n        for (const key of target[impl][utils.supportedPropertyIndices]) {\n          keys.add(`${key}`);\n        }\n\n        for (const key of target[impl][utils.supportedPropertyNames]) {\n          if (!(key in target)) {\n            keys.add(`${key}`);\n          }\n        }\n\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n\n        return [...keys];\n      },\n\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n\n        let ignoreNamedProps = false;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n\n          if (indexedValue !== null) {\n            return {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n\n          ignoreNamedProps = true;\n        }\n\n        const namedValue = target[impl].namedItem(P);\n\n        if (namedValue !== null && !(P in target) && !ignoreNamedProps) {\n          return {\n            writable: false,\n            enumerable: true,\n            configurable: true,\n            value: utils.tryWrapperForImpl(namedValue)\n          };\n        }\n\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n\n        if (target === receiver) {\n          if (utils.isArrayIndexPropName(P)) {\n            const index = P >>> 0;\n            let indexedValue = V;\n\n            if (indexedValue === null || indexedValue === undefined) {\n              indexedValue = null;\n            } else {\n              indexedValue = convertHTMLOptionElement(indexedValue, {\n                context: \"Failed to set the \" + index + \" property on 'HTMLOptionsCollection': The provided value\"\n              });\n            }\n\n            const creating = !(target[impl].item(index) !== null);\n\n            if (creating) {\n              target[impl][utils.indexedSetNew](index, indexedValue);\n            } else {\n              target[impl][utils.indexedSetExisting](index, indexedValue);\n            }\n\n            return true;\n          }\n\n          typeof P === \"string\" && !utils.isArrayIndexPropName(P);\n        }\n\n        let ownDesc;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n\n          if (indexedValue !== null) {\n            ownDesc = {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n        }\n\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n\n          ownDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: undefined\n          };\n        }\n\n        if (!ownDesc.writable) {\n          return false;\n        }\n\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n\n          if (!existingDesc.writable) {\n            return false;\n          }\n\n          valueDesc = {\n            value: V\n          };\n        } else {\n          valueDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: V\n          };\n        }\n\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          if (desc.get || desc.set) {\n            return false;\n          }\n\n          const index = P >>> 0;\n          let indexedValue = desc.value;\n\n          if (indexedValue === null || indexedValue === undefined) {\n            indexedValue = null;\n          } else {\n            indexedValue = convertHTMLOptionElement(indexedValue, {\n              context: \"Failed to set the \" + index + \" property on 'HTMLOptionsCollection': The provided value\"\n            });\n          }\n\n          const creating = !(target[impl].item(index) !== null);\n\n          if (creating) {\n            target[impl][utils.indexedSetNew](index, indexedValue);\n          } else {\n            target[impl][utils.indexedSetExisting](index, indexedValue);\n          }\n\n          return true;\n        }\n\n        if (!utils.hasOwn(target, P)) {\n          const creating = !(target[impl].namedItem(P) !== null);\n\n          if (!creating) {\n            return false;\n          }\n        }\n\n        return Reflect.defineProperty(target, P, desc);\n      },\n\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          return !(target[impl].item(index) !== null);\n        }\n\n        if (target[impl].namedItem(P) !== null && !(P in target)) {\n          return false;\n        }\n\n        return Reflect.deleteProperty(target, P);\n      },\n\n      preventExtensions() {\n        return false;\n      }\n\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLOptionsCollection,\n  expose: {\n    Window: {\n      HTMLOptionsCollection\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLOptionsCollection-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLOptionsCollection.js"],"names":["conversions","require","utils","isHTMLOptionElement","is","isHTMLOptGroupElement","isHTMLElement","convertHTMLOptionElement","convert","impl","implSymbol","HTMLCollection","HTMLOptionsCollection","interface","constructor","TypeError","add","element","module","exports","arguments","length","args","curArg","implForWrapper","push","undefined","context","remove","index","V","selectedIndex","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","value","configurable","iterator","Array","writable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","Proxy","get","target","P","receiver","Reflect","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","set","getter","apply","has","ownKeys","keys","Set","key","supportedPropertyIndices","supportedPropertyNames","ignoreNamedProps","isArrayIndexPropName","indexedValue","item","tryWrapperForImpl","namedValue","namedItem","creating","indexedSetNew","indexedSetExisting","ownDesc","isObject","existingDesc","valueDesc","deleteProperty","preventExtensions","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst isHTMLOptionElement = require(\"./HTMLOptionElement.js\").is;\nconst isHTMLOptGroupElement = require(\"./HTMLOptGroupElement.js\").is;\nconst isHTMLElement = require(\"./HTMLElement.js\").is;\nconst convertHTMLOptionElement = require(\"./HTMLOptionElement.js\").convert;\nconst impl = utils.implSymbol;\nconst HTMLCollection = require(\"./HTMLCollection.js\");\n\nclass HTMLOptionsCollection extends HTMLCollection.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  add(element) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'add' on 'HTMLOptionsCollection': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      if (isHTMLOptionElement(curArg) || isHTMLOptGroupElement(curArg)) {\n        curArg = utils.implForWrapper(curArg);\n      } else {\n        throw new TypeError(\n          \"Failed to execute 'add' on 'HTMLOptionsCollection': parameter 1\" + \" is not of any supported type.\"\n        );\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      if (curArg !== undefined) {\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          if (isHTMLElement(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else if (typeof curArg === \"number\") {\n            curArg = conversions[\"long\"](curArg, {\n              context: \"Failed to execute 'add' on 'HTMLOptionsCollection': parameter 2\"\n            });\n          } else {\n            curArg = conversions[\"long\"](curArg, {\n              context: \"Failed to execute 'add' on 'HTMLOptionsCollection': parameter 2\"\n            });\n          }\n        }\n      } else {\n        curArg = null;\n      }\n      args.push(curArg);\n    }\n    return this[impl].add(...args);\n  }\n\n  remove(index) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'remove' on 'HTMLOptionsCollection': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"long\"](curArg, {\n        context: \"Failed to execute 'remove' on 'HTMLOptionsCollection': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].remove(...args);\n  }\n\n  get length() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"length\"];\n  }\n\n  set length(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'length' property on 'HTMLOptionsCollection': The provided value\"\n    });\n\n    this[impl][\"length\"] = V;\n  }\n\n  get selectedIndex() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"selectedIndex\"];\n  }\n\n  set selectedIndex(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"long\"](V, {\n      context: \"Failed to set the 'selectedIndex' property on 'HTMLOptionsCollection': The provided value\"\n    });\n\n    this[impl][\"selectedIndex\"] = V;\n  }\n}\nObject.defineProperties(HTMLOptionsCollection.prototype, {\n  add: { enumerable: true },\n  remove: { enumerable: true },\n  length: { enumerable: true },\n  selectedIndex: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"HTMLOptionsCollection\", configurable: true },\n  [Symbol.iterator]: { value: Array.prototype[Symbol.iterator], configurable: true, writable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLOptionsCollection'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLOptionsCollection.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLOptionsCollection.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLCollection._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n          if (parent === null) {\n            return undefined;\n          }\n          return Reflect.get(target, P, receiver);\n        }\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n        const getter = desc.get;\n        if (getter === undefined) {\n          return undefined;\n        }\n        return Reflect.apply(getter, receiver, []);\n      },\n\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc !== undefined) {\n          return true;\n        }\n        const parent = Object.getPrototypeOf(target);\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n        return false;\n      },\n\n      ownKeys(target) {\n        const keys = new Set();\n\n        for (const key of target[impl][utils.supportedPropertyIndices]) {\n          keys.add(`${key}`);\n        }\n\n        for (const key of target[impl][utils.supportedPropertyNames]) {\n          if (!(key in target)) {\n            keys.add(`${key}`);\n          }\n        }\n\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n        return [...keys];\n      },\n\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        let ignoreNamedProps = false;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n          if (indexedValue !== null) {\n            return {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n          ignoreNamedProps = true;\n        }\n\n        const namedValue = target[impl].namedItem(P);\n\n        if (namedValue !== null && !(P in target) && !ignoreNamedProps) {\n          return {\n            writable: false,\n            enumerable: true,\n            configurable: true,\n            value: utils.tryWrapperForImpl(namedValue)\n          };\n        }\n\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n        if (target === receiver) {\n          if (utils.isArrayIndexPropName(P)) {\n            const index = P >>> 0;\n            let indexedValue = V;\n\n            if (indexedValue === null || indexedValue === undefined) {\n              indexedValue = null;\n            } else {\n              indexedValue = convertHTMLOptionElement(indexedValue, {\n                context: \"Failed to set the \" + index + \" property on 'HTMLOptionsCollection': The provided value\"\n              });\n            }\n\n            const creating = !(target[impl].item(index) !== null);\n            if (creating) {\n              target[impl][utils.indexedSetNew](index, indexedValue);\n            } else {\n              target[impl][utils.indexedSetExisting](index, indexedValue);\n            }\n\n            return true;\n          }\n\n          typeof P === \"string\" && !utils.isArrayIndexPropName(P);\n        }\n        let ownDesc;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n          if (indexedValue !== null) {\n            ownDesc = {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n        }\n\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n          ownDesc = { writable: true, enumerable: true, configurable: true, value: undefined };\n        }\n        if (!ownDesc.writable) {\n          return false;\n        }\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n          if (!existingDesc.writable) {\n            return false;\n          }\n          valueDesc = { value: V };\n        } else {\n          valueDesc = { writable: true, enumerable: true, configurable: true, value: V };\n        }\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          if (desc.get || desc.set) {\n            return false;\n          }\n\n          const index = P >>> 0;\n          let indexedValue = desc.value;\n\n          if (indexedValue === null || indexedValue === undefined) {\n            indexedValue = null;\n          } else {\n            indexedValue = convertHTMLOptionElement(indexedValue, {\n              context: \"Failed to set the \" + index + \" property on 'HTMLOptionsCollection': The provided value\"\n            });\n          }\n\n          const creating = !(target[impl].item(index) !== null);\n          if (creating) {\n            target[impl][utils.indexedSetNew](index, indexedValue);\n          } else {\n            target[impl][utils.indexedSetExisting](index, indexedValue);\n          }\n\n          return true;\n        }\n        if (!utils.hasOwn(target, P)) {\n          const creating = !(target[impl].namedItem(P) !== null);\n          if (!creating) {\n            return false;\n          }\n        }\n        return Reflect.defineProperty(target, P, desc);\n      },\n\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          return !(target[impl].item(index) !== null);\n        }\n\n        if (target[impl].namedItem(P) !== null && !(P in target)) {\n          return false;\n        }\n\n        return Reflect.deleteProperty(target, P);\n      },\n\n      preventExtensions() {\n        return false;\n      }\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLOptionsCollection,\n  expose: {\n    Window: { HTMLOptionsCollection }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLOptionsCollection-impl.js\");\n"]},"metadata":{},"sourceType":"script"}