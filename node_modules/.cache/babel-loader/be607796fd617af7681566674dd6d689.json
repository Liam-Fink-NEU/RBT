{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nmodule.exports = {\n  createInterface: function (defaultPrivateData = {}) {\n    class AbortController {\n      constructor() {\n        return iface.setup(Object.create(new.target.prototype));\n      }\n\n      abort() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl].abort();\n      }\n\n      get signal() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.getSameObject(this, \"signal\", () => {\n          return utils.tryWrapperForImpl(this[impl][\"signal\"]);\n        });\n      }\n\n    }\n\n    Object.defineProperties(AbortController.prototype, {\n      abort: {\n        enumerable: true\n      },\n      signal: {\n        enumerable: true\n      },\n      [Symbol.toStringTag]: {\n        value: \"AbortController\",\n        configurable: true\n      }\n    });\n    const iface = {\n      create(constructorArgs, privateData) {\n        let obj = Object.create(AbortController.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return obj;\n      },\n\n      createImpl(constructorArgs, privateData) {\n        let obj = Object.create(AbortController.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return utils.implForWrapper(obj);\n      },\n\n      _internalSetup(obj) {},\n\n      setup(obj, constructorArgs, privateData) {\n        if (!privateData) privateData = {};\n\n        for (var prop in defaultPrivateData) {\n          if (!(prop in privateData)) {\n            privateData[prop] = defaultPrivateData[prop];\n          }\n        }\n\n        privateData.wrapper = obj;\n\n        this._internalSetup(obj);\n\n        Object.defineProperty(obj, impl, {\n          value: new Impl.implementation(constructorArgs, privateData),\n          configurable: true\n        });\n        obj[impl][utils.wrapperSymbol] = obj;\n\n        if (Impl.init) {\n          Impl.init(obj[impl], privateData);\n        }\n\n        return obj;\n      },\n\n      interface: AbortController,\n      expose: {\n        Window: {\n          AbortController\n        },\n        Worker: {\n          AbortController\n        }\n      }\n    }; // iface\n\n    return iface;\n  },\n  // createInterface\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'AbortController'.`);\n  }\n\n}; // module.exports\n\nconst Impl = require(\"../aborting/AbortController-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/AbortController.js"],"names":["conversions","require","utils","impl","implSymbol","module","exports","createInterface","defaultPrivateData","AbortController","constructor","iface","setup","Object","create","new","target","prototype","abort","is","TypeError","signal","getSameObject","tryWrapperForImpl","defineProperties","enumerable","Symbol","toStringTag","value","configurable","constructorArgs","privateData","obj","createImpl","implForWrapper","_internalSetup","prop","wrapper","defineProperty","Impl","implementation","wrapperSymbol","init","interface","expose","Window","Worker","_mixedIntoPredicates","hasOwn","isMixedInto","isImpl","wrapperForImpl","convert","context"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nmodule.exports = {\n  createInterface: function(defaultPrivateData = {}) {\n    class AbortController {\n      constructor() {\n        return iface.setup(Object.create(new.target.prototype));\n      }\n\n      abort() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl].abort();\n      }\n\n      get signal() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.getSameObject(this, \"signal\", () => {\n          return utils.tryWrapperForImpl(this[impl][\"signal\"]);\n        });\n      }\n    }\n    Object.defineProperties(AbortController.prototype, {\n      abort: { enumerable: true },\n      signal: { enumerable: true },\n      [Symbol.toStringTag]: { value: \"AbortController\", configurable: true }\n    });\n    const iface = {\n      create(constructorArgs, privateData) {\n        let obj = Object.create(AbortController.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return obj;\n      },\n      createImpl(constructorArgs, privateData) {\n        let obj = Object.create(AbortController.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return utils.implForWrapper(obj);\n      },\n      _internalSetup(obj) {},\n      setup(obj, constructorArgs, privateData) {\n        if (!privateData) privateData = {};\n\n        for (var prop in defaultPrivateData) {\n          if (!(prop in privateData)) {\n            privateData[prop] = defaultPrivateData[prop];\n          }\n        }\n\n        privateData.wrapper = obj;\n\n        this._internalSetup(obj);\n        Object.defineProperty(obj, impl, {\n          value: new Impl.implementation(constructorArgs, privateData),\n          configurable: true\n        });\n\n        obj[impl][utils.wrapperSymbol] = obj;\n        if (Impl.init) {\n          Impl.init(obj[impl], privateData);\n        }\n        return obj;\n      },\n      interface: AbortController,\n      expose: {\n        Window: { AbortController },\n        Worker: { AbortController }\n      }\n    }; // iface\n    return iface;\n  }, // createInterface\n\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'AbortController'.`);\n  }\n}; // module.exports\n\nconst Impl = require(\"../aborting/AbortController-impl.js\");\n"]},"metadata":{},"sourceType":"script"}