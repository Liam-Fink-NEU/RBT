{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLTableRowElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  insertCell() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"long\"](curArg, {\n          context: \"Failed to execute 'insertCell' on 'HTMLTableRowElement': parameter 1\"\n        });\n      } else {\n        curArg = -1;\n      }\n\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].insertCell(...args));\n  }\n\n  deleteCell(index) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'deleteCell' on 'HTMLTableRowElement': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"long\"](curArg, {\n        context: \"Failed to execute 'deleteCell' on 'HTMLTableRowElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].deleteCell(...args);\n  }\n\n  get rowIndex() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"rowIndex\"];\n  }\n\n  get sectionRowIndex() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"sectionRowIndex\"];\n  }\n\n  get cells() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"cells\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"cells\"]);\n    });\n  }\n\n  get align() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"align\");\n    return value === null ? \"\" : value;\n  }\n\n  set align(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLTableRowElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"align\", V);\n  }\n\n  get ch() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"char\");\n    return value === null ? \"\" : value;\n  }\n\n  set ch(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'ch' property on 'HTMLTableRowElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"char\", V);\n  }\n\n  get chOff() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"charoff\");\n    return value === null ? \"\" : value;\n  }\n\n  set chOff(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'chOff' property on 'HTMLTableRowElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"charoff\", V);\n  }\n\n  get vAlign() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"valign\");\n    return value === null ? \"\" : value;\n  }\n\n  set vAlign(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'vAlign' property on 'HTMLTableRowElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"valign\", V);\n  }\n\n  get bgColor() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"bgcolor\");\n    return value === null ? \"\" : value;\n  }\n\n  set bgColor(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'bgColor' property on 'HTMLTableRowElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n    this.setAttributeNS(null, \"bgcolor\", V);\n  }\n\n}\n\nObject.defineProperties(HTMLTableRowElement.prototype, {\n  insertCell: {\n    enumerable: true\n  },\n  deleteCell: {\n    enumerable: true\n  },\n  rowIndex: {\n    enumerable: true\n  },\n  sectionRowIndex: {\n    enumerable: true\n  },\n  cells: {\n    enumerable: true\n  },\n  align: {\n    enumerable: true\n  },\n  ch: {\n    enumerable: true\n  },\n  chOff: {\n    enumerable: true\n  },\n  vAlign: {\n    enumerable: true\n  },\n  bgColor: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"HTMLTableRowElement\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLTableRowElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableRowElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableRowElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLTableRowElement,\n  expose: {\n    Window: {\n      HTMLTableRowElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLTableRowElement-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableRowElement.js"],"names":["conversions","require","utils","impl","implSymbol","HTMLElement","HTMLTableRowElement","interface","constructor","TypeError","insertCell","module","exports","is","args","curArg","arguments","undefined","context","push","tryWrapperForImpl","deleteCell","index","length","rowIndex","sectionRowIndex","cells","getSameObject","align","value","getAttributeNS","V","setAttributeNS","ch","chOff","vAlign","bgColor","treatNullAsEmptyString","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLTableRowElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  insertCell() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      if (curArg !== undefined) {\n        curArg = conversions[\"long\"](curArg, {\n          context: \"Failed to execute 'insertCell' on 'HTMLTableRowElement': parameter 1\"\n        });\n      } else {\n        curArg = -1;\n      }\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].insertCell(...args));\n  }\n\n  deleteCell(index) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'deleteCell' on 'HTMLTableRowElement': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"long\"](curArg, {\n        context: \"Failed to execute 'deleteCell' on 'HTMLTableRowElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].deleteCell(...args);\n  }\n\n  get rowIndex() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"rowIndex\"];\n  }\n\n  get sectionRowIndex() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"sectionRowIndex\"];\n  }\n\n  get cells() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"cells\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"cells\"]);\n    });\n  }\n\n  get align() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"align\");\n    return value === null ? \"\" : value;\n  }\n\n  set align(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLTableRowElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"align\", V);\n  }\n\n  get ch() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"char\");\n    return value === null ? \"\" : value;\n  }\n\n  set ch(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'ch' property on 'HTMLTableRowElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"char\", V);\n  }\n\n  get chOff() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"charoff\");\n    return value === null ? \"\" : value;\n  }\n\n  set chOff(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'chOff' property on 'HTMLTableRowElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"charoff\", V);\n  }\n\n  get vAlign() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"valign\");\n    return value === null ? \"\" : value;\n  }\n\n  set vAlign(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'vAlign' property on 'HTMLTableRowElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"valign\", V);\n  }\n\n  get bgColor() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"bgcolor\");\n    return value === null ? \"\" : value;\n  }\n\n  set bgColor(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'bgColor' property on 'HTMLTableRowElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n\n    this.setAttributeNS(null, \"bgcolor\", V);\n  }\n}\nObject.defineProperties(HTMLTableRowElement.prototype, {\n  insertCell: { enumerable: true },\n  deleteCell: { enumerable: true },\n  rowIndex: { enumerable: true },\n  sectionRowIndex: { enumerable: true },\n  cells: { enumerable: true },\n  align: { enumerable: true },\n  ch: { enumerable: true },\n  chOff: { enumerable: true },\n  vAlign: { enumerable: true },\n  bgColor: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"HTMLTableRowElement\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLTableRowElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableRowElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableRowElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLTableRowElement,\n  expose: {\n    Window: { HTMLTableRowElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLTableRowElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}