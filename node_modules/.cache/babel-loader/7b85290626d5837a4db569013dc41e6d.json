{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst isNode = require(\"./Node.js\").is;\n\nconst impl = utils.implSymbol;\n\nconst Node = require(\"./Node.js\");\n\nconst ChildNode = require(\"./ChildNode.js\");\n\nclass DocumentType extends Node.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  before() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const args = [];\n\n    for (let i = 0; i < arguments.length; i++) {\n      let curArg = arguments[i];\n\n      if (isNode(curArg)) {\n        curArg = utils.implForWrapper(curArg);\n      } else {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'before' on 'DocumentType': parameter \" + (i + 1)\n        });\n      }\n\n      args.push(curArg);\n    }\n\n    return this[impl].before(...args);\n  }\n\n  after() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const args = [];\n\n    for (let i = 0; i < arguments.length; i++) {\n      let curArg = arguments[i];\n\n      if (isNode(curArg)) {\n        curArg = utils.implForWrapper(curArg);\n      } else {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'after' on 'DocumentType': parameter \" + (i + 1)\n        });\n      }\n\n      args.push(curArg);\n    }\n\n    return this[impl].after(...args);\n  }\n\n  replaceWith() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const args = [];\n\n    for (let i = 0; i < arguments.length; i++) {\n      let curArg = arguments[i];\n\n      if (isNode(curArg)) {\n        curArg = utils.implForWrapper(curArg);\n      } else {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'replaceWith' on 'DocumentType': parameter \" + (i + 1)\n        });\n      }\n\n      args.push(curArg);\n    }\n\n    return this[impl].replaceWith(...args);\n  }\n\n  remove() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].remove();\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"name\"];\n  }\n\n  get publicId() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"publicId\"];\n  }\n\n  get systemId() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"systemId\"];\n  }\n\n}\n\nObject.defineProperties(DocumentType.prototype, {\n  before: {\n    enumerable: true\n  },\n  after: {\n    enumerable: true\n  },\n  replaceWith: {\n    enumerable: true\n  },\n  remove: {\n    enumerable: true\n  },\n  name: {\n    enumerable: true\n  },\n  publicId: {\n    enumerable: true\n  },\n  systemId: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"DocumentType\",\n    configurable: true\n  },\n  [Symbol.unscopables]: {\n    value: {\n      before: true,\n      after: true,\n      replaceWith: true,\n      remove: true\n    },\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'DocumentType'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(DocumentType.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(DocumentType.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    Node._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: DocumentType,\n  expose: {\n    Window: {\n      DocumentType\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nChildNode._mixedIntoPredicates.push(module.exports.is);\n\nconst Impl = require(\"../nodes/DocumentType-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/DocumentType.js"],"names":["conversions","require","utils","isNode","is","impl","implSymbol","Node","ChildNode","DocumentType","interface","constructor","TypeError","before","module","exports","args","i","arguments","length","curArg","implForWrapper","context","push","after","replaceWith","remove","name","publicId","systemId","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","value","configurable","unscopables","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,MAAM,GAAGF,OAAO,CAAC,WAAD,CAAP,CAAqBG,EAApC;;AACA,MAAMC,IAAI,GAAGH,KAAK,CAACI,UAAnB;;AACA,MAAMC,IAAI,GAAGN,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMO,SAAS,GAAGP,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAMQ,YAAN,SAA2BF,IAAI,CAACG,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,GAAG;AACZ,UAAM,IAAIC,SAAJ,CAAc,qBAAd,CAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,IAAD,IAAS,CAACC,MAAM,CAACC,OAAP,CAAeX,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIQ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AACD,UAAMI,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AACA,UAAId,MAAM,CAACiB,MAAD,CAAV,EAAoB;AAClBA,QAAAA,MAAM,GAAGlB,KAAK,CAACmB,cAAN,CAAqBD,MAArB,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,GAAGpB,WAAW,CAAC,WAAD,CAAX,CAAyBoB,MAAzB,EAAiC;AACxCE,UAAAA,OAAO,EAAE,8DAA8DL,CAAC,GAAG,CAAlE;AAD+B,SAAjC,CAAT;AAGD;;AACDD,MAAAA,IAAI,CAACO,IAAL,CAAUH,MAAV;AACD;;AACD,WAAO,KAAKf,IAAL,EAAWQ,MAAX,CAAkB,GAAGG,IAArB,CAAP;AACD;;AAEDQ,EAAAA,KAAK,GAAG;AACN,QAAI,CAAC,IAAD,IAAS,CAACV,MAAM,CAACC,OAAP,CAAeX,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIQ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AACD,UAAMI,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AACA,UAAId,MAAM,CAACiB,MAAD,CAAV,EAAoB;AAClBA,QAAAA,MAAM,GAAGlB,KAAK,CAACmB,cAAN,CAAqBD,MAArB,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,GAAGpB,WAAW,CAAC,WAAD,CAAX,CAAyBoB,MAAzB,EAAiC;AACxCE,UAAAA,OAAO,EAAE,6DAA6DL,CAAC,GAAG,CAAjE;AAD+B,SAAjC,CAAT;AAGD;;AACDD,MAAAA,IAAI,CAACO,IAAL,CAAUH,MAAV;AACD;;AACD,WAAO,KAAKf,IAAL,EAAWmB,KAAX,CAAiB,GAAGR,IAApB,CAAP;AACD;;AAEDS,EAAAA,WAAW,GAAG;AACZ,QAAI,CAAC,IAAD,IAAS,CAACX,MAAM,CAACC,OAAP,CAAeX,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIQ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AACD,UAAMI,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AACA,UAAId,MAAM,CAACiB,MAAD,CAAV,EAAoB;AAClBA,QAAAA,MAAM,GAAGlB,KAAK,CAACmB,cAAN,CAAqBD,MAArB,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,GAAGpB,WAAW,CAAC,WAAD,CAAX,CAAyBoB,MAAzB,EAAiC;AACxCE,UAAAA,OAAO,EAAE,mEAAmEL,CAAC,GAAG,CAAvE;AAD+B,SAAjC,CAAT;AAGD;;AACDD,MAAAA,IAAI,CAACO,IAAL,CAAUH,MAAV;AACD;;AACD,WAAO,KAAKf,IAAL,EAAWoB,WAAX,CAAuB,GAAGT,IAA1B,CAAP;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,IAAD,IAAS,CAACZ,MAAM,CAACC,OAAP,CAAeX,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIQ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKP,IAAL,EAAWqB,MAAX,EAAP;AACD;;AAED,MAAIC,IAAJ,GAAW;AACT,QAAI,CAAC,IAAD,IAAS,CAACb,MAAM,CAACC,OAAP,CAAeX,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIQ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKP,IAAL,EAAW,MAAX,CAAP;AACD;;AAED,MAAIuB,QAAJ,GAAe;AACb,QAAI,CAAC,IAAD,IAAS,CAACd,MAAM,CAACC,OAAP,CAAeX,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIQ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKP,IAAL,EAAW,UAAX,CAAP;AACD;;AAED,MAAIwB,QAAJ,GAAe;AACb,QAAI,CAAC,IAAD,IAAS,CAACf,MAAM,CAACC,OAAP,CAAeX,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIQ,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKP,IAAL,EAAW,UAAX,CAAP;AACD;;AA5FuC;;AA8F1CyB,MAAM,CAACC,gBAAP,CAAwBtB,YAAY,CAACuB,SAArC,EAAgD;AAC9CnB,EAAAA,MAAM,EAAE;AAAEoB,IAAAA,UAAU,EAAE;AAAd,GADsC;AAE9CT,EAAAA,KAAK,EAAE;AAAES,IAAAA,UAAU,EAAE;AAAd,GAFuC;AAG9CR,EAAAA,WAAW,EAAE;AAAEQ,IAAAA,UAAU,EAAE;AAAd,GAHiC;AAI9CP,EAAAA,MAAM,EAAE;AAAEO,IAAAA,UAAU,EAAE;AAAd,GAJsC;AAK9CN,EAAAA,IAAI,EAAE;AAAEM,IAAAA,UAAU,EAAE;AAAd,GALwC;AAM9CL,EAAAA,QAAQ,EAAE;AAAEK,IAAAA,UAAU,EAAE;AAAd,GANoC;AAO9CJ,EAAAA,QAAQ,EAAE;AAAEI,IAAAA,UAAU,EAAE;AAAd,GAPoC;AAQ9C,GAACC,MAAM,CAACC,WAAR,GAAsB;AAAEC,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,YAAY,EAAE;AAAvC,GARwB;AAS9C,GAACH,MAAM,CAACI,WAAR,GAAsB;AAAEF,IAAAA,KAAK,EAAE;AAAEvB,MAAAA,MAAM,EAAE,IAAV;AAAgBW,MAAAA,KAAK,EAAE,IAAvB;AAA6BC,MAAAA,WAAW,EAAE,IAA1C;AAAgDC,MAAAA,MAAM,EAAE;AAAxD,KAAT;AAAyEW,IAAAA,YAAY,EAAE;AAAvF;AATwB,CAAhD;AAWA,MAAME,KAAK,GAAG;AACZ;AACA;AACA;AACAC,EAAAA,oBAAoB,EAAE,EAJV;;AAKZpC,EAAAA,EAAE,CAACqC,GAAD,EAAM;AACN,QAAIA,GAAJ,EAAS;AACP,UAAIvC,KAAK,CAACwC,MAAN,CAAaD,GAAb,EAAkBpC,IAAlB,KAA2BoC,GAAG,CAACpC,IAAD,CAAH,YAAqBsC,IAAI,CAACC,cAAzD,EAAyE;AACvE,eAAO,IAAP;AACD;;AACD,WAAK,MAAMC,WAAX,IAA0B/B,MAAM,CAACC,OAAP,CAAeyB,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACJ,GAAD,CAAf,EAAsB;AACpB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAjBW;;AAkBZK,EAAAA,MAAM,CAACL,GAAD,EAAM;AACV,QAAIA,GAAJ,EAAS;AACP,UAAIA,GAAG,YAAYE,IAAI,CAACC,cAAxB,EAAwC;AACtC,eAAO,IAAP;AACD;;AAED,YAAMG,OAAO,GAAG7C,KAAK,CAAC8C,cAAN,CAAqBP,GAArB,CAAhB;;AACA,WAAK,MAAMI,WAAX,IAA0B/B,MAAM,CAACC,OAAP,CAAeyB,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACE,OAAD,CAAf,EAA0B;AACxB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAhCW;;AAiCZE,EAAAA,OAAO,CAACR,GAAD,EAAM;AAAEnB,IAAAA,OAAO,GAAG;AAAZ,MAAqC,EAA3C,EAA+C;AACpD,QAAIR,MAAM,CAACC,OAAP,CAAeX,EAAf,CAAkBqC,GAAlB,CAAJ,EAA4B;AAC1B,aAAOvC,KAAK,CAACmB,cAAN,CAAqBoB,GAArB,CAAP;AACD;;AACD,UAAM,IAAI7B,SAAJ,CAAe,GAAEU,OAAQ,iCAAzB,CAAN;AACD,GAtCW;;AAwCZ4B,EAAAA,MAAM,CAACC,eAAD,EAAkBC,WAAlB,EAA+B;AACnC,QAAIX,GAAG,GAAGX,MAAM,CAACoB,MAAP,CAAczC,YAAY,CAACuB,SAA3B,CAAV;AACAS,IAAAA,GAAG,GAAG,KAAKY,KAAL,CAAWZ,GAAX,EAAgBU,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOX,GAAP;AACD,GA5CW;;AA6CZa,EAAAA,UAAU,CAACH,eAAD,EAAkBC,WAAlB,EAA+B;AACvC,QAAIX,GAAG,GAAGX,MAAM,CAACoB,MAAP,CAAczC,YAAY,CAACuB,SAA3B,CAAV;AACAS,IAAAA,GAAG,GAAG,KAAKY,KAAL,CAAWZ,GAAX,EAAgBU,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOlD,KAAK,CAACmB,cAAN,CAAqBoB,GAArB,CAAP;AACD,GAjDW;;AAkDZc,EAAAA,cAAc,CAACd,GAAD,EAAM;AAClBlC,IAAAA,IAAI,CAACgD,cAAL,CAAoBd,GAApB;AACD,GApDW;;AAqDZY,EAAAA,KAAK,CAACZ,GAAD,EAAMU,eAAN,EAAuBC,WAAvB,EAAoC;AACvC,QAAI,CAACA,WAAL,EAAkBA,WAAW,GAAG,EAAd;AAElBA,IAAAA,WAAW,CAACL,OAAZ,GAAsBN,GAAtB;;AAEA,SAAKc,cAAL,CAAoBd,GAApB;;AACAX,IAAAA,MAAM,CAAC0B,cAAP,CAAsBf,GAAtB,EAA2BpC,IAA3B,EAAiC;AAC/B+B,MAAAA,KAAK,EAAE,IAAIO,IAAI,CAACC,cAAT,CAAwBO,eAAxB,EAAyCC,WAAzC,CADwB;AAE/Bf,MAAAA,YAAY,EAAE;AAFiB,KAAjC;AAKAI,IAAAA,GAAG,CAACpC,IAAD,CAAH,CAAUH,KAAK,CAACuD,aAAhB,IAAiChB,GAAjC;;AACA,QAAIE,IAAI,CAACe,IAAT,EAAe;AACbf,MAAAA,IAAI,CAACe,IAAL,CAAUjB,GAAG,CAACpC,IAAD,CAAb,EAAqB+C,WAArB;AACD;;AACD,WAAOX,GAAP;AACD,GArEW;;AAsEZ/B,EAAAA,SAAS,EAAED,YAtEC;AAuEZkD,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAEnD,MAAAA;AAAF;AADF;AAvEI,CAAd,C,CA0EG;;AACHK,MAAM,CAACC,OAAP,GAAiBwB,KAAjB;;AAEA/B,SAAS,CAACgC,oBAAV,CAA+BjB,IAA/B,CAAoCT,MAAM,CAACC,OAAP,CAAeX,EAAnD;;AAEA,MAAMuC,IAAI,GAAG1C,OAAO,CAAC,+BAAD,CAApB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst isNode = require(\"./Node.js\").is;\nconst impl = utils.implSymbol;\nconst Node = require(\"./Node.js\");\nconst ChildNode = require(\"./ChildNode.js\");\n\nclass DocumentType extends Node.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  before() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    const args = [];\n    for (let i = 0; i < arguments.length; i++) {\n      let curArg = arguments[i];\n      if (isNode(curArg)) {\n        curArg = utils.implForWrapper(curArg);\n      } else {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'before' on 'DocumentType': parameter \" + (i + 1)\n        });\n      }\n      args.push(curArg);\n    }\n    return this[impl].before(...args);\n  }\n\n  after() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    const args = [];\n    for (let i = 0; i < arguments.length; i++) {\n      let curArg = arguments[i];\n      if (isNode(curArg)) {\n        curArg = utils.implForWrapper(curArg);\n      } else {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'after' on 'DocumentType': parameter \" + (i + 1)\n        });\n      }\n      args.push(curArg);\n    }\n    return this[impl].after(...args);\n  }\n\n  replaceWith() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    const args = [];\n    for (let i = 0; i < arguments.length; i++) {\n      let curArg = arguments[i];\n      if (isNode(curArg)) {\n        curArg = utils.implForWrapper(curArg);\n      } else {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'replaceWith' on 'DocumentType': parameter \" + (i + 1)\n        });\n      }\n      args.push(curArg);\n    }\n    return this[impl].replaceWith(...args);\n  }\n\n  remove() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].remove();\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"name\"];\n  }\n\n  get publicId() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"publicId\"];\n  }\n\n  get systemId() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"systemId\"];\n  }\n}\nObject.defineProperties(DocumentType.prototype, {\n  before: { enumerable: true },\n  after: { enumerable: true },\n  replaceWith: { enumerable: true },\n  remove: { enumerable: true },\n  name: { enumerable: true },\n  publicId: { enumerable: true },\n  systemId: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"DocumentType\", configurable: true },\n  [Symbol.unscopables]: { value: { before: true, after: true, replaceWith: true, remove: true }, configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'DocumentType'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(DocumentType.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(DocumentType.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    Node._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: DocumentType,\n  expose: {\n    Window: { DocumentType }\n  }\n}; // iface\nmodule.exports = iface;\n\nChildNode._mixedIntoPredicates.push(module.exports.is);\n\nconst Impl = require(\"../nodes/DocumentType-impl.js\");\n"]},"metadata":{},"sourceType":"script"}