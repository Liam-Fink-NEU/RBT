{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass SVGNumber {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"float\"](V, {\n      context: \"Failed to set the 'value' property on 'SVGNumber': The provided value\"\n    });\n    this[impl][\"value\"] = V;\n  }\n\n}\n\nObject.defineProperties(SVGNumber.prototype, {\n  value: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"SVGNumber\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'SVGNumber'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(SVGNumber.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(SVGNumber.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: SVGNumber,\n  expose: {\n    Window: {\n      SVGNumber\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../svg/SVGNumber-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/SVGNumber.js"],"names":["conversions","require","utils","impl","implSymbol","SVGNumber","constructor","TypeError","value","module","exports","is","V","context","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass SVGNumber {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"float\"](V, { context: \"Failed to set the 'value' property on 'SVGNumber': The provided value\" });\n\n    this[impl][\"value\"] = V;\n  }\n}\nObject.defineProperties(SVGNumber.prototype, {\n  value: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"SVGNumber\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'SVGNumber'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(SVGNumber.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(SVGNumber.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: SVGNumber,\n  expose: {\n    Window: { SVGNumber }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../svg/SVGNumber-impl.js\");\n"]},"metadata":{},"sourceType":"script"}