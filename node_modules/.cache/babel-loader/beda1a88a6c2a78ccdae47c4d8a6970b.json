{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertKeyboardEventInit = require(\"./KeyboardEventInit.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst UIEvent = require(\"./UIEvent.js\");\n\nclass KeyboardEvent extends UIEvent.interface {\n  constructor(type) {\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to construct 'KeyboardEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to construct 'KeyboardEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = convertKeyboardEventInit(curArg, {\n        context: \"Failed to construct 'KeyboardEvent': parameter 2\"\n      });\n      args.push(curArg);\n    }\n    return iface.setup(Object.create(new.target.prototype), args);\n  }\n\n  getModifierState(keyArg) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'getModifierState' on 'KeyboardEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'getModifierState' on 'KeyboardEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].getModifierState(...args);\n  }\n\n  initKeyboardEvent(typeArg) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 2\"\n        });\n      } else {\n        curArg = false;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[2];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 3\"\n        });\n      } else {\n        curArg = false;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[3];\n\n      if (curArg !== undefined) {\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          curArg = utils.tryImplForWrapper(curArg);\n        }\n      } else {\n        curArg = null;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[4];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 5\"\n        });\n      } else {\n        curArg = \"\";\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[5];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 6\"\n        });\n      } else {\n        curArg = 0;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[6];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 7\"\n        });\n      } else {\n        curArg = false;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[7];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 8\"\n        });\n      } else {\n        curArg = false;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[8];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 9\"\n        });\n      } else {\n        curArg = false;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[9];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 10\"\n        });\n      } else {\n        curArg = false;\n      }\n\n      args.push(curArg);\n    }\n    return this[impl].initKeyboardEvent(...args);\n  }\n\n  get key() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"key\"];\n  }\n\n  get code() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"code\"];\n  }\n\n  get location() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"location\"];\n  }\n\n  get ctrlKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"ctrlKey\"];\n  }\n\n  get shiftKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"shiftKey\"];\n  }\n\n  get altKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"altKey\"];\n  }\n\n  get metaKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"metaKey\"];\n  }\n\n  get repeat() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"repeat\"];\n  }\n\n  get isComposing() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"isComposing\"];\n  }\n\n  get charCode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"charCode\"];\n  }\n\n  get keyCode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"keyCode\"];\n  }\n\n}\n\nObject.defineProperties(KeyboardEvent.prototype, {\n  getModifierState: {\n    enumerable: true\n  },\n  initKeyboardEvent: {\n    enumerable: true\n  },\n  key: {\n    enumerable: true\n  },\n  code: {\n    enumerable: true\n  },\n  location: {\n    enumerable: true\n  },\n  ctrlKey: {\n    enumerable: true\n  },\n  shiftKey: {\n    enumerable: true\n  },\n  altKey: {\n    enumerable: true\n  },\n  metaKey: {\n    enumerable: true\n  },\n  repeat: {\n    enumerable: true\n  },\n  isComposing: {\n    enumerable: true\n  },\n  charCode: {\n    enumerable: true\n  },\n  keyCode: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"KeyboardEvent\",\n    configurable: true\n  },\n  DOM_KEY_LOCATION_STANDARD: {\n    value: 0x00,\n    enumerable: true\n  },\n  DOM_KEY_LOCATION_LEFT: {\n    value: 0x01,\n    enumerable: true\n  },\n  DOM_KEY_LOCATION_RIGHT: {\n    value: 0x02,\n    enumerable: true\n  },\n  DOM_KEY_LOCATION_NUMPAD: {\n    value: 0x03,\n    enumerable: true\n  }\n});\nObject.defineProperties(KeyboardEvent, {\n  DOM_KEY_LOCATION_STANDARD: {\n    value: 0x00,\n    enumerable: true\n  },\n  DOM_KEY_LOCATION_LEFT: {\n    value: 0x01,\n    enumerable: true\n  },\n  DOM_KEY_LOCATION_RIGHT: {\n    value: 0x02,\n    enumerable: true\n  },\n  DOM_KEY_LOCATION_NUMPAD: {\n    value: 0x03,\n    enumerable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'KeyboardEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(KeyboardEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(KeyboardEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    UIEvent._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: KeyboardEvent,\n  expose: {\n    Window: {\n      KeyboardEvent\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../events/KeyboardEvent-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/KeyboardEvent.js"],"names":["conversions","require","utils","convertKeyboardEventInit","convert","impl","implSymbol","UIEvent","KeyboardEvent","interface","constructor","type","arguments","length","TypeError","args","curArg","context","push","iface","setup","Object","create","new","target","prototype","getModifierState","keyArg","module","exports","is","initKeyboardEvent","typeArg","undefined","tryImplForWrapper","key","code","location","ctrlKey","shiftKey","altKey","metaKey","repeat","isComposing","charCode","keyCode","defineProperties","enumerable","Symbol","toStringTag","value","configurable","DOM_KEY_LOCATION_STANDARD","DOM_KEY_LOCATION_LEFT","DOM_KEY_LOCATION_RIGHT","DOM_KEY_LOCATION_NUMPAD","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","constructorArgs","privateData","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,wBAAwB,GAAGF,OAAO,CAAC,wBAAD,CAAP,CAAkCG,OAAnE;;AACA,MAAMC,IAAI,GAAGH,KAAK,CAACI,UAAnB;;AACA,MAAMC,OAAO,GAAGN,OAAO,CAAC,cAAD,CAAvB;;AAEA,MAAMO,aAAN,SAA4BD,OAAO,CAACE,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,QAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,YAAM,IAAIC,SAAJ,CACJ,wEAAwEF,SAAS,CAACC,MAAlF,GAA2F,WADvF,CAAN;AAGD;;AACD,UAAME,IAAI,GAAG,EAAb;AACA;AACE,UAAIC,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;AACAI,MAAAA,MAAM,GAAGhB,WAAW,CAAC,WAAD,CAAX,CAAyBgB,MAAzB,EAAiC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAjC,CAAT;AACAF,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD;AACE,UAAIA,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;AACAI,MAAAA,MAAM,GAAGb,wBAAwB,CAACa,MAAD,EAAS;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT,CAAjC;AACAF,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD,WAAOG,KAAK,CAACC,KAAN,CAAYC,MAAM,CAACC,MAAP,CAAcC,GAAG,CAACC,MAAJ,CAAWC,SAAzB,CAAZ,EAAiDV,IAAjD,CAAP;AACD;;AAEDW,EAAAA,gBAAgB,CAACC,MAAD,EAAS;AACvB,QAAI,CAAC,IAAD,IAAS,CAACC,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,QAAIF,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,YAAM,IAAIC,SAAJ,CACJ,4FACEF,SAAS,CAACC,MADZ,GAEE,WAHE,CAAN;AAKD;;AACD,UAAME,IAAI,GAAG,EAAb;AACA;AACE,UAAIC,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;AACAI,MAAAA,MAAM,GAAGhB,WAAW,CAAC,WAAD,CAAX,CAAyBgB,MAAzB,EAAiC;AACxCC,QAAAA,OAAO,EAAE;AAD+B,OAAjC,CAAT;AAGAF,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD,WAAO,KAAKX,IAAL,EAAWqB,gBAAX,CAA4B,GAAGX,IAA/B,CAAP;AACD;;AAEDgB,EAAAA,iBAAiB,CAACC,OAAD,EAAU;AACzB,QAAI,CAAC,IAAD,IAAS,CAACJ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,QAAIF,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,YAAM,IAAIC,SAAJ,CACJ,6FACEF,SAAS,CAACC,MADZ,GAEE,WAHE,CAAN;AAKD;;AACD,UAAME,IAAI,GAAG,EAAb;AACA;AACE,UAAIC,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;AACAI,MAAAA,MAAM,GAAGhB,WAAW,CAAC,WAAD,CAAX,CAAyBgB,MAAzB,EAAiC;AACxCC,QAAAA,OAAO,EAAE;AAD+B,OAAjC,CAAT;AAGAF,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD;AACE,UAAIA,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;;AACA,UAAII,MAAM,KAAKiB,SAAf,EAA0B;AACxBjB,QAAAA,MAAM,GAAGhB,WAAW,CAAC,SAAD,CAAX,CAAuBgB,MAAvB,EAA+B;AACtCC,UAAAA,OAAO,EAAE;AAD6B,SAA/B,CAAT;AAGD,OAJD,MAIO;AACLD,QAAAA,MAAM,GAAG,KAAT;AACD;;AACDD,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD;AACE,UAAIA,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;;AACA,UAAII,MAAM,KAAKiB,SAAf,EAA0B;AACxBjB,QAAAA,MAAM,GAAGhB,WAAW,CAAC,SAAD,CAAX,CAAuBgB,MAAvB,EAA+B;AACtCC,UAAAA,OAAO,EAAE;AAD6B,SAA/B,CAAT;AAGD,OAJD,MAIO;AACLD,QAAAA,MAAM,GAAG,KAAT;AACD;;AACDD,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD;AACE,UAAIA,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;;AACA,UAAII,MAAM,KAAKiB,SAAf,EAA0B;AACxB,YAAIjB,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKiB,SAAlC,EAA6C;AAC3CjB,UAAAA,MAAM,GAAG,IAAT;AACD,SAFD,MAEO;AACLA,UAAAA,MAAM,GAAGd,KAAK,CAACgC,iBAAN,CAAwBlB,MAAxB,CAAT;AACD;AACF,OAND,MAMO;AACLA,QAAAA,MAAM,GAAG,IAAT;AACD;;AACDD,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD;AACE,UAAIA,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;;AACA,UAAII,MAAM,KAAKiB,SAAf,EAA0B;AACxBjB,QAAAA,MAAM,GAAGhB,WAAW,CAAC,WAAD,CAAX,CAAyBgB,MAAzB,EAAiC;AACxCC,UAAAA,OAAO,EAAE;AAD+B,SAAjC,CAAT;AAGD,OAJD,MAIO;AACLD,QAAAA,MAAM,GAAG,EAAT;AACD;;AACDD,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD;AACE,UAAIA,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;;AACA,UAAII,MAAM,KAAKiB,SAAf,EAA0B;AACxBjB,QAAAA,MAAM,GAAGhB,WAAW,CAAC,eAAD,CAAX,CAA6BgB,MAA7B,EAAqC;AAC5CC,UAAAA,OAAO,EAAE;AADmC,SAArC,CAAT;AAGD,OAJD,MAIO;AACLD,QAAAA,MAAM,GAAG,CAAT;AACD;;AACDD,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD;AACE,UAAIA,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;;AACA,UAAII,MAAM,KAAKiB,SAAf,EAA0B;AACxBjB,QAAAA,MAAM,GAAGhB,WAAW,CAAC,SAAD,CAAX,CAAuBgB,MAAvB,EAA+B;AACtCC,UAAAA,OAAO,EAAE;AAD6B,SAA/B,CAAT;AAGD,OAJD,MAIO;AACLD,QAAAA,MAAM,GAAG,KAAT;AACD;;AACDD,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD;AACE,UAAIA,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;;AACA,UAAII,MAAM,KAAKiB,SAAf,EAA0B;AACxBjB,QAAAA,MAAM,GAAGhB,WAAW,CAAC,SAAD,CAAX,CAAuBgB,MAAvB,EAA+B;AACtCC,UAAAA,OAAO,EAAE;AAD6B,SAA/B,CAAT;AAGD,OAJD,MAIO;AACLD,QAAAA,MAAM,GAAG,KAAT;AACD;;AACDD,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD;AACE,UAAIA,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;;AACA,UAAII,MAAM,KAAKiB,SAAf,EAA0B;AACxBjB,QAAAA,MAAM,GAAGhB,WAAW,CAAC,SAAD,CAAX,CAAuBgB,MAAvB,EAA+B;AACtCC,UAAAA,OAAO,EAAE;AAD6B,SAA/B,CAAT;AAGD,OAJD,MAIO;AACLD,QAAAA,MAAM,GAAG,KAAT;AACD;;AACDD,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD;AACE,UAAIA,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAtB;;AACA,UAAII,MAAM,KAAKiB,SAAf,EAA0B;AACxBjB,QAAAA,MAAM,GAAGhB,WAAW,CAAC,SAAD,CAAX,CAAuBgB,MAAvB,EAA+B;AACtCC,UAAAA,OAAO,EAAE;AAD6B,SAA/B,CAAT;AAGD,OAJD,MAIO;AACLD,QAAAA,MAAM,GAAG,KAAT;AACD;;AACDD,MAAAA,IAAI,CAACG,IAAL,CAAUF,MAAV;AACD;AACD,WAAO,KAAKX,IAAL,EAAW0B,iBAAX,CAA6B,GAAGhB,IAAhC,CAAP;AACD;;AAED,MAAIoB,GAAJ,GAAU;AACR,QAAI,CAAC,IAAD,IAAS,CAACP,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,KAAX,CAAP;AACD;;AAED,MAAI+B,IAAJ,GAAW;AACT,QAAI,CAAC,IAAD,IAAS,CAACR,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,MAAX,CAAP;AACD;;AAED,MAAIgC,QAAJ,GAAe;AACb,QAAI,CAAC,IAAD,IAAS,CAACT,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,UAAX,CAAP;AACD;;AAED,MAAIiC,OAAJ,GAAc;AACZ,QAAI,CAAC,IAAD,IAAS,CAACV,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,SAAX,CAAP;AACD;;AAED,MAAIkC,QAAJ,GAAe;AACb,QAAI,CAAC,IAAD,IAAS,CAACX,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,UAAX,CAAP;AACD;;AAED,MAAImC,MAAJ,GAAa;AACX,QAAI,CAAC,IAAD,IAAS,CAACZ,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,QAAX,CAAP;AACD;;AAED,MAAIoC,OAAJ,GAAc;AACZ,QAAI,CAAC,IAAD,IAAS,CAACb,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,SAAX,CAAP;AACD;;AAED,MAAIqC,MAAJ,GAAa;AACX,QAAI,CAAC,IAAD,IAAS,CAACd,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,QAAX,CAAP;AACD;;AAED,MAAIsC,WAAJ,GAAkB;AAChB,QAAI,CAAC,IAAD,IAAS,CAACf,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,aAAX,CAAP;AACD;;AAED,MAAIuC,QAAJ,GAAe;AACb,QAAI,CAAC,IAAD,IAAS,CAAChB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,UAAX,CAAP;AACD;;AAED,MAAIwC,OAAJ,GAAc;AACZ,QAAI,CAAC,IAAD,IAAS,CAACjB,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,IAAlB,CAAd,EAAuC;AACrC,YAAM,IAAIhB,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,WAAO,KAAKT,IAAL,EAAW,SAAX,CAAP;AACD;;AA9P2C;;AAgQ9CgB,MAAM,CAACyB,gBAAP,CAAwBtC,aAAa,CAACiB,SAAtC,EAAiD;AAC/CC,EAAAA,gBAAgB,EAAE;AAAEqB,IAAAA,UAAU,EAAE;AAAd,GAD6B;AAE/ChB,EAAAA,iBAAiB,EAAE;AAAEgB,IAAAA,UAAU,EAAE;AAAd,GAF4B;AAG/CZ,EAAAA,GAAG,EAAE;AAAEY,IAAAA,UAAU,EAAE;AAAd,GAH0C;AAI/CX,EAAAA,IAAI,EAAE;AAAEW,IAAAA,UAAU,EAAE;AAAd,GAJyC;AAK/CV,EAAAA,QAAQ,EAAE;AAAEU,IAAAA,UAAU,EAAE;AAAd,GALqC;AAM/CT,EAAAA,OAAO,EAAE;AAAES,IAAAA,UAAU,EAAE;AAAd,GANsC;AAO/CR,EAAAA,QAAQ,EAAE;AAAEQ,IAAAA,UAAU,EAAE;AAAd,GAPqC;AAQ/CP,EAAAA,MAAM,EAAE;AAAEO,IAAAA,UAAU,EAAE;AAAd,GARuC;AAS/CN,EAAAA,OAAO,EAAE;AAAEM,IAAAA,UAAU,EAAE;AAAd,GATsC;AAU/CL,EAAAA,MAAM,EAAE;AAAEK,IAAAA,UAAU,EAAE;AAAd,GAVuC;AAW/CJ,EAAAA,WAAW,EAAE;AAAEI,IAAAA,UAAU,EAAE;AAAd,GAXkC;AAY/CH,EAAAA,QAAQ,EAAE;AAAEG,IAAAA,UAAU,EAAE;AAAd,GAZqC;AAa/CF,EAAAA,OAAO,EAAE;AAAEE,IAAAA,UAAU,EAAE;AAAd,GAbsC;AAc/C,GAACC,MAAM,CAACC,WAAR,GAAsB;AAAEC,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,YAAY,EAAE;AAAxC,GAdyB;AAe/CC,EAAAA,yBAAyB,EAAE;AAAEF,IAAAA,KAAK,EAAE,IAAT;AAAeH,IAAAA,UAAU,EAAE;AAA3B,GAfoB;AAgB/CM,EAAAA,qBAAqB,EAAE;AAAEH,IAAAA,KAAK,EAAE,IAAT;AAAeH,IAAAA,UAAU,EAAE;AAA3B,GAhBwB;AAiB/CO,EAAAA,sBAAsB,EAAE;AAAEJ,IAAAA,KAAK,EAAE,IAAT;AAAeH,IAAAA,UAAU,EAAE;AAA3B,GAjBuB;AAkB/CQ,EAAAA,uBAAuB,EAAE;AAAEL,IAAAA,KAAK,EAAE,IAAT;AAAeH,IAAAA,UAAU,EAAE;AAA3B;AAlBsB,CAAjD;AAoBA1B,MAAM,CAACyB,gBAAP,CAAwBtC,aAAxB,EAAuC;AACrC4C,EAAAA,yBAAyB,EAAE;AAAEF,IAAAA,KAAK,EAAE,IAAT;AAAeH,IAAAA,UAAU,EAAE;AAA3B,GADU;AAErCM,EAAAA,qBAAqB,EAAE;AAAEH,IAAAA,KAAK,EAAE,IAAT;AAAeH,IAAAA,UAAU,EAAE;AAA3B,GAFc;AAGrCO,EAAAA,sBAAsB,EAAE;AAAEJ,IAAAA,KAAK,EAAE,IAAT;AAAeH,IAAAA,UAAU,EAAE;AAA3B,GAHa;AAIrCQ,EAAAA,uBAAuB,EAAE;AAAEL,IAAAA,KAAK,EAAE,IAAT;AAAeH,IAAAA,UAAU,EAAE;AAA3B;AAJY,CAAvC;AAMA,MAAM5B,KAAK,GAAG;AACZ;AACA;AACA;AACAqC,EAAAA,oBAAoB,EAAE,EAJV;;AAKZ1B,EAAAA,EAAE,CAAC2B,GAAD,EAAM;AACN,QAAIA,GAAJ,EAAS;AACP,UAAIvD,KAAK,CAACwD,MAAN,CAAaD,GAAb,EAAkBpD,IAAlB,KAA2BoD,GAAG,CAACpD,IAAD,CAAH,YAAqBsD,IAAI,CAACC,cAAzD,EAAyE;AACvE,eAAO,IAAP;AACD;;AACD,WAAK,MAAMC,WAAX,IAA0BjC,MAAM,CAACC,OAAP,CAAe2B,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACJ,GAAD,CAAf,EAAsB;AACpB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAjBW;;AAkBZK,EAAAA,MAAM,CAACL,GAAD,EAAM;AACV,QAAIA,GAAJ,EAAS;AACP,UAAIA,GAAG,YAAYE,IAAI,CAACC,cAAxB,EAAwC;AACtC,eAAO,IAAP;AACD;;AAED,YAAMG,OAAO,GAAG7D,KAAK,CAAC8D,cAAN,CAAqBP,GAArB,CAAhB;;AACA,WAAK,MAAMI,WAAX,IAA0BjC,MAAM,CAACC,OAAP,CAAe2B,oBAAzC,EAA+D;AAC7D,YAAIK,WAAW,CAACE,OAAD,CAAf,EAA0B;AACxB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAhCW;;AAiCZ3D,EAAAA,OAAO,CAACqD,GAAD,EAAM;AAAExC,IAAAA,OAAO,GAAG;AAAZ,MAAqC,EAA3C,EAA+C;AACpD,QAAIW,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB2B,GAAlB,CAAJ,EAA4B;AAC1B,aAAOvD,KAAK,CAAC+D,cAAN,CAAqBR,GAArB,CAAP;AACD;;AACD,UAAM,IAAI3C,SAAJ,CAAe,GAAEG,OAAQ,kCAAzB,CAAN;AACD,GAtCW;;AAwCZK,EAAAA,MAAM,CAAC4C,eAAD,EAAkBC,WAAlB,EAA+B;AACnC,QAAIV,GAAG,GAAGpC,MAAM,CAACC,MAAP,CAAcd,aAAa,CAACiB,SAA5B,CAAV;AACAgC,IAAAA,GAAG,GAAG,KAAKrC,KAAL,CAAWqC,GAAX,EAAgBS,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOV,GAAP;AACD,GA5CW;;AA6CZW,EAAAA,UAAU,CAACF,eAAD,EAAkBC,WAAlB,EAA+B;AACvC,QAAIV,GAAG,GAAGpC,MAAM,CAACC,MAAP,CAAcd,aAAa,CAACiB,SAA5B,CAAV;AACAgC,IAAAA,GAAG,GAAG,KAAKrC,KAAL,CAAWqC,GAAX,EAAgBS,eAAhB,EAAiCC,WAAjC,CAAN;AACA,WAAOjE,KAAK,CAAC+D,cAAN,CAAqBR,GAArB,CAAP;AACD,GAjDW;;AAkDZY,EAAAA,cAAc,CAACZ,GAAD,EAAM;AAClBlD,IAAAA,OAAO,CAAC8D,cAAR,CAAuBZ,GAAvB;AACD,GApDW;;AAqDZrC,EAAAA,KAAK,CAACqC,GAAD,EAAMS,eAAN,EAAuBC,WAAvB,EAAoC;AACvC,QAAI,CAACA,WAAL,EAAkBA,WAAW,GAAG,EAAd;AAElBA,IAAAA,WAAW,CAACJ,OAAZ,GAAsBN,GAAtB;;AAEA,SAAKY,cAAL,CAAoBZ,GAApB;;AACApC,IAAAA,MAAM,CAACiD,cAAP,CAAsBb,GAAtB,EAA2BpD,IAA3B,EAAiC;AAC/B6C,MAAAA,KAAK,EAAE,IAAIS,IAAI,CAACC,cAAT,CAAwBM,eAAxB,EAAyCC,WAAzC,CADwB;AAE/BhB,MAAAA,YAAY,EAAE;AAFiB,KAAjC;AAKAM,IAAAA,GAAG,CAACpD,IAAD,CAAH,CAAUH,KAAK,CAACqE,aAAhB,IAAiCd,GAAjC;;AACA,QAAIE,IAAI,CAACa,IAAT,EAAe;AACbb,MAAAA,IAAI,CAACa,IAAL,CAAUf,GAAG,CAACpD,IAAD,CAAb,EAAqB8D,WAArB;AACD;;AACD,WAAOV,GAAP;AACD,GArEW;;AAsEZhD,EAAAA,SAAS,EAAED,aAtEC;AAuEZiE,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAElE,MAAAA;AAAF;AADF;AAvEI,CAAd,C,CA0EG;;AACHoB,MAAM,CAACC,OAAP,GAAiBV,KAAjB;;AAEA,MAAMwC,IAAI,GAAG1D,OAAO,CAAC,iCAAD,CAApB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertKeyboardEventInit = require(\"./KeyboardEventInit.js\").convert;\nconst impl = utils.implSymbol;\nconst UIEvent = require(\"./UIEvent.js\");\n\nclass KeyboardEvent extends UIEvent.interface {\n  constructor(type) {\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to construct 'KeyboardEvent': 1 argument required, but only \" + arguments.length + \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'KeyboardEvent': parameter 1\" });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = convertKeyboardEventInit(curArg, { context: \"Failed to construct 'KeyboardEvent': parameter 2\" });\n      args.push(curArg);\n    }\n    return iface.setup(Object.create(new.target.prototype), args);\n  }\n\n  getModifierState(keyArg) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'getModifierState' on 'KeyboardEvent': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'getModifierState' on 'KeyboardEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].getModifierState(...args);\n  }\n\n  initKeyboardEvent(typeArg) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 2\"\n        });\n      } else {\n        curArg = false;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[2];\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 3\"\n        });\n      } else {\n        curArg = false;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[3];\n      if (curArg !== undefined) {\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          curArg = utils.tryImplForWrapper(curArg);\n        }\n      } else {\n        curArg = null;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[4];\n      if (curArg !== undefined) {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 5\"\n        });\n      } else {\n        curArg = \"\";\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[5];\n      if (curArg !== undefined) {\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 6\"\n        });\n      } else {\n        curArg = 0;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[6];\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 7\"\n        });\n      } else {\n        curArg = false;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[7];\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 8\"\n        });\n      } else {\n        curArg = false;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[8];\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 9\"\n        });\n      } else {\n        curArg = false;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[9];\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initKeyboardEvent' on 'KeyboardEvent': parameter 10\"\n        });\n      } else {\n        curArg = false;\n      }\n      args.push(curArg);\n    }\n    return this[impl].initKeyboardEvent(...args);\n  }\n\n  get key() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"key\"];\n  }\n\n  get code() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"code\"];\n  }\n\n  get location() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"location\"];\n  }\n\n  get ctrlKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"ctrlKey\"];\n  }\n\n  get shiftKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"shiftKey\"];\n  }\n\n  get altKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"altKey\"];\n  }\n\n  get metaKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"metaKey\"];\n  }\n\n  get repeat() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"repeat\"];\n  }\n\n  get isComposing() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"isComposing\"];\n  }\n\n  get charCode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"charCode\"];\n  }\n\n  get keyCode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"keyCode\"];\n  }\n}\nObject.defineProperties(KeyboardEvent.prototype, {\n  getModifierState: { enumerable: true },\n  initKeyboardEvent: { enumerable: true },\n  key: { enumerable: true },\n  code: { enumerable: true },\n  location: { enumerable: true },\n  ctrlKey: { enumerable: true },\n  shiftKey: { enumerable: true },\n  altKey: { enumerable: true },\n  metaKey: { enumerable: true },\n  repeat: { enumerable: true },\n  isComposing: { enumerable: true },\n  charCode: { enumerable: true },\n  keyCode: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"KeyboardEvent\", configurable: true },\n  DOM_KEY_LOCATION_STANDARD: { value: 0x00, enumerable: true },\n  DOM_KEY_LOCATION_LEFT: { value: 0x01, enumerable: true },\n  DOM_KEY_LOCATION_RIGHT: { value: 0x02, enumerable: true },\n  DOM_KEY_LOCATION_NUMPAD: { value: 0x03, enumerable: true }\n});\nObject.defineProperties(KeyboardEvent, {\n  DOM_KEY_LOCATION_STANDARD: { value: 0x00, enumerable: true },\n  DOM_KEY_LOCATION_LEFT: { value: 0x01, enumerable: true },\n  DOM_KEY_LOCATION_RIGHT: { value: 0x02, enumerable: true },\n  DOM_KEY_LOCATION_NUMPAD: { value: 0x03, enumerable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'KeyboardEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(KeyboardEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(KeyboardEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    UIEvent._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: KeyboardEvent,\n  expose: {\n    Window: { KeyboardEvent }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../events/KeyboardEvent-impl.js\");\n"]},"metadata":{},"sourceType":"script"}