{"ast":null,"code":"\"use strict\";\n\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst DefaultConstraintValidationImpl = require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\n\nconst {\n  formOwner\n} = require(\"../helpers/form-controls\");\n\nconst {\n  mixin\n} = require(\"../../utils\");\n\nconst {\n  descendantsByLocalNames\n} = require(\"../helpers/traversal\");\n\nconst listedElements = new Set([\"button\", \"fieldset\", \"input\", \"object\", \"output\", \"select\", \"textarea\"]);\n\nclass HTMLFieldSetElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._customValidityErrorMessage = \"\";\n  }\n\n  get elements() {\n    return HTMLCollection.createImpl([], {\n      element: this,\n      query: () => descendantsByLocalNames(this, listedElements)\n    });\n  }\n\n  get form() {\n    return formOwner(this);\n  }\n\n  get type() {\n    return \"fieldset\";\n  }\n\n  _barredFromConstraintValidationSpecialization() {\n    return true;\n  }\n\n}\n\nmixin(HTMLFieldSetElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\nmodule.exports = {\n  implementation: HTMLFieldSetElementImpl\n};","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFieldSetElement-impl.js"],"names":["HTMLCollection","require","HTMLElementImpl","implementation","DefaultConstraintValidationImpl","formOwner","mixin","descendantsByLocalNames","listedElements","Set","HTMLFieldSetElementImpl","constructor","args","privateData","_customValidityErrorMessage","elements","createImpl","element","query","form","type","_barredFromConstraintValidationSpecialization","prototype","module","exports"],"mappings":"AAAA;;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,6BAAD,CAA9B;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BE,cAAtD;;AACA,MAAMC,+BAA+B,GACnCH,OAAO,CAAC,2DAAD,CAAP,CAAqEE,cADvE;;AAEA,MAAM;AAAEE,EAAAA;AAAF,IAAgBJ,OAAO,CAAC,0BAAD,CAA7B;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAYL,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAM;AAAEM,EAAAA;AAAF,IAA8BN,OAAO,CAAC,sBAAD,CAA3C;;AAEA,MAAMO,cAAc,GAAG,IAAIC,GAAJ,CAAQ,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,QAAhC,EAA0C,QAA1C,EAAoD,QAApD,EAA8D,UAA9D,CAAR,CAAvB;;AAEA,MAAMC,uBAAN,SAAsCR,eAAtC,CAAsD;AACpDS,EAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,EAAoB;AAC7B,UAAMD,IAAN,EAAYC,WAAZ;AAEA,SAAKC,2BAAL,GAAmC,EAAnC;AACD;;AAED,MAAIC,QAAJ,GAAe;AACb,WAAOf,cAAc,CAACgB,UAAf,CAA0B,EAA1B,EAA8B;AACnCC,MAAAA,OAAO,EAAE,IAD0B;AAEnCC,MAAAA,KAAK,EAAE,MAAMX,uBAAuB,CAAC,IAAD,EAAOC,cAAP;AAFD,KAA9B,CAAP;AAID;;AAED,MAAIW,IAAJ,GAAW;AACT,WAAOd,SAAS,CAAC,IAAD,CAAhB;AACD;;AAED,MAAIe,IAAJ,GAAW;AACT,WAAO,UAAP;AACD;;AAEDC,EAAAA,6CAA6C,GAAG;AAC9C,WAAO,IAAP;AACD;;AAxBmD;;AA2BtDf,KAAK,CAACI,uBAAuB,CAACY,SAAzB,EAAoClB,+BAA+B,CAACkB,SAApE,CAAL;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfrB,EAAAA,cAAc,EAAEO;AADD,CAAjB","sourcesContent":["\"use strict\";\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst DefaultConstraintValidationImpl =\n  require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst { formOwner } = require(\"../helpers/form-controls\");\nconst { mixin } = require(\"../../utils\");\nconst { descendantsByLocalNames } = require(\"../helpers/traversal\");\n\nconst listedElements = new Set([\"button\", \"fieldset\", \"input\", \"object\", \"output\", \"select\", \"textarea\"]);\n\nclass HTMLFieldSetElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this._customValidityErrorMessage = \"\";\n  }\n\n  get elements() {\n    return HTMLCollection.createImpl([], {\n      element: this,\n      query: () => descendantsByLocalNames(this, listedElements)\n    });\n  }\n\n  get form() {\n    return formOwner(this);\n  }\n\n  get type() {\n    return \"fieldset\";\n  }\n\n  _barredFromConstraintValidationSpecialization() {\n    return true;\n  }\n}\n\nmixin(HTMLFieldSetElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\n\nmodule.exports = {\n  implementation: HTMLFieldSetElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}