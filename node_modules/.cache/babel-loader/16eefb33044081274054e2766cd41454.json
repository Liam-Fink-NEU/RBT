{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass NonElementParentNode {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  getElementById(elementId) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'getElementById' on 'NonElementParentNode': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'getElementById' on 'NonElementParentNode': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].getElementById(...args));\n  }\n\n}\n\nObject.defineProperties(NonElementParentNode.prototype, {\n  getElementById: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"NonElementParentNode\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'NonElementParentNode'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NonElementParentNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NonElementParentNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: NonElementParentNode,\n  expose: {}\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/NonElementParentNode-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/NonElementParentNode.js"],"names":["conversions","require","utils","impl","implSymbol","NonElementParentNode","constructor","TypeError","getElementById","elementId","module","exports","is","arguments","length","args","curArg","context","push","tryWrapperForImpl","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","value","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","interface","expose"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass NonElementParentNode {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  getElementById(elementId) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'getElementById' on 'NonElementParentNode': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'getElementById' on 'NonElementParentNode': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].getElementById(...args));\n  }\n}\nObject.defineProperties(NonElementParentNode.prototype, {\n  getElementById: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"NonElementParentNode\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'NonElementParentNode'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NonElementParentNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NonElementParentNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: NonElementParentNode,\n  expose: {}\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/NonElementParentNode-impl.js\");\n"]},"metadata":{},"sourceType":"script"}