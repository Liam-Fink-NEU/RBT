{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst CharacterData = require(\"./CharacterData.js\");\n\nclass ProcessingInstruction extends CharacterData.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get target() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"target\"];\n  }\n\n}\n\nObject.defineProperties(ProcessingInstruction.prototype, {\n  target: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"ProcessingInstruction\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'ProcessingInstruction'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ProcessingInstruction.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ProcessingInstruction.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    CharacterData._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: ProcessingInstruction,\n  expose: {\n    Window: {\n      ProcessingInstruction\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/ProcessingInstruction-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/ProcessingInstruction.js"],"names":["conversions","require","utils","impl","implSymbol","CharacterData","ProcessingInstruction","interface","constructor","TypeError","target","module","exports","is","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","value","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst CharacterData = require(\"./CharacterData.js\");\n\nclass ProcessingInstruction extends CharacterData.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get target() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"target\"];\n  }\n}\nObject.defineProperties(ProcessingInstruction.prototype, {\n  target: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"ProcessingInstruction\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'ProcessingInstruction'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ProcessingInstruction.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ProcessingInstruction.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    CharacterData._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: ProcessingInstruction,\n  expose: {\n    Window: { ProcessingInstruction }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/ProcessingInstruction-impl.js\");\n"]},"metadata":{},"sourceType":"script"}