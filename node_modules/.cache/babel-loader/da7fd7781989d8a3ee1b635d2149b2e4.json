{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertDocumentType = require(\"./DocumentType.js\").convert;\n\nconst impl = utils.implSymbol;\n\nclass DOMImplementation {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  createDocumentType(qualifiedName, publicId, systemId) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 3) {\n      throw new TypeError(\"Failed to execute 'createDocumentType' on 'DOMImplementation': 3 arguments required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 2\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[2];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 3\"\n      });\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].createDocumentType(...args));\n  }\n\n  createDocument(namespace, qualifiedName) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 2) {\n      throw new TypeError(\"Failed to execute 'createDocument' on 'DOMImplementation': 2 arguments required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n\n      if (curArg === null || curArg === undefined) {\n        curArg = null;\n      } else {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 1\"\n        });\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 2\",\n        treatNullAsEmptyString: true\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[2];\n\n      if (curArg !== undefined) {\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          curArg = convertDocumentType(curArg, {\n            context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 3\"\n          });\n        }\n      } else {\n        curArg = null;\n      }\n\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].createDocument(...args));\n  }\n\n  createHTMLDocument() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createHTMLDocument' on 'DOMImplementation': parameter 1\"\n        });\n      }\n\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].createHTMLDocument(...args));\n  }\n\n  hasFeature() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].hasFeature();\n  }\n\n}\n\nObject.defineProperties(DOMImplementation.prototype, {\n  createDocumentType: {\n    enumerable: true\n  },\n  createDocument: {\n    enumerable: true\n  },\n  createHTMLDocument: {\n    enumerable: true\n  },\n  hasFeature: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"DOMImplementation\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'DOMImplementation'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(DOMImplementation.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(DOMImplementation.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: DOMImplementation,\n  expose: {\n    Window: {\n      DOMImplementation\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/DOMImplementation-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/DOMImplementation.js"],"names":["conversions","require","utils","convertDocumentType","convert","impl","implSymbol","DOMImplementation","constructor","TypeError","createDocumentType","qualifiedName","publicId","systemId","module","exports","is","arguments","length","args","curArg","context","push","tryWrapperForImpl","createDocument","namespace","undefined","treatNullAsEmptyString","createHTMLDocument","hasFeature","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","value","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertDocumentType = require(\"./DocumentType.js\").convert;\nconst impl = utils.implSymbol;\n\nclass DOMImplementation {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  createDocumentType(qualifiedName, publicId, systemId) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 3) {\n      throw new TypeError(\n        \"Failed to execute 'createDocumentType' on 'DOMImplementation': 3 arguments required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 2\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[2];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 3\"\n      });\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].createDocumentType(...args));\n  }\n\n  createDocument(namespace, qualifiedName) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 2) {\n      throw new TypeError(\n        \"Failed to execute 'createDocument' on 'DOMImplementation': 2 arguments required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      if (curArg === null || curArg === undefined) {\n        curArg = null;\n      } else {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 1\"\n        });\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 2\",\n        treatNullAsEmptyString: true\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[2];\n      if (curArg !== undefined) {\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          curArg = convertDocumentType(curArg, {\n            context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 3\"\n          });\n        }\n      } else {\n        curArg = null;\n      }\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].createDocument(...args));\n  }\n\n  createHTMLDocument() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      if (curArg !== undefined) {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createHTMLDocument' on 'DOMImplementation': parameter 1\"\n        });\n      }\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].createHTMLDocument(...args));\n  }\n\n  hasFeature() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].hasFeature();\n  }\n}\nObject.defineProperties(DOMImplementation.prototype, {\n  createDocumentType: { enumerable: true },\n  createDocument: { enumerable: true },\n  createHTMLDocument: { enumerable: true },\n  hasFeature: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"DOMImplementation\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'DOMImplementation'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(DOMImplementation.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(DOMImplementation.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: DOMImplementation,\n  expose: {\n    Window: { DOMImplementation }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/DOMImplementation-impl.js\");\n"]},"metadata":{},"sourceType":"script"}