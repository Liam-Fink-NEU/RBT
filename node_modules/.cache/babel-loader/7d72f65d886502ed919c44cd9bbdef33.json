{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass MutationRecord {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get type() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  }\n\n  get target() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"target\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"target\"]);\n    });\n  }\n\n  get addedNodes() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"addedNodes\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"addedNodes\"]);\n    });\n  }\n\n  get removedNodes() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"removedNodes\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"removedNodes\"]);\n    });\n  }\n\n  get previousSibling() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"previousSibling\"]);\n  }\n\n  get nextSibling() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"nextSibling\"]);\n  }\n\n  get attributeName() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"attributeName\"];\n  }\n\n  get attributeNamespace() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"attributeNamespace\"];\n  }\n\n  get oldValue() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"oldValue\"];\n  }\n\n}\n\nObject.defineProperties(MutationRecord.prototype, {\n  type: {\n    enumerable: true\n  },\n  target: {\n    enumerable: true\n  },\n  addedNodes: {\n    enumerable: true\n  },\n  removedNodes: {\n    enumerable: true\n  },\n  previousSibling: {\n    enumerable: true\n  },\n  nextSibling: {\n    enumerable: true\n  },\n  attributeName: {\n    enumerable: true\n  },\n  attributeNamespace: {\n    enumerable: true\n  },\n  oldValue: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"MutationRecord\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'MutationRecord'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(MutationRecord.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(MutationRecord.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: MutationRecord,\n  expose: {\n    Window: {\n      MutationRecord\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../mutation-observer/MutationRecord-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/MutationRecord.js"],"names":["conversions","require","utils","impl","implSymbol","MutationRecord","constructor","TypeError","type","module","exports","is","target","getSameObject","tryWrapperForImpl","addedNodes","removedNodes","previousSibling","nextSibling","attributeName","attributeNamespace","oldValue","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","value","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass MutationRecord {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get type() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  }\n\n  get target() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"target\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"target\"]);\n    });\n  }\n\n  get addedNodes() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"addedNodes\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"addedNodes\"]);\n    });\n  }\n\n  get removedNodes() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"removedNodes\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"removedNodes\"]);\n    });\n  }\n\n  get previousSibling() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"previousSibling\"]);\n  }\n\n  get nextSibling() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"nextSibling\"]);\n  }\n\n  get attributeName() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"attributeName\"];\n  }\n\n  get attributeNamespace() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"attributeNamespace\"];\n  }\n\n  get oldValue() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"oldValue\"];\n  }\n}\nObject.defineProperties(MutationRecord.prototype, {\n  type: { enumerable: true },\n  target: { enumerable: true },\n  addedNodes: { enumerable: true },\n  removedNodes: { enumerable: true },\n  previousSibling: { enumerable: true },\n  nextSibling: { enumerable: true },\n  attributeName: { enumerable: true },\n  attributeNamespace: { enumerable: true },\n  oldValue: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"MutationRecord\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'MutationRecord'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(MutationRecord.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(MutationRecord.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: MutationRecord,\n  expose: {\n    Window: { MutationRecord }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../mutation-observer/MutationRecord-impl.js\");\n"]},"metadata":{},"sourceType":"script"}