{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass ElementContentEditable {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n}\n\nObject.defineProperties(ElementContentEditable.prototype, {\n  [Symbol.toStringTag]: {\n    value: \"ElementContentEditable\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'ElementContentEditable'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ElementContentEditable.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ElementContentEditable.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: ElementContentEditable,\n  expose: {}\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/ElementContentEditable-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/ElementContentEditable.js"],"names":["conversions","require","utils","impl","implSymbol","ElementContentEditable","constructor","TypeError","Object","defineProperties","prototype","Symbol","toStringTag","value","configurable","iface","_mixedIntoPredicates","is","obj","hasOwn","Impl","implementation","isMixedInto","module","exports","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","interface","expose"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass ElementContentEditable {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n}\nObject.defineProperties(ElementContentEditable.prototype, {\n  [Symbol.toStringTag]: { value: \"ElementContentEditable\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'ElementContentEditable'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ElementContentEditable.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ElementContentEditable.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: ElementContentEditable,\n  expose: {}\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/ElementContentEditable-impl.js\");\n"]},"metadata":{},"sourceType":"script"}