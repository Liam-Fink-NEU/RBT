{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertBlob = require(\"./Blob.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst EventTarget = require(\"./EventTarget.js\");\n\nmodule.exports = {\n  createInterface: function (defaultPrivateData = {}) {\n    class FileReader extends EventTarget.interface {\n      constructor() {\n        return iface.setup(Object.create(new.target.prototype));\n      }\n\n      readAsArrayBuffer(blob) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'readAsArrayBuffer' on 'FileReader': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = convertBlob(curArg, {\n            context: \"Failed to execute 'readAsArrayBuffer' on 'FileReader': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return this[impl].readAsArrayBuffer(...args);\n      }\n\n      readAsBinaryString(blob) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'readAsBinaryString' on 'FileReader': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = convertBlob(curArg, {\n            context: \"Failed to execute 'readAsBinaryString' on 'FileReader': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return this[impl].readAsBinaryString(...args);\n      }\n\n      readAsText(blob) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'readAsText' on 'FileReader': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = convertBlob(curArg, {\n            context: \"Failed to execute 'readAsText' on 'FileReader': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[1];\n\n          if (curArg !== undefined) {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'readAsText' on 'FileReader': parameter 2\"\n            });\n          }\n\n          args.push(curArg);\n        }\n        return this[impl].readAsText(...args);\n      }\n\n      readAsDataURL(blob) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'readAsDataURL' on 'FileReader': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = convertBlob(curArg, {\n            context: \"Failed to execute 'readAsDataURL' on 'FileReader': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return this[impl].readAsDataURL(...args);\n      }\n\n      abort() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl].abort();\n      }\n\n      get readyState() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"readyState\"];\n      }\n\n      get result() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"result\"]);\n      }\n\n      get error() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"error\"]);\n      }\n\n      get onloadstart() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onloadstart\"]);\n      }\n\n      set onloadstart(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n        this[impl][\"onloadstart\"] = V;\n      }\n\n      get onprogress() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onprogress\"]);\n      }\n\n      set onprogress(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n        this[impl][\"onprogress\"] = V;\n      }\n\n      get onload() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onload\"]);\n      }\n\n      set onload(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n        this[impl][\"onload\"] = V;\n      }\n\n      get onabort() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onabort\"]);\n      }\n\n      set onabort(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n        this[impl][\"onabort\"] = V;\n      }\n\n      get onerror() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onerror\"]);\n      }\n\n      set onerror(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n        this[impl][\"onerror\"] = V;\n      }\n\n      get onloadend() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onloadend\"]);\n      }\n\n      set onloadend(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n        this[impl][\"onloadend\"] = V;\n      }\n\n    }\n\n    Object.defineProperties(FileReader.prototype, {\n      readAsArrayBuffer: {\n        enumerable: true\n      },\n      readAsBinaryString: {\n        enumerable: true\n      },\n      readAsText: {\n        enumerable: true\n      },\n      readAsDataURL: {\n        enumerable: true\n      },\n      abort: {\n        enumerable: true\n      },\n      readyState: {\n        enumerable: true\n      },\n      result: {\n        enumerable: true\n      },\n      error: {\n        enumerable: true\n      },\n      onloadstart: {\n        enumerable: true\n      },\n      onprogress: {\n        enumerable: true\n      },\n      onload: {\n        enumerable: true\n      },\n      onabort: {\n        enumerable: true\n      },\n      onerror: {\n        enumerable: true\n      },\n      onloadend: {\n        enumerable: true\n      },\n      [Symbol.toStringTag]: {\n        value: \"FileReader\",\n        configurable: true\n      },\n      EMPTY: {\n        value: 0,\n        enumerable: true\n      },\n      LOADING: {\n        value: 1,\n        enumerable: true\n      },\n      DONE: {\n        value: 2,\n        enumerable: true\n      }\n    });\n    Object.defineProperties(FileReader, {\n      EMPTY: {\n        value: 0,\n        enumerable: true\n      },\n      LOADING: {\n        value: 1,\n        enumerable: true\n      },\n      DONE: {\n        value: 2,\n        enumerable: true\n      }\n    });\n    const iface = {\n      create(constructorArgs, privateData) {\n        let obj = Object.create(FileReader.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return obj;\n      },\n\n      createImpl(constructorArgs, privateData) {\n        let obj = Object.create(FileReader.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return utils.implForWrapper(obj);\n      },\n\n      _internalSetup(obj) {\n        EventTarget._internalSetup(obj);\n      },\n\n      setup(obj, constructorArgs, privateData) {\n        if (!privateData) privateData = {};\n\n        for (var prop in defaultPrivateData) {\n          if (!(prop in privateData)) {\n            privateData[prop] = defaultPrivateData[prop];\n          }\n        }\n\n        privateData.wrapper = obj;\n\n        this._internalSetup(obj);\n\n        Object.defineProperty(obj, impl, {\n          value: new Impl.implementation(constructorArgs, privateData),\n          configurable: true\n        });\n        obj[impl][utils.wrapperSymbol] = obj;\n\n        if (Impl.init) {\n          Impl.init(obj[impl], privateData);\n        }\n\n        return obj;\n      },\n\n      interface: FileReader,\n      expose: {\n        Window: {\n          FileReader\n        },\n        Worker: {\n          FileReader\n        }\n      }\n    }; // iface\n\n    return iface;\n  },\n  // createInterface\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'FileReader'.`);\n  }\n\n}; // module.exports\n\nconst Impl = require(\"../file-api/FileReader-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/FileReader.js"],"names":["conversions","require","utils","convertBlob","convert","impl","implSymbol","EventTarget","module","exports","createInterface","defaultPrivateData","FileReader","interface","constructor","iface","setup","Object","create","new","target","prototype","readAsArrayBuffer","blob","is","TypeError","arguments","length","args","curArg","context","push","readAsBinaryString","readAsText","undefined","readAsDataURL","abort","readyState","result","tryWrapperForImpl","error","onloadstart","V","tryImplForWrapper","onprogress","onload","onabort","onerror","onloadend","defineProperties","enumerable","Symbol","toStringTag","value","configurable","EMPTY","LOADING","DONE","constructorArgs","privateData","obj","createImpl","implForWrapper","_internalSetup","prop","wrapper","defineProperty","Impl","implementation","wrapperSymbol","init","expose","Window","Worker","_mixedIntoPredicates","hasOwn","isMixedInto","isImpl","wrapperForImpl"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertBlob = require(\"./Blob.js\").convert;\nconst impl = utils.implSymbol;\nconst EventTarget = require(\"./EventTarget.js\");\n\nmodule.exports = {\n  createInterface: function(defaultPrivateData = {}) {\n    class FileReader extends EventTarget.interface {\n      constructor() {\n        return iface.setup(Object.create(new.target.prototype));\n      }\n\n      readAsArrayBuffer(blob) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\n            \"Failed to execute 'readAsArrayBuffer' on 'FileReader': 1 argument required, but only \" +\n              arguments.length +\n              \" present.\"\n          );\n        }\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = convertBlob(curArg, {\n            context: \"Failed to execute 'readAsArrayBuffer' on 'FileReader': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return this[impl].readAsArrayBuffer(...args);\n      }\n\n      readAsBinaryString(blob) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\n            \"Failed to execute 'readAsBinaryString' on 'FileReader': 1 argument required, but only \" +\n              arguments.length +\n              \" present.\"\n          );\n        }\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = convertBlob(curArg, {\n            context: \"Failed to execute 'readAsBinaryString' on 'FileReader': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return this[impl].readAsBinaryString(...args);\n      }\n\n      readAsText(blob) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\n            \"Failed to execute 'readAsText' on 'FileReader': 1 argument required, but only \" +\n              arguments.length +\n              \" present.\"\n          );\n        }\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = convertBlob(curArg, { context: \"Failed to execute 'readAsText' on 'FileReader': parameter 1\" });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[1];\n          if (curArg !== undefined) {\n            curArg = conversions[\"DOMString\"](curArg, {\n              context: \"Failed to execute 'readAsText' on 'FileReader': parameter 2\"\n            });\n          }\n          args.push(curArg);\n        }\n        return this[impl].readAsText(...args);\n      }\n\n      readAsDataURL(blob) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\n            \"Failed to execute 'readAsDataURL' on 'FileReader': 1 argument required, but only \" +\n              arguments.length +\n              \" present.\"\n          );\n        }\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = convertBlob(curArg, { context: \"Failed to execute 'readAsDataURL' on 'FileReader': parameter 1\" });\n          args.push(curArg);\n        }\n        return this[impl].readAsDataURL(...args);\n      }\n\n      abort() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl].abort();\n      }\n\n      get readyState() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return this[impl][\"readyState\"];\n      }\n\n      get result() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"result\"]);\n      }\n\n      get error() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"error\"]);\n      }\n\n      get onloadstart() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onloadstart\"]);\n      }\n\n      set onloadstart(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n\n        this[impl][\"onloadstart\"] = V;\n      }\n\n      get onprogress() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onprogress\"]);\n      }\n\n      set onprogress(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n\n        this[impl][\"onprogress\"] = V;\n      }\n\n      get onload() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onload\"]);\n      }\n\n      set onload(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n\n        this[impl][\"onload\"] = V;\n      }\n\n      get onabort() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onabort\"]);\n      }\n\n      set onabort(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n\n        this[impl][\"onabort\"] = V;\n      }\n\n      get onerror() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onerror\"]);\n      }\n\n      set onerror(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n\n        this[impl][\"onerror\"] = V;\n      }\n\n      get onloadend() {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(this[impl][\"onloadend\"]);\n      }\n\n      set onloadend(V) {\n        if (!this || !module.exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = utils.tryImplForWrapper(V);\n\n        this[impl][\"onloadend\"] = V;\n      }\n    }\n    Object.defineProperties(FileReader.prototype, {\n      readAsArrayBuffer: { enumerable: true },\n      readAsBinaryString: { enumerable: true },\n      readAsText: { enumerable: true },\n      readAsDataURL: { enumerable: true },\n      abort: { enumerable: true },\n      readyState: { enumerable: true },\n      result: { enumerable: true },\n      error: { enumerable: true },\n      onloadstart: { enumerable: true },\n      onprogress: { enumerable: true },\n      onload: { enumerable: true },\n      onabort: { enumerable: true },\n      onerror: { enumerable: true },\n      onloadend: { enumerable: true },\n      [Symbol.toStringTag]: { value: \"FileReader\", configurable: true },\n      EMPTY: { value: 0, enumerable: true },\n      LOADING: { value: 1, enumerable: true },\n      DONE: { value: 2, enumerable: true }\n    });\n    Object.defineProperties(FileReader, {\n      EMPTY: { value: 0, enumerable: true },\n      LOADING: { value: 1, enumerable: true },\n      DONE: { value: 2, enumerable: true }\n    });\n    const iface = {\n      create(constructorArgs, privateData) {\n        let obj = Object.create(FileReader.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return obj;\n      },\n      createImpl(constructorArgs, privateData) {\n        let obj = Object.create(FileReader.prototype);\n        obj = this.setup(obj, constructorArgs, privateData);\n        return utils.implForWrapper(obj);\n      },\n      _internalSetup(obj) {\n        EventTarget._internalSetup(obj);\n      },\n      setup(obj, constructorArgs, privateData) {\n        if (!privateData) privateData = {};\n\n        for (var prop in defaultPrivateData) {\n          if (!(prop in privateData)) {\n            privateData[prop] = defaultPrivateData[prop];\n          }\n        }\n\n        privateData.wrapper = obj;\n\n        this._internalSetup(obj);\n        Object.defineProperty(obj, impl, {\n          value: new Impl.implementation(constructorArgs, privateData),\n          configurable: true\n        });\n\n        obj[impl][utils.wrapperSymbol] = obj;\n        if (Impl.init) {\n          Impl.init(obj[impl], privateData);\n        }\n        return obj;\n      },\n      interface: FileReader,\n      expose: {\n        Window: { FileReader },\n        Worker: { FileReader }\n      }\n    }; // iface\n    return iface;\n  }, // createInterface\n\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'FileReader'.`);\n  }\n}; // module.exports\n\nconst Impl = require(\"../file-api/FileReader-impl.js\");\n"]},"metadata":{},"sourceType":"script"}