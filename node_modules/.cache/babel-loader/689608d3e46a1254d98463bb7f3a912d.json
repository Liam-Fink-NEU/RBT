{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertPopStateEventInit = require(\"./PopStateEventInit.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst Event = require(\"./Event.js\");\n\nclass PopStateEvent extends Event.interface {\n  constructor(type) {\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to construct 'PopStateEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to construct 'PopStateEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = convertPopStateEventInit(curArg, {\n        context: \"Failed to construct 'PopStateEvent': parameter 2\"\n      });\n      args.push(curArg);\n    }\n    return iface.setup(Object.create(new.target.prototype), args);\n  }\n\n  get state() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"state\"];\n  }\n\n}\n\nObject.defineProperties(PopStateEvent.prototype, {\n  state: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"PopStateEvent\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'PopStateEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(PopStateEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(PopStateEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    Event._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: PopStateEvent,\n  expose: {\n    Window: {\n      PopStateEvent\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../events/PopStateEvent-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/PopStateEvent.js"],"names":["conversions","require","utils","convertPopStateEventInit","convert","impl","implSymbol","Event","PopStateEvent","interface","constructor","type","arguments","length","TypeError","args","curArg","context","push","iface","setup","Object","create","new","target","prototype","state","module","exports","is","defineProperties","enumerable","Symbol","toStringTag","value","configurable","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","constructorArgs","privateData","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertPopStateEventInit = require(\"./PopStateEventInit.js\").convert;\nconst impl = utils.implSymbol;\nconst Event = require(\"./Event.js\");\n\nclass PopStateEvent extends Event.interface {\n  constructor(type) {\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to construct 'PopStateEvent': 1 argument required, but only \" + arguments.length + \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'PopStateEvent': parameter 1\" });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = convertPopStateEventInit(curArg, { context: \"Failed to construct 'PopStateEvent': parameter 2\" });\n      args.push(curArg);\n    }\n    return iface.setup(Object.create(new.target.prototype), args);\n  }\n\n  get state() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"state\"];\n  }\n}\nObject.defineProperties(PopStateEvent.prototype, {\n  state: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"PopStateEvent\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'PopStateEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(PopStateEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(PopStateEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    Event._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: PopStateEvent,\n  expose: {\n    Window: { PopStateEvent }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../events/PopStateEvent-impl.js\");\n"]},"metadata":{},"sourceType":"script"}