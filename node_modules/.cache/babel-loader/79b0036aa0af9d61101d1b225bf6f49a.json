{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertMessageEventInit = require(\"./MessageEventInit.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst Event = require(\"./Event.js\");\n\nclass MessageEvent extends Event.interface {\n  constructor(type) {\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to construct 'MessageEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to construct 'MessageEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = convertMessageEventInit(curArg, {\n        context: \"Failed to construct 'MessageEvent': parameter 2\"\n      });\n      args.push(curArg);\n    }\n    return iface.setup(Object.create(new.target.prototype), args);\n  }\n\n  initMessageEvent(type) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'initMessageEvent' on 'MessageEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 2\"\n        });\n      } else {\n        curArg = false;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[2];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 3\"\n        });\n      } else {\n        curArg = false;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[3];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"any\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 4\"\n        });\n      } else {\n        curArg = null;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[4];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 5\"\n        });\n      } else {\n        curArg = \"\";\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[5];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 6\"\n        });\n      } else {\n        curArg = \"\";\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[6];\n\n      if (curArg !== undefined) {\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          curArg = utils.tryImplForWrapper(curArg);\n        }\n      } else {\n        curArg = null;\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[7];\n\n      if (curArg !== undefined) {\n        if (!utils.isObject(curArg)) {\n          throw new TypeError(\"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 8\" + \" is not an iterable object.\");\n        } else {\n          const V = [];\n          const tmp = curArg;\n\n          for (let nextItem of tmp) {\n            nextItem = utils.tryImplForWrapper(nextItem);\n            V.push(nextItem);\n          }\n\n          curArg = V;\n        }\n      } else {\n        curArg = [];\n      }\n\n      args.push(curArg);\n    }\n    return this[impl].initMessageEvent(...args);\n  }\n\n  get data() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"data\"];\n  }\n\n  get origin() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"origin\"];\n  }\n\n  get lastEventId() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"lastEventId\"];\n  }\n\n  get source() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"source\"]);\n  }\n\n  get ports() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"ports\"]);\n  }\n\n}\n\nObject.defineProperties(MessageEvent.prototype, {\n  initMessageEvent: {\n    enumerable: true\n  },\n  data: {\n    enumerable: true\n  },\n  origin: {\n    enumerable: true\n  },\n  lastEventId: {\n    enumerable: true\n  },\n  source: {\n    enumerable: true\n  },\n  ports: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"MessageEvent\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'MessageEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(MessageEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(MessageEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    Event._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: MessageEvent,\n  expose: {\n    Window: {\n      MessageEvent\n    },\n    Worker: {\n      MessageEvent\n    },\n    AudioWorklet: {\n      MessageEvent\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../events/MessageEvent-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/MessageEvent.js"],"names":["conversions","require","utils","convertMessageEventInit","convert","impl","implSymbol","Event","MessageEvent","interface","constructor","type","arguments","length","TypeError","args","curArg","context","push","iface","setup","Object","create","new","target","prototype","initMessageEvent","module","exports","is","undefined","tryImplForWrapper","isObject","V","tmp","nextItem","data","origin","lastEventId","source","tryWrapperForImpl","ports","defineProperties","enumerable","Symbol","toStringTag","value","configurable","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","constructorArgs","privateData","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window","Worker","AudioWorklet"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertMessageEventInit = require(\"./MessageEventInit.js\").convert;\nconst impl = utils.implSymbol;\nconst Event = require(\"./Event.js\");\n\nclass MessageEvent extends Event.interface {\n  constructor(type) {\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to construct 'MessageEvent': 1 argument required, but only \" + arguments.length + \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'MessageEvent': parameter 1\" });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = convertMessageEventInit(curArg, { context: \"Failed to construct 'MessageEvent': parameter 2\" });\n      args.push(curArg);\n    }\n    return iface.setup(Object.create(new.target.prototype), args);\n  }\n\n  initMessageEvent(type) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'initMessageEvent' on 'MessageEvent': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 2\"\n        });\n      } else {\n        curArg = false;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[2];\n      if (curArg !== undefined) {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 3\"\n        });\n      } else {\n        curArg = false;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[3];\n      if (curArg !== undefined) {\n        curArg = conversions[\"any\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 4\"\n        });\n      } else {\n        curArg = null;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[4];\n      if (curArg !== undefined) {\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 5\"\n        });\n      } else {\n        curArg = \"\";\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[5];\n      if (curArg !== undefined) {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 6\"\n        });\n      } else {\n        curArg = \"\";\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[6];\n      if (curArg !== undefined) {\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          curArg = utils.tryImplForWrapper(curArg);\n        }\n      } else {\n        curArg = null;\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[7];\n      if (curArg !== undefined) {\n        if (!utils.isObject(curArg)) {\n          throw new TypeError(\n            \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 8\" + \" is not an iterable object.\"\n          );\n        } else {\n          const V = [];\n          const tmp = curArg;\n          for (let nextItem of tmp) {\n            nextItem = utils.tryImplForWrapper(nextItem);\n\n            V.push(nextItem);\n          }\n          curArg = V;\n        }\n      } else {\n        curArg = [];\n      }\n      args.push(curArg);\n    }\n    return this[impl].initMessageEvent(...args);\n  }\n\n  get data() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"data\"];\n  }\n\n  get origin() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"origin\"];\n  }\n\n  get lastEventId() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"lastEventId\"];\n  }\n\n  get source() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"source\"]);\n  }\n\n  get ports() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"ports\"]);\n  }\n}\nObject.defineProperties(MessageEvent.prototype, {\n  initMessageEvent: { enumerable: true },\n  data: { enumerable: true },\n  origin: { enumerable: true },\n  lastEventId: { enumerable: true },\n  source: { enumerable: true },\n  ports: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"MessageEvent\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'MessageEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(MessageEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(MessageEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    Event._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: MessageEvent,\n  expose: {\n    Window: { MessageEvent },\n    Worker: { MessageEvent },\n    AudioWorklet: { MessageEvent }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../events/MessageEvent-impl.js\");\n"]},"metadata":{},"sourceType":"script"}