{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertTouchEventInit = require(\"./TouchEventInit.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst UIEvent = require(\"./UIEvent.js\");\n\nclass TouchEvent extends UIEvent.interface {\n  constructor(type) {\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to construct 'TouchEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to construct 'TouchEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = convertTouchEventInit(curArg, {\n        context: \"Failed to construct 'TouchEvent': parameter 2\"\n      });\n      args.push(curArg);\n    }\n    return iface.setup(Object.create(new.target.prototype), args);\n  }\n\n  get touches() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"touches\"]);\n  }\n\n  get targetTouches() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"targetTouches\"]);\n  }\n\n  get changedTouches() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"changedTouches\"]);\n  }\n\n  get altKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"altKey\"];\n  }\n\n  get metaKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"metaKey\"];\n  }\n\n  get ctrlKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"ctrlKey\"];\n  }\n\n  get shiftKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"shiftKey\"];\n  }\n\n}\n\nObject.defineProperties(TouchEvent.prototype, {\n  touches: {\n    enumerable: true\n  },\n  targetTouches: {\n    enumerable: true\n  },\n  changedTouches: {\n    enumerable: true\n  },\n  altKey: {\n    enumerable: true\n  },\n  metaKey: {\n    enumerable: true\n  },\n  ctrlKey: {\n    enumerable: true\n  },\n  shiftKey: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"TouchEvent\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'TouchEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(TouchEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(TouchEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    UIEvent._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: TouchEvent,\n  expose: {\n    Window: {\n      TouchEvent\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../events/TouchEvent-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/TouchEvent.js"],"names":["conversions","require","utils","convertTouchEventInit","convert","impl","implSymbol","UIEvent","TouchEvent","interface","constructor","type","arguments","length","TypeError","args","curArg","context","push","iface","setup","Object","create","new","target","prototype","touches","module","exports","is","tryWrapperForImpl","targetTouches","changedTouches","altKey","metaKey","ctrlKey","shiftKey","defineProperties","enumerable","Symbol","toStringTag","value","configurable","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","constructorArgs","privateData","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertTouchEventInit = require(\"./TouchEventInit.js\").convert;\nconst impl = utils.implSymbol;\nconst UIEvent = require(\"./UIEvent.js\");\n\nclass TouchEvent extends UIEvent.interface {\n  constructor(type) {\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to construct 'TouchEvent': 1 argument required, but only \" + arguments.length + \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'TouchEvent': parameter 1\" });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = convertTouchEventInit(curArg, { context: \"Failed to construct 'TouchEvent': parameter 2\" });\n      args.push(curArg);\n    }\n    return iface.setup(Object.create(new.target.prototype), args);\n  }\n\n  get touches() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"touches\"]);\n  }\n\n  get targetTouches() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"targetTouches\"]);\n  }\n\n  get changedTouches() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"changedTouches\"]);\n  }\n\n  get altKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"altKey\"];\n  }\n\n  get metaKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"metaKey\"];\n  }\n\n  get ctrlKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"ctrlKey\"];\n  }\n\n  get shiftKey() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"shiftKey\"];\n  }\n}\nObject.defineProperties(TouchEvent.prototype, {\n  touches: { enumerable: true },\n  targetTouches: { enumerable: true },\n  changedTouches: { enumerable: true },\n  altKey: { enumerable: true },\n  metaKey: { enumerable: true },\n  ctrlKey: { enumerable: true },\n  shiftKey: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"TouchEvent\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'TouchEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(TouchEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(TouchEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    UIEvent._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: TouchEvent,\n  expose: {\n    Window: { TouchEvent }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../events/TouchEvent-impl.js\");\n"]},"metadata":{},"sourceType":"script"}