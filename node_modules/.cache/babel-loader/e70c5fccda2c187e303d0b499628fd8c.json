{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass Screen {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get availWidth() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"availWidth\"];\n  }\n\n  get availHeight() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"availHeight\"];\n  }\n\n  get width() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"width\"];\n  }\n\n  get height() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"height\"];\n  }\n\n  get colorDepth() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"colorDepth\"];\n  }\n\n  get pixelDepth() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"pixelDepth\"];\n  }\n\n}\n\nObject.defineProperties(Screen.prototype, {\n  availWidth: {\n    enumerable: true\n  },\n  availHeight: {\n    enumerable: true\n  },\n  width: {\n    enumerable: true\n  },\n  height: {\n    enumerable: true\n  },\n  colorDepth: {\n    enumerable: true\n  },\n  pixelDepth: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"Screen\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'Screen'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Screen.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Screen.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: Screen,\n  expose: {\n    Window: {\n      Screen\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../window/Screen-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/Screen.js"],"names":["conversions","require","utils","impl","implSymbol","Screen","constructor","TypeError","availWidth","module","exports","is","availHeight","width","height","colorDepth","pixelDepth","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","value","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass Screen {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get availWidth() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"availWidth\"];\n  }\n\n  get availHeight() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"availHeight\"];\n  }\n\n  get width() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"width\"];\n  }\n\n  get height() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"height\"];\n  }\n\n  get colorDepth() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"colorDepth\"];\n  }\n\n  get pixelDepth() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"pixelDepth\"];\n  }\n}\nObject.defineProperties(Screen.prototype, {\n  availWidth: { enumerable: true },\n  availHeight: { enumerable: true },\n  width: { enumerable: true },\n  height: { enumerable: true },\n  colorDepth: { enumerable: true },\n  pixelDepth: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"Screen\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'Screen'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Screen.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Screen.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: Screen,\n  expose: {\n    Window: { Screen }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../window/Screen-impl.js\");\n"]},"metadata":{},"sourceType":"script"}