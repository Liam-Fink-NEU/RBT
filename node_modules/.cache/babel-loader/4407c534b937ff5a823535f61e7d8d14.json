{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst isHTMLOptionElement = require(\"./HTMLOptionElement.js\").is;\n\nconst isHTMLOptGroupElement = require(\"./HTMLOptGroupElement.js\").is;\n\nconst isHTMLElement = require(\"./HTMLElement.js\").is;\n\nconst convertHTMLOptionElement = require(\"./HTMLOptionElement.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLSelectElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  item(index) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'item' on 'HTMLSelectElement': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"unsigned long\"](curArg, {\n        context: \"Failed to execute 'item' on 'HTMLSelectElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].item(...args));\n  }\n\n  namedItem(name) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'namedItem' on 'HTMLSelectElement': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'namedItem' on 'HTMLSelectElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].namedItem(...args));\n  }\n\n  add(element) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'add' on 'HTMLSelectElement': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n\n      if (isHTMLOptionElement(curArg) || isHTMLOptGroupElement(curArg)) {\n        curArg = utils.implForWrapper(curArg);\n      } else {\n        throw new TypeError(\"Failed to execute 'add' on 'HTMLSelectElement': parameter 1\" + \" is not of any supported type.\");\n      }\n\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n\n      if (curArg !== undefined) {\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          if (isHTMLElement(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else if (typeof curArg === \"number\") {\n            curArg = conversions[\"long\"](curArg, {\n              context: \"Failed to execute 'add' on 'HTMLSelectElement': parameter 2\"\n            });\n          } else {\n            curArg = conversions[\"long\"](curArg, {\n              context: \"Failed to execute 'add' on 'HTMLSelectElement': parameter 2\"\n            });\n          }\n        }\n      } else {\n        curArg = null;\n      }\n\n      args.push(curArg);\n    }\n    return this[impl].add(...args);\n  }\n\n  remove() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const args = [];\n\n    switch (arguments.length) {\n      case 0:\n        break;\n\n      default:\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"long\"](curArg, {\n            context: \"Failed to execute 'remove' on 'HTMLSelectElement': parameter 1\"\n          });\n          args.push(curArg);\n        }\n    }\n\n    return this[impl].remove(...args);\n  }\n\n  checkValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].checkValidity();\n  }\n\n  reportValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].reportValidity();\n  }\n\n  setCustomValidity(error) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'setCustomValidity' on 'HTMLSelectElement': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'setCustomValidity' on 'HTMLSelectElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].setCustomValidity(...args);\n  }\n\n  get autofocus() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"autofocus\");\n  }\n\n  set autofocus(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'autofocus' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"autofocus\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"autofocus\");\n    }\n  }\n\n  get disabled() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"disabled\");\n  }\n\n  set disabled(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'disabled' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"disabled\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"disabled\");\n    }\n  }\n\n  get form() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"form\"]);\n  }\n\n  get multiple() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"multiple\");\n  }\n\n  set multiple(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'multiple' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"multiple\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"multiple\");\n    }\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"name\");\n    return value === null ? \"\" : value;\n  }\n\n  set name(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLSelectElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"name\", V);\n  }\n\n  get required() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"required\");\n  }\n\n  set required(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'required' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"required\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"required\");\n    }\n  }\n\n  get size() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = parseInt(this.getAttributeNS(null, \"size\"));\n    return isNaN(value) || value < 0 || value > 2147483647 ? 0 : value;\n  }\n\n  set size(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'size' property on 'HTMLSelectElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"size\", String(V > 2147483647 ? 0 : V));\n  }\n\n  get type() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  }\n\n  get options() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"options\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"options\"]);\n    });\n  }\n\n  get length() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"length\"];\n  }\n\n  set length(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'length' property on 'HTMLSelectElement': The provided value\"\n    });\n    this[impl][\"length\"] = V;\n  }\n\n  get selectedOptions() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"selectedOptions\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"selectedOptions\"]);\n    });\n  }\n\n  get selectedIndex() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"selectedIndex\"];\n  }\n\n  set selectedIndex(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"long\"](V, {\n      context: \"Failed to set the 'selectedIndex' property on 'HTMLSelectElement': The provided value\"\n    });\n    this[impl][\"selectedIndex\"] = V;\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'value' property on 'HTMLSelectElement': The provided value\"\n    });\n    this[impl][\"value\"] = V;\n  }\n\n  get willValidate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"willValidate\"];\n  }\n\n  get validity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"validity\"]);\n  }\n\n  get validationMessage() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"validationMessage\"];\n  }\n\n  get labels() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"labels\"]);\n  }\n\n}\n\nObject.defineProperties(HTMLSelectElement.prototype, {\n  item: {\n    enumerable: true\n  },\n  namedItem: {\n    enumerable: true\n  },\n  add: {\n    enumerable: true\n  },\n  remove: {\n    enumerable: true\n  },\n  checkValidity: {\n    enumerable: true\n  },\n  reportValidity: {\n    enumerable: true\n  },\n  setCustomValidity: {\n    enumerable: true\n  },\n  autofocus: {\n    enumerable: true\n  },\n  disabled: {\n    enumerable: true\n  },\n  form: {\n    enumerable: true\n  },\n  multiple: {\n    enumerable: true\n  },\n  name: {\n    enumerable: true\n  },\n  required: {\n    enumerable: true\n  },\n  size: {\n    enumerable: true\n  },\n  type: {\n    enumerable: true\n  },\n  options: {\n    enumerable: true\n  },\n  length: {\n    enumerable: true\n  },\n  selectedOptions: {\n    enumerable: true\n  },\n  selectedIndex: {\n    enumerable: true\n  },\n  value: {\n    enumerable: true\n  },\n  willValidate: {\n    enumerable: true\n  },\n  validity: {\n    enumerable: true\n  },\n  validationMessage: {\n    enumerable: true\n  },\n  labels: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"HTMLSelectElement\",\n    configurable: true\n  },\n  [Symbol.iterator]: {\n    value: Array.prototype[Symbol.iterator],\n    configurable: true,\n    writable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLSelectElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLSelectElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLSelectElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n\n        const desc = this.getOwnPropertyDescriptor(target, P);\n\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n\n          if (parent === null) {\n            return undefined;\n          }\n\n          return Reflect.get(target, P, receiver);\n        }\n\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n\n        const getter = desc.get;\n\n        if (getter === undefined) {\n          return undefined;\n        }\n\n        return Reflect.apply(getter, receiver, []);\n      },\n\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n\n        const desc = this.getOwnPropertyDescriptor(target, P);\n\n        if (desc !== undefined) {\n          return true;\n        }\n\n        const parent = Object.getPrototypeOf(target);\n\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n\n        return false;\n      },\n\n      ownKeys(target) {\n        const keys = new Set();\n\n        for (const key of target[impl][utils.supportedPropertyIndices]) {\n          keys.add(`${key}`);\n        }\n\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n\n        return [...keys];\n      },\n\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n\n        let ignoreNamedProps = false;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n\n          if (indexedValue !== null) {\n            return {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n\n          ignoreNamedProps = true;\n        }\n\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n\n        if (target === receiver) {\n          if (utils.isArrayIndexPropName(P)) {\n            const index = P >>> 0;\n            let indexedValue = V;\n\n            if (indexedValue === null || indexedValue === undefined) {\n              indexedValue = null;\n            } else {\n              indexedValue = convertHTMLOptionElement(indexedValue, {\n                context: \"Failed to set the \" + index + \" property on 'HTMLSelectElement': The provided value\"\n              });\n            }\n\n            const creating = !(target[impl].item(index) !== null);\n\n            if (creating) {\n              target[impl][utils.indexedSetNew](index, indexedValue);\n            } else {\n              target[impl][utils.indexedSetExisting](index, indexedValue);\n            }\n\n            return true;\n          }\n        }\n\n        let ownDesc;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n\n          if (indexedValue !== null) {\n            ownDesc = {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n        }\n\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n\n          ownDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: undefined\n          };\n        }\n\n        if (!ownDesc.writable) {\n          return false;\n        }\n\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n\n          if (!existingDesc.writable) {\n            return false;\n          }\n\n          valueDesc = {\n            value: V\n          };\n        } else {\n          valueDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: V\n          };\n        }\n\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          if (desc.get || desc.set) {\n            return false;\n          }\n\n          const index = P >>> 0;\n          let indexedValue = desc.value;\n\n          if (indexedValue === null || indexedValue === undefined) {\n            indexedValue = null;\n          } else {\n            indexedValue = convertHTMLOptionElement(indexedValue, {\n              context: \"Failed to set the \" + index + \" property on 'HTMLSelectElement': The provided value\"\n            });\n          }\n\n          const creating = !(target[impl].item(index) !== null);\n\n          if (creating) {\n            target[impl][utils.indexedSetNew](index, indexedValue);\n          } else {\n            target[impl][utils.indexedSetExisting](index, indexedValue);\n          }\n\n          return true;\n        }\n\n        return Reflect.defineProperty(target, P, desc);\n      },\n\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          return !(target[impl].item(index) !== null);\n        }\n\n        return Reflect.deleteProperty(target, P);\n      },\n\n      preventExtensions() {\n        return false;\n      }\n\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLSelectElement,\n  expose: {\n    Window: {\n      HTMLSelectElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLSelectElement-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLSelectElement.js"],"names":["conversions","require","utils","isHTMLOptionElement","is","isHTMLOptGroupElement","isHTMLElement","convertHTMLOptionElement","convert","impl","implSymbol","HTMLElement","HTMLSelectElement","interface","constructor","TypeError","item","index","module","exports","arguments","length","args","curArg","context","push","tryWrapperForImpl","namedItem","name","add","element","implForWrapper","undefined","remove","checkValidity","reportValidity","setCustomValidity","error","autofocus","hasAttributeNS","V","setAttributeNS","removeAttributeNS","disabled","form","multiple","value","getAttributeNS","required","size","parseInt","isNaN","String","type","options","getSameObject","selectedOptions","selectedIndex","willValidate","validity","validationMessage","labels","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","configurable","iterator","Array","writable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","Proxy","get","target","P","receiver","Reflect","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","set","getter","apply","has","ownKeys","keys","Set","key","supportedPropertyIndices","ignoreNamedProps","isArrayIndexPropName","indexedValue","creating","indexedSetNew","indexedSetExisting","ownDesc","isObject","existingDesc","valueDesc","deleteProperty","preventExtensions","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst isHTMLOptionElement = require(\"./HTMLOptionElement.js\").is;\nconst isHTMLOptGroupElement = require(\"./HTMLOptGroupElement.js\").is;\nconst isHTMLElement = require(\"./HTMLElement.js\").is;\nconst convertHTMLOptionElement = require(\"./HTMLOptionElement.js\").convert;\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLSelectElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  item(index) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'item' on 'HTMLSelectElement': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"unsigned long\"](curArg, {\n        context: \"Failed to execute 'item' on 'HTMLSelectElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].item(...args));\n  }\n\n  namedItem(name) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'namedItem' on 'HTMLSelectElement': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'namedItem' on 'HTMLSelectElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].namedItem(...args));\n  }\n\n  add(element) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'add' on 'HTMLSelectElement': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      if (isHTMLOptionElement(curArg) || isHTMLOptGroupElement(curArg)) {\n        curArg = utils.implForWrapper(curArg);\n      } else {\n        throw new TypeError(\n          \"Failed to execute 'add' on 'HTMLSelectElement': parameter 1\" + \" is not of any supported type.\"\n        );\n      }\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      if (curArg !== undefined) {\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          if (isHTMLElement(curArg)) {\n            curArg = utils.implForWrapper(curArg);\n          } else if (typeof curArg === \"number\") {\n            curArg = conversions[\"long\"](curArg, {\n              context: \"Failed to execute 'add' on 'HTMLSelectElement': parameter 2\"\n            });\n          } else {\n            curArg = conversions[\"long\"](curArg, {\n              context: \"Failed to execute 'add' on 'HTMLSelectElement': parameter 2\"\n            });\n          }\n        }\n      } else {\n        curArg = null;\n      }\n      args.push(curArg);\n    }\n    return this[impl].add(...args);\n  }\n\n  remove() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    const args = [];\n    switch (arguments.length) {\n      case 0:\n        break;\n      default: {\n        let curArg = arguments[0];\n        curArg = conversions[\"long\"](curArg, {\n          context: \"Failed to execute 'remove' on 'HTMLSelectElement': parameter 1\"\n        });\n        args.push(curArg);\n      }\n    }\n    return this[impl].remove(...args);\n  }\n\n  checkValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].checkValidity();\n  }\n\n  reportValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].reportValidity();\n  }\n\n  setCustomValidity(error) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'setCustomValidity' on 'HTMLSelectElement': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'setCustomValidity' on 'HTMLSelectElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].setCustomValidity(...args);\n  }\n\n  get autofocus() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"autofocus\");\n  }\n\n  set autofocus(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'autofocus' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"autofocus\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"autofocus\");\n    }\n  }\n\n  get disabled() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"disabled\");\n  }\n\n  set disabled(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'disabled' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"disabled\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"disabled\");\n    }\n  }\n\n  get form() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"form\"]);\n  }\n\n  get multiple() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"multiple\");\n  }\n\n  set multiple(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'multiple' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"multiple\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"multiple\");\n    }\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"name\");\n    return value === null ? \"\" : value;\n  }\n\n  set name(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"name\", V);\n  }\n\n  get required() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"required\");\n  }\n\n  set required(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'required' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"required\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"required\");\n    }\n  }\n\n  get size() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = parseInt(this.getAttributeNS(null, \"size\"));\n    return isNaN(value) || value < 0 || value > 2147483647 ? 0 : value;\n  }\n\n  set size(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'size' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"size\", String(V > 2147483647 ? 0 : V));\n  }\n\n  get type() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  }\n\n  get options() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"options\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"options\"]);\n    });\n  }\n\n  get length() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"length\"];\n  }\n\n  set length(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'length' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    this[impl][\"length\"] = V;\n  }\n\n  get selectedOptions() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"selectedOptions\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"selectedOptions\"]);\n    });\n  }\n\n  get selectedIndex() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"selectedIndex\"];\n  }\n\n  set selectedIndex(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"long\"](V, {\n      context: \"Failed to set the 'selectedIndex' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    this[impl][\"selectedIndex\"] = V;\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'value' property on 'HTMLSelectElement': The provided value\"\n    });\n\n    this[impl][\"value\"] = V;\n  }\n\n  get willValidate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"willValidate\"];\n  }\n\n  get validity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"validity\"]);\n  }\n\n  get validationMessage() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"validationMessage\"];\n  }\n\n  get labels() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"labels\"]);\n  }\n}\nObject.defineProperties(HTMLSelectElement.prototype, {\n  item: { enumerable: true },\n  namedItem: { enumerable: true },\n  add: { enumerable: true },\n  remove: { enumerable: true },\n  checkValidity: { enumerable: true },\n  reportValidity: { enumerable: true },\n  setCustomValidity: { enumerable: true },\n  autofocus: { enumerable: true },\n  disabled: { enumerable: true },\n  form: { enumerable: true },\n  multiple: { enumerable: true },\n  name: { enumerable: true },\n  required: { enumerable: true },\n  size: { enumerable: true },\n  type: { enumerable: true },\n  options: { enumerable: true },\n  length: { enumerable: true },\n  selectedOptions: { enumerable: true },\n  selectedIndex: { enumerable: true },\n  value: { enumerable: true },\n  willValidate: { enumerable: true },\n  validity: { enumerable: true },\n  validationMessage: { enumerable: true },\n  labels: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"HTMLSelectElement\", configurable: true },\n  [Symbol.iterator]: { value: Array.prototype[Symbol.iterator], configurable: true, writable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLSelectElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLSelectElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLSelectElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n          if (parent === null) {\n            return undefined;\n          }\n          return Reflect.get(target, P, receiver);\n        }\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n        const getter = desc.get;\n        if (getter === undefined) {\n          return undefined;\n        }\n        return Reflect.apply(getter, receiver, []);\n      },\n\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc !== undefined) {\n          return true;\n        }\n        const parent = Object.getPrototypeOf(target);\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n        return false;\n      },\n\n      ownKeys(target) {\n        const keys = new Set();\n\n        for (const key of target[impl][utils.supportedPropertyIndices]) {\n          keys.add(`${key}`);\n        }\n\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n        return [...keys];\n      },\n\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        let ignoreNamedProps = false;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n          if (indexedValue !== null) {\n            return {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n          ignoreNamedProps = true;\n        }\n\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n        if (target === receiver) {\n          if (utils.isArrayIndexPropName(P)) {\n            const index = P >>> 0;\n            let indexedValue = V;\n\n            if (indexedValue === null || indexedValue === undefined) {\n              indexedValue = null;\n            } else {\n              indexedValue = convertHTMLOptionElement(indexedValue, {\n                context: \"Failed to set the \" + index + \" property on 'HTMLSelectElement': The provided value\"\n              });\n            }\n\n            const creating = !(target[impl].item(index) !== null);\n            if (creating) {\n              target[impl][utils.indexedSetNew](index, indexedValue);\n            } else {\n              target[impl][utils.indexedSetExisting](index, indexedValue);\n            }\n\n            return true;\n          }\n        }\n        let ownDesc;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n          if (indexedValue !== null) {\n            ownDesc = {\n              writable: true,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n        }\n\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n          ownDesc = { writable: true, enumerable: true, configurable: true, value: undefined };\n        }\n        if (!ownDesc.writable) {\n          return false;\n        }\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n          if (!existingDesc.writable) {\n            return false;\n          }\n          valueDesc = { value: V };\n        } else {\n          valueDesc = { writable: true, enumerable: true, configurable: true, value: V };\n        }\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          if (desc.get || desc.set) {\n            return false;\n          }\n\n          const index = P >>> 0;\n          let indexedValue = desc.value;\n\n          if (indexedValue === null || indexedValue === undefined) {\n            indexedValue = null;\n          } else {\n            indexedValue = convertHTMLOptionElement(indexedValue, {\n              context: \"Failed to set the \" + index + \" property on 'HTMLSelectElement': The provided value\"\n            });\n          }\n\n          const creating = !(target[impl].item(index) !== null);\n          if (creating) {\n            target[impl][utils.indexedSetNew](index, indexedValue);\n          } else {\n            target[impl][utils.indexedSetExisting](index, indexedValue);\n          }\n\n          return true;\n        }\n\n        return Reflect.defineProperty(target, P, desc);\n      },\n\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          return !(target[impl].item(index) !== null);\n        }\n\n        return Reflect.deleteProperty(target, P);\n      },\n\n      preventExtensions() {\n        return false;\n      }\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLSelectElement,\n  expose: {\n    Window: { HTMLSelectElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLSelectElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}