{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLMeterElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'value' property on 'HTMLMeterElement': The provided value\"\n    });\n    this[impl][\"value\"] = V;\n  }\n\n  get min() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"min\"];\n  }\n\n  set min(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'min' property on 'HTMLMeterElement': The provided value\"\n    });\n    this[impl][\"min\"] = V;\n  }\n\n  get max() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"max\"];\n  }\n\n  set max(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'max' property on 'HTMLMeterElement': The provided value\"\n    });\n    this[impl][\"max\"] = V;\n  }\n\n  get low() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"low\"];\n  }\n\n  set low(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'low' property on 'HTMLMeterElement': The provided value\"\n    });\n    this[impl][\"low\"] = V;\n  }\n\n  get high() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"high\"];\n  }\n\n  set high(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'high' property on 'HTMLMeterElement': The provided value\"\n    });\n    this[impl][\"high\"] = V;\n  }\n\n  get optimum() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"optimum\"];\n  }\n\n  set optimum(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'optimum' property on 'HTMLMeterElement': The provided value\"\n    });\n    this[impl][\"optimum\"] = V;\n  }\n\n  get labels() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"labels\"]);\n  }\n\n}\n\nObject.defineProperties(HTMLMeterElement.prototype, {\n  value: {\n    enumerable: true\n  },\n  min: {\n    enumerable: true\n  },\n  max: {\n    enumerable: true\n  },\n  low: {\n    enumerable: true\n  },\n  high: {\n    enumerable: true\n  },\n  optimum: {\n    enumerable: true\n  },\n  labels: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"HTMLMeterElement\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLMeterElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLMeterElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLMeterElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLMeterElement,\n  expose: {\n    Window: {\n      HTMLMeterElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLMeterElement-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLMeterElement.js"],"names":["conversions","require","utils","impl","implSymbol","HTMLElement","HTMLMeterElement","interface","constructor","TypeError","value","module","exports","is","V","context","min","max","low","high","optimum","labels","tryWrapperForImpl","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLMeterElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'value' property on 'HTMLMeterElement': The provided value\"\n    });\n\n    this[impl][\"value\"] = V;\n  }\n\n  get min() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"min\"];\n  }\n\n  set min(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'min' property on 'HTMLMeterElement': The provided value\"\n    });\n\n    this[impl][\"min\"] = V;\n  }\n\n  get max() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"max\"];\n  }\n\n  set max(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'max' property on 'HTMLMeterElement': The provided value\"\n    });\n\n    this[impl][\"max\"] = V;\n  }\n\n  get low() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"low\"];\n  }\n\n  set low(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'low' property on 'HTMLMeterElement': The provided value\"\n    });\n\n    this[impl][\"low\"] = V;\n  }\n\n  get high() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"high\"];\n  }\n\n  set high(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'high' property on 'HTMLMeterElement': The provided value\"\n    });\n\n    this[impl][\"high\"] = V;\n  }\n\n  get optimum() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"optimum\"];\n  }\n\n  set optimum(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"double\"](V, {\n      context: \"Failed to set the 'optimum' property on 'HTMLMeterElement': The provided value\"\n    });\n\n    this[impl][\"optimum\"] = V;\n  }\n\n  get labels() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"labels\"]);\n  }\n}\nObject.defineProperties(HTMLMeterElement.prototype, {\n  value: { enumerable: true },\n  min: { enumerable: true },\n  max: { enumerable: true },\n  low: { enumerable: true },\n  high: { enumerable: true },\n  optimum: { enumerable: true },\n  labels: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"HTMLMeterElement\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLMeterElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLMeterElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLMeterElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLMeterElement,\n  expose: {\n    Window: { HTMLMeterElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLMeterElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}