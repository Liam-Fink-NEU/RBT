{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLOutputElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  checkValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].checkValidity();\n  }\n\n  reportValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].reportValidity();\n  }\n\n  setCustomValidity(error) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'setCustomValidity' on 'HTMLOutputElement': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'setCustomValidity' on 'HTMLOutputElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].setCustomValidity(...args);\n  }\n\n  get htmlFor() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"htmlFor\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"htmlFor\"]);\n    });\n  }\n\n  set htmlFor(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    this.htmlFor.value = V;\n  }\n\n  get form() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"form\"]);\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"name\");\n    return value === null ? \"\" : value;\n  }\n\n  set name(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLOutputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"name\", V);\n  }\n\n  get type() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  }\n\n  get defaultValue() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"defaultValue\"];\n  }\n\n  set defaultValue(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'defaultValue' property on 'HTMLOutputElement': The provided value\"\n    });\n    this[impl][\"defaultValue\"] = V;\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'value' property on 'HTMLOutputElement': The provided value\"\n    });\n    this[impl][\"value\"] = V;\n  }\n\n  get willValidate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"willValidate\"];\n  }\n\n  get validity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"validity\"]);\n  }\n\n  get validationMessage() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"validationMessage\"];\n  }\n\n  get labels() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"labels\"]);\n  }\n\n}\n\nObject.defineProperties(HTMLOutputElement.prototype, {\n  checkValidity: {\n    enumerable: true\n  },\n  reportValidity: {\n    enumerable: true\n  },\n  setCustomValidity: {\n    enumerable: true\n  },\n  htmlFor: {\n    enumerable: true\n  },\n  form: {\n    enumerable: true\n  },\n  name: {\n    enumerable: true\n  },\n  type: {\n    enumerable: true\n  },\n  defaultValue: {\n    enumerable: true\n  },\n  value: {\n    enumerable: true\n  },\n  willValidate: {\n    enumerable: true\n  },\n  validity: {\n    enumerable: true\n  },\n  validationMessage: {\n    enumerable: true\n  },\n  labels: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"HTMLOutputElement\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLOutputElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLOutputElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLOutputElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLOutputElement,\n  expose: {\n    Window: {\n      HTMLOutputElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLOutputElement-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLOutputElement.js"],"names":["conversions","require","utils","impl","implSymbol","HTMLElement","HTMLOutputElement","interface","constructor","TypeError","checkValidity","module","exports","is","reportValidity","setCustomValidity","error","arguments","length","args","curArg","context","push","htmlFor","getSameObject","tryWrapperForImpl","V","value","form","name","getAttributeNS","setAttributeNS","type","defaultValue","willValidate","validity","validationMessage","labels","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLOutputElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  checkValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].checkValidity();\n  }\n\n  reportValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].reportValidity();\n  }\n\n  setCustomValidity(error) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'setCustomValidity' on 'HTMLOutputElement': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'setCustomValidity' on 'HTMLOutputElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].setCustomValidity(...args);\n  }\n\n  get htmlFor() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"htmlFor\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"htmlFor\"]);\n    });\n  }\n\n  set htmlFor(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    this.htmlFor.value = V;\n  }\n\n  get form() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"form\"]);\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"name\");\n    return value === null ? \"\" : value;\n  }\n\n  set name(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLOutputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"name\", V);\n  }\n\n  get type() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  }\n\n  get defaultValue() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"defaultValue\"];\n  }\n\n  set defaultValue(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'defaultValue' property on 'HTMLOutputElement': The provided value\"\n    });\n\n    this[impl][\"defaultValue\"] = V;\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'value' property on 'HTMLOutputElement': The provided value\"\n    });\n\n    this[impl][\"value\"] = V;\n  }\n\n  get willValidate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"willValidate\"];\n  }\n\n  get validity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"validity\"]);\n  }\n\n  get validationMessage() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"validationMessage\"];\n  }\n\n  get labels() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"labels\"]);\n  }\n}\nObject.defineProperties(HTMLOutputElement.prototype, {\n  checkValidity: { enumerable: true },\n  reportValidity: { enumerable: true },\n  setCustomValidity: { enumerable: true },\n  htmlFor: { enumerable: true },\n  form: { enumerable: true },\n  name: { enumerable: true },\n  type: { enumerable: true },\n  defaultValue: { enumerable: true },\n  value: { enumerable: true },\n  willValidate: { enumerable: true },\n  validity: { enumerable: true },\n  validationMessage: { enumerable: true },\n  labels: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"HTMLOutputElement\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLOutputElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLOutputElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLOutputElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLOutputElement,\n  expose: {\n    Window: { HTMLOutputElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLOutputElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}