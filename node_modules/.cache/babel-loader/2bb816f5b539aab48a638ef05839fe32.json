{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertSelectionMode = require(\"./SelectionMode.js\").convert;\n\nconst convertFileList = require(\"./FileList.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLInputElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  checkValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].checkValidity();\n  }\n\n  reportValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].reportValidity();\n  }\n\n  setCustomValidity(error) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'setCustomValidity' on 'HTMLInputElement': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'setCustomValidity' on 'HTMLInputElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].setCustomValidity(...args);\n  }\n\n  select() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].select();\n  }\n\n  setRangeText(replacement) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'setRangeText' on 'HTMLInputElement': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n\n    switch (arguments.length) {\n      case 1:\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        break;\n\n      case 2:\n        throw new TypeError(\"Failed to execute 'setRangeText' on 'HTMLInputElement': only \" + arguments.length + \" arguments present.\");\n        break;\n\n      case 3:\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[1];\n          curArg = conversions[\"unsigned long\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 2\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[2];\n          curArg = conversions[\"unsigned long\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 3\"\n          });\n          args.push(curArg);\n        }\n        break;\n\n      default:\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[1];\n          curArg = conversions[\"unsigned long\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 2\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[2];\n          curArg = conversions[\"unsigned long\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 3\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[3];\n\n          if (curArg !== undefined) {\n            curArg = convertSelectionMode(curArg, {\n              context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 4\"\n            });\n          } else {\n            curArg = \"preserve\";\n          }\n\n          args.push(curArg);\n        }\n    }\n\n    return this[impl].setRangeText(...args);\n  }\n\n  setSelectionRange(start, end) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 2) {\n      throw new TypeError(\"Failed to execute 'setSelectionRange' on 'HTMLInputElement': 2 arguments required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"unsigned long\"](curArg, {\n        context: \"Failed to execute 'setSelectionRange' on 'HTMLInputElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = conversions[\"unsigned long\"](curArg, {\n        context: \"Failed to execute 'setSelectionRange' on 'HTMLInputElement': parameter 2\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[2];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'setSelectionRange' on 'HTMLInputElement': parameter 3\"\n        });\n      }\n\n      args.push(curArg);\n    }\n    return this[impl].setSelectionRange(...args);\n  }\n\n  get accept() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"accept\");\n    return value === null ? \"\" : value;\n  }\n\n  set accept(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'accept' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"accept\", V);\n  }\n\n  get alt() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"alt\");\n    return value === null ? \"\" : value;\n  }\n\n  set alt(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'alt' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"alt\", V);\n  }\n\n  get autocomplete() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"autocomplete\");\n    return value === null ? \"\" : value;\n  }\n\n  set autocomplete(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'autocomplete' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"autocomplete\", V);\n  }\n\n  get autofocus() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"autofocus\");\n  }\n\n  set autofocus(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'autofocus' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"autofocus\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"autofocus\");\n    }\n  }\n\n  get defaultChecked() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"checked\");\n  }\n\n  set defaultChecked(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'defaultChecked' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"checked\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"checked\");\n    }\n  }\n\n  get checked() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"checked\"];\n  }\n\n  set checked(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'checked' property on 'HTMLInputElement': The provided value\"\n    });\n    this[impl][\"checked\"] = V;\n  }\n\n  get dirName() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"dirname\");\n    return value === null ? \"\" : value;\n  }\n\n  set dirName(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'dirName' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"dirname\", V);\n  }\n\n  get disabled() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"disabled\");\n  }\n\n  set disabled(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'disabled' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"disabled\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"disabled\");\n    }\n  }\n\n  get form() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"form\"]);\n  }\n\n  get files() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"files\"]);\n  }\n\n  set files(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = convertFileList(V, {\n        context: \"Failed to set the 'files' property on 'HTMLInputElement': The provided value\"\n      });\n    }\n\n    this[impl][\"files\"] = V;\n  }\n\n  get formNoValidate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"formnovalidate\");\n  }\n\n  set formNoValidate(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'formNoValidate' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"formnovalidate\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"formnovalidate\");\n    }\n  }\n\n  get formTarget() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"formtarget\");\n    return value === null ? \"\" : value;\n  }\n\n  set formTarget(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'formTarget' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"formtarget\", V);\n  }\n\n  get indeterminate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"indeterminate\"];\n  }\n\n  set indeterminate(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'indeterminate' property on 'HTMLInputElement': The provided value\"\n    });\n    this[impl][\"indeterminate\"] = V;\n  }\n\n  get inputMode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"inputmode\");\n    return value === null ? \"\" : value;\n  }\n\n  set inputMode(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'inputMode' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"inputmode\", V);\n  }\n\n  get list() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"list\"]);\n  }\n\n  get max() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"max\");\n    return value === null ? \"\" : value;\n  }\n\n  set max(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'max' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"max\", V);\n  }\n\n  get maxLength() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"maxLength\"];\n  }\n\n  set maxLength(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"long\"](V, {\n      context: \"Failed to set the 'maxLength' property on 'HTMLInputElement': The provided value\"\n    });\n    this[impl][\"maxLength\"] = V;\n  }\n\n  get min() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"min\");\n    return value === null ? \"\" : value;\n  }\n\n  set min(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'min' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"min\", V);\n  }\n\n  get minLength() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"minLength\"];\n  }\n\n  set minLength(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"long\"](V, {\n      context: \"Failed to set the 'minLength' property on 'HTMLInputElement': The provided value\"\n    });\n    this[impl][\"minLength\"] = V;\n  }\n\n  get multiple() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"multiple\");\n  }\n\n  set multiple(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'multiple' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"multiple\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"multiple\");\n    }\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"name\");\n    return value === null ? \"\" : value;\n  }\n\n  set name(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"name\", V);\n  }\n\n  get pattern() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"pattern\");\n    return value === null ? \"\" : value;\n  }\n\n  set pattern(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'pattern' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"pattern\", V);\n  }\n\n  get placeholder() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"placeholder\");\n    return value === null ? \"\" : value;\n  }\n\n  set placeholder(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'placeholder' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"placeholder\", V);\n  }\n\n  get readOnly() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"readonly\");\n  }\n\n  set readOnly(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'readOnly' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"readonly\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"readonly\");\n    }\n  }\n\n  get required() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"required\");\n  }\n\n  set required(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'required' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"required\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"required\");\n    }\n  }\n\n  get size() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"size\"];\n  }\n\n  set size(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'size' property on 'HTMLInputElement': The provided value\"\n    });\n    this[impl][\"size\"] = V;\n  }\n\n  get src() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"src\"];\n  }\n\n  set src(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"USVString\"](V, {\n      context: \"Failed to set the 'src' property on 'HTMLInputElement': The provided value\"\n    });\n    this[impl][\"src\"] = V;\n  }\n\n  get step() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"step\");\n    return value === null ? \"\" : value;\n  }\n\n  set step(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'step' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"step\", V);\n  }\n\n  get type() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  }\n\n  set type(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'type' property on 'HTMLInputElement': The provided value\"\n    });\n    this[impl][\"type\"] = V;\n  }\n\n  get defaultValue() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"value\");\n    return value === null ? \"\" : value;\n  }\n\n  set defaultValue(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'defaultValue' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"value\", V);\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'value' property on 'HTMLInputElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n    this[impl][\"value\"] = V;\n  }\n\n  get willValidate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"willValidate\"];\n  }\n\n  get validity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"validity\"]);\n  }\n\n  get validationMessage() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"validationMessage\"];\n  }\n\n  get labels() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"labels\"]);\n  }\n\n  get selectionStart() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"selectionStart\"];\n  }\n\n  set selectionStart(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = conversions[\"unsigned long\"](V, {\n        context: \"Failed to set the 'selectionStart' property on 'HTMLInputElement': The provided value\"\n      });\n    }\n\n    this[impl][\"selectionStart\"] = V;\n  }\n\n  get selectionEnd() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"selectionEnd\"];\n  }\n\n  set selectionEnd(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = conversions[\"unsigned long\"](V, {\n        context: \"Failed to set the 'selectionEnd' property on 'HTMLInputElement': The provided value\"\n      });\n    }\n\n    this[impl][\"selectionEnd\"] = V;\n  }\n\n  get selectionDirection() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"selectionDirection\"];\n  }\n\n  set selectionDirection(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'selectionDirection' property on 'HTMLInputElement': The provided value\"\n      });\n    }\n\n    this[impl][\"selectionDirection\"] = V;\n  }\n\n  get align() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"align\");\n    return value === null ? \"\" : value;\n  }\n\n  set align(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"align\", V);\n  }\n\n  get useMap() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"usemap\");\n    return value === null ? \"\" : value;\n  }\n\n  set useMap(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'useMap' property on 'HTMLInputElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"usemap\", V);\n  }\n\n}\n\nObject.defineProperties(HTMLInputElement.prototype, {\n  checkValidity: {\n    enumerable: true\n  },\n  reportValidity: {\n    enumerable: true\n  },\n  setCustomValidity: {\n    enumerable: true\n  },\n  select: {\n    enumerable: true\n  },\n  setRangeText: {\n    enumerable: true\n  },\n  setSelectionRange: {\n    enumerable: true\n  },\n  accept: {\n    enumerable: true\n  },\n  alt: {\n    enumerable: true\n  },\n  autocomplete: {\n    enumerable: true\n  },\n  autofocus: {\n    enumerable: true\n  },\n  defaultChecked: {\n    enumerable: true\n  },\n  checked: {\n    enumerable: true\n  },\n  dirName: {\n    enumerable: true\n  },\n  disabled: {\n    enumerable: true\n  },\n  form: {\n    enumerable: true\n  },\n  files: {\n    enumerable: true\n  },\n  formNoValidate: {\n    enumerable: true\n  },\n  formTarget: {\n    enumerable: true\n  },\n  indeterminate: {\n    enumerable: true\n  },\n  inputMode: {\n    enumerable: true\n  },\n  list: {\n    enumerable: true\n  },\n  max: {\n    enumerable: true\n  },\n  maxLength: {\n    enumerable: true\n  },\n  min: {\n    enumerable: true\n  },\n  minLength: {\n    enumerable: true\n  },\n  multiple: {\n    enumerable: true\n  },\n  name: {\n    enumerable: true\n  },\n  pattern: {\n    enumerable: true\n  },\n  placeholder: {\n    enumerable: true\n  },\n  readOnly: {\n    enumerable: true\n  },\n  required: {\n    enumerable: true\n  },\n  size: {\n    enumerable: true\n  },\n  src: {\n    enumerable: true\n  },\n  step: {\n    enumerable: true\n  },\n  type: {\n    enumerable: true\n  },\n  defaultValue: {\n    enumerable: true\n  },\n  value: {\n    enumerable: true\n  },\n  willValidate: {\n    enumerable: true\n  },\n  validity: {\n    enumerable: true\n  },\n  validationMessage: {\n    enumerable: true\n  },\n  labels: {\n    enumerable: true\n  },\n  selectionStart: {\n    enumerable: true\n  },\n  selectionEnd: {\n    enumerable: true\n  },\n  selectionDirection: {\n    enumerable: true\n  },\n  align: {\n    enumerable: true\n  },\n  useMap: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"HTMLInputElement\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLInputElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLInputElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLInputElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLInputElement,\n  expose: {\n    Window: {\n      HTMLInputElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLInputElement-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLInputElement.js"],"names":["conversions","require","utils","convertSelectionMode","convert","convertFileList","impl","implSymbol","HTMLElement","HTMLInputElement","interface","constructor","TypeError","checkValidity","module","exports","is","reportValidity","setCustomValidity","error","arguments","length","args","curArg","context","push","select","setRangeText","replacement","undefined","setSelectionRange","start","end","accept","value","getAttributeNS","V","setAttributeNS","alt","autocomplete","autofocus","hasAttributeNS","removeAttributeNS","defaultChecked","checked","dirName","disabled","form","tryWrapperForImpl","files","formNoValidate","formTarget","indeterminate","inputMode","list","max","maxLength","min","minLength","multiple","name","pattern","placeholder","readOnly","required","size","src","step","type","defaultValue","treatNullAsEmptyString","willValidate","validity","validationMessage","labels","selectionStart","selectionEnd","selectionDirection","align","useMap","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertSelectionMode = require(\"./SelectionMode.js\").convert;\nconst convertFileList = require(\"./FileList.js\").convert;\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLInputElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  checkValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].checkValidity();\n  }\n\n  reportValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].reportValidity();\n  }\n\n  setCustomValidity(error) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'setCustomValidity' on 'HTMLInputElement': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'setCustomValidity' on 'HTMLInputElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].setCustomValidity(...args);\n  }\n\n  select() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].select();\n  }\n\n  setRangeText(replacement) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'setRangeText' on 'HTMLInputElement': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    switch (arguments.length) {\n      case 1:\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        break;\n      case 2:\n        throw new TypeError(\n          \"Failed to execute 'setRangeText' on 'HTMLInputElement': only \" + arguments.length + \" arguments present.\"\n        );\n        break;\n      case 3:\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[1];\n          curArg = conversions[\"unsigned long\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 2\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[2];\n          curArg = conversions[\"unsigned long\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 3\"\n          });\n          args.push(curArg);\n        }\n        break;\n      default:\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[1];\n          curArg = conversions[\"unsigned long\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 2\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[2];\n          curArg = conversions[\"unsigned long\"](curArg, {\n            context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 3\"\n          });\n          args.push(curArg);\n        }\n        {\n          let curArg = arguments[3];\n          if (curArg !== undefined) {\n            curArg = convertSelectionMode(curArg, {\n              context: \"Failed to execute 'setRangeText' on 'HTMLInputElement': parameter 4\"\n            });\n          } else {\n            curArg = \"preserve\";\n          }\n          args.push(curArg);\n        }\n    }\n    return this[impl].setRangeText(...args);\n  }\n\n  setSelectionRange(start, end) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 2) {\n      throw new TypeError(\n        \"Failed to execute 'setSelectionRange' on 'HTMLInputElement': 2 arguments required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"unsigned long\"](curArg, {\n        context: \"Failed to execute 'setSelectionRange' on 'HTMLInputElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[1];\n      curArg = conversions[\"unsigned long\"](curArg, {\n        context: \"Failed to execute 'setSelectionRange' on 'HTMLInputElement': parameter 2\"\n      });\n      args.push(curArg);\n    }\n    {\n      let curArg = arguments[2];\n      if (curArg !== undefined) {\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'setSelectionRange' on 'HTMLInputElement': parameter 3\"\n        });\n      }\n      args.push(curArg);\n    }\n    return this[impl].setSelectionRange(...args);\n  }\n\n  get accept() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"accept\");\n    return value === null ? \"\" : value;\n  }\n\n  set accept(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'accept' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"accept\", V);\n  }\n\n  get alt() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"alt\");\n    return value === null ? \"\" : value;\n  }\n\n  set alt(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'alt' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"alt\", V);\n  }\n\n  get autocomplete() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"autocomplete\");\n    return value === null ? \"\" : value;\n  }\n\n  set autocomplete(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'autocomplete' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"autocomplete\", V);\n  }\n\n  get autofocus() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"autofocus\");\n  }\n\n  set autofocus(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'autofocus' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"autofocus\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"autofocus\");\n    }\n  }\n\n  get defaultChecked() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"checked\");\n  }\n\n  set defaultChecked(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'defaultChecked' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"checked\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"checked\");\n    }\n  }\n\n  get checked() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"checked\"];\n  }\n\n  set checked(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'checked' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this[impl][\"checked\"] = V;\n  }\n\n  get dirName() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"dirname\");\n    return value === null ? \"\" : value;\n  }\n\n  set dirName(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'dirName' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"dirname\", V);\n  }\n\n  get disabled() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"disabled\");\n  }\n\n  set disabled(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'disabled' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"disabled\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"disabled\");\n    }\n  }\n\n  get form() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"form\"]);\n  }\n\n  get files() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"files\"]);\n  }\n\n  set files(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = convertFileList(V, {\n        context: \"Failed to set the 'files' property on 'HTMLInputElement': The provided value\"\n      });\n    }\n    this[impl][\"files\"] = V;\n  }\n\n  get formNoValidate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"formnovalidate\");\n  }\n\n  set formNoValidate(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'formNoValidate' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"formnovalidate\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"formnovalidate\");\n    }\n  }\n\n  get formTarget() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"formtarget\");\n    return value === null ? \"\" : value;\n  }\n\n  set formTarget(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'formTarget' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"formtarget\", V);\n  }\n\n  get indeterminate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"indeterminate\"];\n  }\n\n  set indeterminate(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'indeterminate' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this[impl][\"indeterminate\"] = V;\n  }\n\n  get inputMode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"inputmode\");\n    return value === null ? \"\" : value;\n  }\n\n  set inputMode(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'inputMode' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"inputmode\", V);\n  }\n\n  get list() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"list\"]);\n  }\n\n  get max() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"max\");\n    return value === null ? \"\" : value;\n  }\n\n  set max(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'max' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"max\", V);\n  }\n\n  get maxLength() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"maxLength\"];\n  }\n\n  set maxLength(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"long\"](V, {\n      context: \"Failed to set the 'maxLength' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this[impl][\"maxLength\"] = V;\n  }\n\n  get min() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"min\");\n    return value === null ? \"\" : value;\n  }\n\n  set min(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'min' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"min\", V);\n  }\n\n  get minLength() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"minLength\"];\n  }\n\n  set minLength(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"long\"](V, {\n      context: \"Failed to set the 'minLength' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this[impl][\"minLength\"] = V;\n  }\n\n  get multiple() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"multiple\");\n  }\n\n  set multiple(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'multiple' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"multiple\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"multiple\");\n    }\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"name\");\n    return value === null ? \"\" : value;\n  }\n\n  set name(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"name\", V);\n  }\n\n  get pattern() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"pattern\");\n    return value === null ? \"\" : value;\n  }\n\n  set pattern(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'pattern' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"pattern\", V);\n  }\n\n  get placeholder() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"placeholder\");\n    return value === null ? \"\" : value;\n  }\n\n  set placeholder(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'placeholder' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"placeholder\", V);\n  }\n\n  get readOnly() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"readonly\");\n  }\n\n  set readOnly(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'readOnly' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"readonly\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"readonly\");\n    }\n  }\n\n  get required() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"required\");\n  }\n\n  set required(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'required' property on 'HTMLInputElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"required\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"required\");\n    }\n  }\n\n  get size() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"size\"];\n  }\n\n  set size(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'size' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this[impl][\"size\"] = V;\n  }\n\n  get src() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"src\"];\n  }\n\n  set src(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"USVString\"](V, {\n      context: \"Failed to set the 'src' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this[impl][\"src\"] = V;\n  }\n\n  get step() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"step\");\n    return value === null ? \"\" : value;\n  }\n\n  set step(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'step' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"step\", V);\n  }\n\n  get type() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  }\n\n  set type(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'type' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this[impl][\"type\"] = V;\n  }\n\n  get defaultValue() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"value\");\n    return value === null ? \"\" : value;\n  }\n\n  set defaultValue(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'defaultValue' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"value\", V);\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'value' property on 'HTMLInputElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n\n    this[impl][\"value\"] = V;\n  }\n\n  get willValidate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"willValidate\"];\n  }\n\n  get validity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"validity\"]);\n  }\n\n  get validationMessage() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"validationMessage\"];\n  }\n\n  get labels() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"labels\"]);\n  }\n\n  get selectionStart() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"selectionStart\"];\n  }\n\n  set selectionStart(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = conversions[\"unsigned long\"](V, {\n        context: \"Failed to set the 'selectionStart' property on 'HTMLInputElement': The provided value\"\n      });\n    }\n    this[impl][\"selectionStart\"] = V;\n  }\n\n  get selectionEnd() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"selectionEnd\"];\n  }\n\n  set selectionEnd(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = conversions[\"unsigned long\"](V, {\n        context: \"Failed to set the 'selectionEnd' property on 'HTMLInputElement': The provided value\"\n      });\n    }\n    this[impl][\"selectionEnd\"] = V;\n  }\n\n  get selectionDirection() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"selectionDirection\"];\n  }\n\n  set selectionDirection(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'selectionDirection' property on 'HTMLInputElement': The provided value\"\n      });\n    }\n    this[impl][\"selectionDirection\"] = V;\n  }\n\n  get align() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"align\");\n    return value === null ? \"\" : value;\n  }\n\n  set align(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"align\", V);\n  }\n\n  get useMap() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"usemap\");\n    return value === null ? \"\" : value;\n  }\n\n  set useMap(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'useMap' property on 'HTMLInputElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"usemap\", V);\n  }\n}\nObject.defineProperties(HTMLInputElement.prototype, {\n  checkValidity: { enumerable: true },\n  reportValidity: { enumerable: true },\n  setCustomValidity: { enumerable: true },\n  select: { enumerable: true },\n  setRangeText: { enumerable: true },\n  setSelectionRange: { enumerable: true },\n  accept: { enumerable: true },\n  alt: { enumerable: true },\n  autocomplete: { enumerable: true },\n  autofocus: { enumerable: true },\n  defaultChecked: { enumerable: true },\n  checked: { enumerable: true },\n  dirName: { enumerable: true },\n  disabled: { enumerable: true },\n  form: { enumerable: true },\n  files: { enumerable: true },\n  formNoValidate: { enumerable: true },\n  formTarget: { enumerable: true },\n  indeterminate: { enumerable: true },\n  inputMode: { enumerable: true },\n  list: { enumerable: true },\n  max: { enumerable: true },\n  maxLength: { enumerable: true },\n  min: { enumerable: true },\n  minLength: { enumerable: true },\n  multiple: { enumerable: true },\n  name: { enumerable: true },\n  pattern: { enumerable: true },\n  placeholder: { enumerable: true },\n  readOnly: { enumerable: true },\n  required: { enumerable: true },\n  size: { enumerable: true },\n  src: { enumerable: true },\n  step: { enumerable: true },\n  type: { enumerable: true },\n  defaultValue: { enumerable: true },\n  value: { enumerable: true },\n  willValidate: { enumerable: true },\n  validity: { enumerable: true },\n  validationMessage: { enumerable: true },\n  labels: { enumerable: true },\n  selectionStart: { enumerable: true },\n  selectionEnd: { enumerable: true },\n  selectionDirection: { enumerable: true },\n  align: { enumerable: true },\n  useMap: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"HTMLInputElement\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLInputElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLInputElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLInputElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLInputElement,\n  expose: {\n    Window: { HTMLInputElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLInputElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}