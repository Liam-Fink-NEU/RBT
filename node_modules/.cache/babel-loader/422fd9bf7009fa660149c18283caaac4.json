{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass NodeIterator {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  nextNode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].nextNode());\n  }\n\n  previousNode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].previousNode());\n  }\n\n  detach() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].detach();\n  }\n\n  get root() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"root\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"root\"]);\n    });\n  }\n\n  get referenceNode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"referenceNode\"]);\n  }\n\n  get pointerBeforeReferenceNode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"pointerBeforeReferenceNode\"];\n  }\n\n  get whatToShow() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"whatToShow\"];\n  }\n\n  get filter() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"filter\"]);\n  }\n\n}\n\nObject.defineProperties(NodeIterator.prototype, {\n  nextNode: {\n    enumerable: true\n  },\n  previousNode: {\n    enumerable: true\n  },\n  detach: {\n    enumerable: true\n  },\n  root: {\n    enumerable: true\n  },\n  referenceNode: {\n    enumerable: true\n  },\n  pointerBeforeReferenceNode: {\n    enumerable: true\n  },\n  whatToShow: {\n    enumerable: true\n  },\n  filter: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"NodeIterator\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'NodeIterator'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: NodeIterator,\n  expose: {\n    Window: {\n      NodeIterator\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../traversal/NodeIterator-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/NodeIterator.js"],"names":["conversions","require","utils","impl","implSymbol","NodeIterator","constructor","TypeError","nextNode","module","exports","is","tryWrapperForImpl","previousNode","detach","root","getSameObject","referenceNode","pointerBeforeReferenceNode","whatToShow","filter","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","value","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass NodeIterator {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  nextNode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].nextNode());\n  }\n\n  previousNode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].previousNode());\n  }\n\n  detach() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].detach();\n  }\n\n  get root() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"root\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"root\"]);\n    });\n  }\n\n  get referenceNode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"referenceNode\"]);\n  }\n\n  get pointerBeforeReferenceNode() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"pointerBeforeReferenceNode\"];\n  }\n\n  get whatToShow() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"whatToShow\"];\n  }\n\n  get filter() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"filter\"]);\n  }\n}\nObject.defineProperties(NodeIterator.prototype, {\n  nextNode: { enumerable: true },\n  previousNode: { enumerable: true },\n  detach: { enumerable: true },\n  root: { enumerable: true },\n  referenceNode: { enumerable: true },\n  pointerBeforeReferenceNode: { enumerable: true },\n  whatToShow: { enumerable: true },\n  filter: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"NodeIterator\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'NodeIterator'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: NodeIterator,\n  expose: {\n    Window: { NodeIterator }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../traversal/NodeIterator-impl.js\");\n"]},"metadata":{},"sourceType":"script"}