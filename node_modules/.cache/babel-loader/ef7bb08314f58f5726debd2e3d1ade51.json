{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass DOMStringMap {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n}\n\nObject.defineProperties(DOMStringMap.prototype, {\n  [Symbol.toStringTag]: {\n    value: \"DOMStringMap\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'DOMStringMap'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(DOMStringMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(DOMStringMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n\n        const desc = this.getOwnPropertyDescriptor(target, P);\n\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n\n          if (parent === null) {\n            return undefined;\n          }\n\n          return Reflect.get(target, P, receiver);\n        }\n\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n\n        const getter = desc.get;\n\n        if (getter === undefined) {\n          return undefined;\n        }\n\n        return Reflect.apply(getter, receiver, []);\n      },\n\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n\n        const desc = this.getOwnPropertyDescriptor(target, P);\n\n        if (desc !== undefined) {\n          return true;\n        }\n\n        const parent = Object.getPrototypeOf(target);\n\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n\n        return false;\n      },\n\n      ownKeys(target) {\n        const keys = new Set();\n\n        for (const key of target[impl][utils.supportedPropertyNames]) {\n          if (!utils.hasOwn(target, key)) {\n            keys.add(`${key}`);\n          }\n        }\n\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n\n        return [...keys];\n      },\n\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n\n        let ignoreNamedProps = false;\n        const namedValue = target[impl][utils.namedGet](P);\n\n        if (namedValue !== undefined && !utils.hasOwn(target, P) && !ignoreNamedProps) {\n          return {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: utils.tryWrapperForImpl(namedValue)\n          };\n        }\n\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n\n        if (target === receiver) {\n          if (typeof P === \"string\" && !utils.isArrayIndexPropName(P)) {\n            let namedValue = V;\n            namedValue = conversions[\"DOMString\"](namedValue, {\n              context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n            });\n            const creating = !(target[impl][utils.namedGet](P) !== undefined);\n\n            if (creating) {\n              target[impl][utils.namedSetNew](P, namedValue);\n            } else {\n              target[impl][utils.namedSetExisting](P, namedValue);\n            }\n\n            return true;\n          }\n        }\n\n        let ownDesc;\n\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n\n          ownDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: undefined\n          };\n        }\n\n        if (!ownDesc.writable) {\n          return false;\n        }\n\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n\n          if (!existingDesc.writable) {\n            return false;\n          }\n\n          valueDesc = {\n            value: V\n          };\n        } else {\n          valueDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: V\n          };\n        }\n\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n\n        if (desc.get || desc.set) {\n          return false;\n        }\n\n        let namedValue = desc.value;\n        namedValue = conversions[\"DOMString\"](namedValue, {\n          context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n        });\n        const creating = !(target[impl][utils.namedGet](P) !== undefined);\n\n        if (creating) {\n          target[impl][utils.namedSetNew](P, namedValue);\n        } else {\n          target[impl][utils.namedSetExisting](P, namedValue);\n        }\n\n        return true;\n      },\n\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n\n        if (target[impl][utils.namedGet](P) !== undefined && !utils.hasOwn(target, P)) {\n          target[impl][utils.namedDelete](P);\n          return true;\n        }\n\n        return Reflect.deleteProperty(target, P);\n      },\n\n      preventExtensions() {\n        return false;\n      }\n\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: DOMStringMap,\n  expose: {\n    Window: {\n      DOMStringMap\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/DOMStringMap-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/DOMStringMap.js"],"names":["conversions","require","utils","impl","implSymbol","DOMStringMap","constructor","TypeError","Object","defineProperties","prototype","Symbol","toStringTag","value","configurable","iface","_mixedIntoPredicates","is","obj","hasOwn","Impl","implementation","isMixedInto","module","exports","isImpl","wrapper","wrapperForImpl","convert","context","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","Proxy","get","target","P","receiver","Reflect","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","set","getter","apply","has","ownKeys","keys","Set","key","supportedPropertyNames","add","ignoreNamedProps","namedValue","namedGet","writable","enumerable","tryWrapperForImpl","V","isArrayIndexPropName","creating","namedSetNew","namedSetExisting","ownDesc","isObject","existingDesc","valueDesc","deleteProperty","namedDelete","preventExtensions","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass DOMStringMap {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n}\nObject.defineProperties(DOMStringMap.prototype, {\n  [Symbol.toStringTag]: { value: \"DOMStringMap\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'DOMStringMap'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(DOMStringMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(DOMStringMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n          if (parent === null) {\n            return undefined;\n          }\n          return Reflect.get(target, P, receiver);\n        }\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n        const getter = desc.get;\n        if (getter === undefined) {\n          return undefined;\n        }\n        return Reflect.apply(getter, receiver, []);\n      },\n\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc !== undefined) {\n          return true;\n        }\n        const parent = Object.getPrototypeOf(target);\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n        return false;\n      },\n\n      ownKeys(target) {\n        const keys = new Set();\n\n        for (const key of target[impl][utils.supportedPropertyNames]) {\n          if (!utils.hasOwn(target, key)) {\n            keys.add(`${key}`);\n          }\n        }\n\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n        return [...keys];\n      },\n\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        let ignoreNamedProps = false;\n\n        const namedValue = target[impl][utils.namedGet](P);\n\n        if (namedValue !== undefined && !utils.hasOwn(target, P) && !ignoreNamedProps) {\n          return {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: utils.tryWrapperForImpl(namedValue)\n          };\n        }\n\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n        if (target === receiver) {\n          if (typeof P === \"string\" && !utils.isArrayIndexPropName(P)) {\n            let namedValue = V;\n\n            namedValue = conversions[\"DOMString\"](namedValue, {\n              context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n            });\n\n            const creating = !(target[impl][utils.namedGet](P) !== undefined);\n            if (creating) {\n              target[impl][utils.namedSetNew](P, namedValue);\n            } else {\n              target[impl][utils.namedSetExisting](P, namedValue);\n            }\n\n            return true;\n          }\n        }\n        let ownDesc;\n\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n          ownDesc = { writable: true, enumerable: true, configurable: true, value: undefined };\n        }\n        if (!ownDesc.writable) {\n          return false;\n        }\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n          if (!existingDesc.writable) {\n            return false;\n          }\n          valueDesc = { value: V };\n        } else {\n          valueDesc = { writable: true, enumerable: true, configurable: true, value: V };\n        }\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n\n        if (desc.get || desc.set) {\n          return false;\n        }\n\n        let namedValue = desc.value;\n\n        namedValue = conversions[\"DOMString\"](namedValue, {\n          context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n        });\n\n        const creating = !(target[impl][utils.namedGet](P) !== undefined);\n        if (creating) {\n          target[impl][utils.namedSetNew](P, namedValue);\n        } else {\n          target[impl][utils.namedSetExisting](P, namedValue);\n        }\n\n        return true;\n      },\n\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n\n        if (target[impl][utils.namedGet](P) !== undefined && !utils.hasOwn(target, P)) {\n          target[impl][utils.namedDelete](P);\n          return true;\n        }\n\n        return Reflect.deleteProperty(target, P);\n      },\n\n      preventExtensions() {\n        return false;\n      }\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: DOMStringMap,\n  expose: {\n    Window: { DOMStringMap }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/DOMStringMap-impl.js\");\n"]},"metadata":{},"sourceType":"script"}