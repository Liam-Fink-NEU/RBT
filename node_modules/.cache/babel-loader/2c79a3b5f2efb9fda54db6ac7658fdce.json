{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst convertHTMLTableCaptionElement = require(\"./HTMLTableCaptionElement.js\").convert;\n\nconst convertHTMLTableSectionElement = require(\"./HTMLTableSectionElement.js\").convert;\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLTableElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  createCaption() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].createCaption());\n  }\n\n  deleteCaption() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].deleteCaption();\n  }\n\n  createTHead() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].createTHead());\n  }\n\n  deleteTHead() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].deleteTHead();\n  }\n\n  createTFoot() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].createTFoot());\n  }\n\n  deleteTFoot() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].deleteTFoot();\n  }\n\n  createTBody() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].createTBody());\n  }\n\n  insertRow() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n\n      if (curArg !== undefined) {\n        curArg = conversions[\"long\"](curArg, {\n          context: \"Failed to execute 'insertRow' on 'HTMLTableElement': parameter 1\"\n        });\n      } else {\n        curArg = -1;\n      }\n\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].insertRow(...args));\n  }\n\n  deleteRow(index) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to execute 'deleteRow' on 'HTMLTableElement': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"long\"](curArg, {\n        context: \"Failed to execute 'deleteRow' on 'HTMLTableElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].deleteRow(...args);\n  }\n\n  get caption() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"caption\"]);\n  }\n\n  set caption(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = convertHTMLTableCaptionElement(V, {\n        context: \"Failed to set the 'caption' property on 'HTMLTableElement': The provided value\"\n      });\n    }\n\n    this[impl][\"caption\"] = V;\n  }\n\n  get tHead() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"tHead\"]);\n  }\n\n  set tHead(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = convertHTMLTableSectionElement(V, {\n        context: \"Failed to set the 'tHead' property on 'HTMLTableElement': The provided value\"\n      });\n    }\n\n    this[impl][\"tHead\"] = V;\n  }\n\n  get tFoot() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"tFoot\"]);\n  }\n\n  set tFoot(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = convertHTMLTableSectionElement(V, {\n        context: \"Failed to set the 'tFoot' property on 'HTMLTableElement': The provided value\"\n      });\n    }\n\n    this[impl][\"tFoot\"] = V;\n  }\n\n  get tBodies() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"tBodies\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"tBodies\"]);\n    });\n  }\n\n  get rows() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"rows\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"rows\"]);\n    });\n  }\n\n  get align() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"align\");\n    return value === null ? \"\" : value;\n  }\n\n  set align(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLTableElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"align\", V);\n  }\n\n  get border() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"border\");\n    return value === null ? \"\" : value;\n  }\n\n  set border(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'border' property on 'HTMLTableElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"border\", V);\n  }\n\n  get frame() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"frame\");\n    return value === null ? \"\" : value;\n  }\n\n  set frame(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'frame' property on 'HTMLTableElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"frame\", V);\n  }\n\n  get rules() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"rules\");\n    return value === null ? \"\" : value;\n  }\n\n  set rules(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'rules' property on 'HTMLTableElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"rules\", V);\n  }\n\n  get summary() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"summary\");\n    return value === null ? \"\" : value;\n  }\n\n  set summary(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'summary' property on 'HTMLTableElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"summary\", V);\n  }\n\n  get width() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"width\");\n    return value === null ? \"\" : value;\n  }\n\n  set width(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'width' property on 'HTMLTableElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"width\", V);\n  }\n\n  get bgColor() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"bgcolor\");\n    return value === null ? \"\" : value;\n  }\n\n  set bgColor(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'bgColor' property on 'HTMLTableElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n    this.setAttributeNS(null, \"bgcolor\", V);\n  }\n\n  get cellPadding() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"cellpadding\");\n    return value === null ? \"\" : value;\n  }\n\n  set cellPadding(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'cellPadding' property on 'HTMLTableElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n    this.setAttributeNS(null, \"cellpadding\", V);\n  }\n\n  get cellSpacing() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"cellspacing\");\n    return value === null ? \"\" : value;\n  }\n\n  set cellSpacing(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'cellSpacing' property on 'HTMLTableElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n    this.setAttributeNS(null, \"cellspacing\", V);\n  }\n\n}\n\nObject.defineProperties(HTMLTableElement.prototype, {\n  createCaption: {\n    enumerable: true\n  },\n  deleteCaption: {\n    enumerable: true\n  },\n  createTHead: {\n    enumerable: true\n  },\n  deleteTHead: {\n    enumerable: true\n  },\n  createTFoot: {\n    enumerable: true\n  },\n  deleteTFoot: {\n    enumerable: true\n  },\n  createTBody: {\n    enumerable: true\n  },\n  insertRow: {\n    enumerable: true\n  },\n  deleteRow: {\n    enumerable: true\n  },\n  caption: {\n    enumerable: true\n  },\n  tHead: {\n    enumerable: true\n  },\n  tFoot: {\n    enumerable: true\n  },\n  tBodies: {\n    enumerable: true\n  },\n  rows: {\n    enumerable: true\n  },\n  align: {\n    enumerable: true\n  },\n  border: {\n    enumerable: true\n  },\n  frame: {\n    enumerable: true\n  },\n  rules: {\n    enumerable: true\n  },\n  summary: {\n    enumerable: true\n  },\n  width: {\n    enumerable: true\n  },\n  bgColor: {\n    enumerable: true\n  },\n  cellPadding: {\n    enumerable: true\n  },\n  cellSpacing: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"HTMLTableElement\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLTableElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLTableElement,\n  expose: {\n    Window: {\n      HTMLTableElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLTableElement-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableElement.js"],"names":["conversions","require","utils","convertHTMLTableCaptionElement","convert","convertHTMLTableSectionElement","impl","implSymbol","HTMLElement","HTMLTableElement","interface","constructor","TypeError","createCaption","module","exports","is","tryWrapperForImpl","deleteCaption","createTHead","deleteTHead","createTFoot","deleteTFoot","createTBody","insertRow","args","curArg","arguments","undefined","context","push","deleteRow","index","length","caption","V","tHead","tFoot","tBodies","getSameObject","rows","align","value","getAttributeNS","setAttributeNS","border","frame","rules","summary","width","bgColor","treatNullAsEmptyString","cellPadding","cellSpacing","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertHTMLTableCaptionElement = require(\"./HTMLTableCaptionElement.js\").convert;\nconst convertHTMLTableSectionElement = require(\"./HTMLTableSectionElement.js\").convert;\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLTableElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  createCaption() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].createCaption());\n  }\n\n  deleteCaption() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].deleteCaption();\n  }\n\n  createTHead() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].createTHead());\n  }\n\n  deleteTHead() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].deleteTHead();\n  }\n\n  createTFoot() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].createTFoot());\n  }\n\n  deleteTFoot() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].deleteTFoot();\n  }\n\n  createTBody() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl].createTBody());\n  }\n\n  insertRow() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      if (curArg !== undefined) {\n        curArg = conversions[\"long\"](curArg, {\n          context: \"Failed to execute 'insertRow' on 'HTMLTableElement': parameter 1\"\n        });\n      } else {\n        curArg = -1;\n      }\n      args.push(curArg);\n    }\n    return utils.tryWrapperForImpl(this[impl].insertRow(...args));\n  }\n\n  deleteRow(index) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        \"Failed to execute 'deleteRow' on 'HTMLTableElement': 1 argument required, but only \" +\n          arguments.length +\n          \" present.\"\n      );\n    }\n    const args = [];\n    {\n      let curArg = arguments[0];\n      curArg = conversions[\"long\"](curArg, {\n        context: \"Failed to execute 'deleteRow' on 'HTMLTableElement': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    return this[impl].deleteRow(...args);\n  }\n\n  get caption() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"caption\"]);\n  }\n\n  set caption(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = convertHTMLTableCaptionElement(V, {\n        context: \"Failed to set the 'caption' property on 'HTMLTableElement': The provided value\"\n      });\n    }\n    this[impl][\"caption\"] = V;\n  }\n\n  get tHead() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"tHead\"]);\n  }\n\n  set tHead(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = convertHTMLTableSectionElement(V, {\n        context: \"Failed to set the 'tHead' property on 'HTMLTableElement': The provided value\"\n      });\n    }\n    this[impl][\"tHead\"] = V;\n  }\n\n  get tFoot() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"tFoot\"]);\n  }\n\n  set tFoot(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = convertHTMLTableSectionElement(V, {\n        context: \"Failed to set the 'tFoot' property on 'HTMLTableElement': The provided value\"\n      });\n    }\n    this[impl][\"tFoot\"] = V;\n  }\n\n  get tBodies() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"tBodies\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"tBodies\"]);\n    });\n  }\n\n  get rows() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"rows\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"rows\"]);\n    });\n  }\n\n  get align() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"align\");\n    return value === null ? \"\" : value;\n  }\n\n  set align(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLTableElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"align\", V);\n  }\n\n  get border() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"border\");\n    return value === null ? \"\" : value;\n  }\n\n  set border(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'border' property on 'HTMLTableElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"border\", V);\n  }\n\n  get frame() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"frame\");\n    return value === null ? \"\" : value;\n  }\n\n  set frame(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'frame' property on 'HTMLTableElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"frame\", V);\n  }\n\n  get rules() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"rules\");\n    return value === null ? \"\" : value;\n  }\n\n  set rules(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'rules' property on 'HTMLTableElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"rules\", V);\n  }\n\n  get summary() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"summary\");\n    return value === null ? \"\" : value;\n  }\n\n  set summary(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'summary' property on 'HTMLTableElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"summary\", V);\n  }\n\n  get width() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"width\");\n    return value === null ? \"\" : value;\n  }\n\n  set width(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'width' property on 'HTMLTableElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"width\", V);\n  }\n\n  get bgColor() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"bgcolor\");\n    return value === null ? \"\" : value;\n  }\n\n  set bgColor(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'bgColor' property on 'HTMLTableElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n\n    this.setAttributeNS(null, \"bgcolor\", V);\n  }\n\n  get cellPadding() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"cellpadding\");\n    return value === null ? \"\" : value;\n  }\n\n  set cellPadding(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'cellPadding' property on 'HTMLTableElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n\n    this.setAttributeNS(null, \"cellpadding\", V);\n  }\n\n  get cellSpacing() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"cellspacing\");\n    return value === null ? \"\" : value;\n  }\n\n  set cellSpacing(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'cellSpacing' property on 'HTMLTableElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n\n    this.setAttributeNS(null, \"cellspacing\", V);\n  }\n}\nObject.defineProperties(HTMLTableElement.prototype, {\n  createCaption: { enumerable: true },\n  deleteCaption: { enumerable: true },\n  createTHead: { enumerable: true },\n  deleteTHead: { enumerable: true },\n  createTFoot: { enumerable: true },\n  deleteTFoot: { enumerable: true },\n  createTBody: { enumerable: true },\n  insertRow: { enumerable: true },\n  deleteRow: { enumerable: true },\n  caption: { enumerable: true },\n  tHead: { enumerable: true },\n  tFoot: { enumerable: true },\n  tBodies: { enumerable: true },\n  rows: { enumerable: true },\n  align: { enumerable: true },\n  border: { enumerable: true },\n  frame: { enumerable: true },\n  rules: { enumerable: true },\n  summary: { enumerable: true },\n  width: { enumerable: true },\n  bgColor: { enumerable: true },\n  cellPadding: { enumerable: true },\n  cellSpacing: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"HTMLTableElement\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLTableElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLTableElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLTableElement,\n  expose: {\n    Window: { HTMLTableElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLTableElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}