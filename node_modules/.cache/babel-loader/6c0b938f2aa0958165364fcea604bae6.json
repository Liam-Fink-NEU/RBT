{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLFormElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  submit() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].submit();\n  }\n\n  reset() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].reset();\n  }\n\n  checkValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].checkValidity();\n  }\n\n  reportValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].reportValidity();\n  }\n\n  get acceptCharset() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"accept-charset\");\n    return value === null ? \"\" : value;\n  }\n\n  set acceptCharset(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'acceptCharset' property on 'HTMLFormElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"accept-charset\", V);\n  }\n\n  get action() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"action\"];\n  }\n\n  set action(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"USVString\"](V, {\n      context: \"Failed to set the 'action' property on 'HTMLFormElement': The provided value\"\n    });\n    this[impl][\"action\"] = V;\n  }\n\n  get enctype() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"enctype\"];\n  }\n\n  set enctype(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'enctype' property on 'HTMLFormElement': The provided value\"\n    });\n    this[impl][\"enctype\"] = V;\n  }\n\n  get method() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"method\"];\n  }\n\n  set method(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'method' property on 'HTMLFormElement': The provided value\"\n    });\n    this[impl][\"method\"] = V;\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"name\");\n    return value === null ? \"\" : value;\n  }\n\n  set name(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLFormElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"name\", V);\n  }\n\n  get noValidate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"novalidate\");\n  }\n\n  set noValidate(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'noValidate' property on 'HTMLFormElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"novalidate\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"novalidate\");\n    }\n  }\n\n  get target() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"target\");\n    return value === null ? \"\" : value;\n  }\n\n  set target(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'target' property on 'HTMLFormElement': The provided value\"\n    });\n    this.setAttributeNS(null, \"target\", V);\n  }\n\n  get elements() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"elements\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"elements\"]);\n    });\n  }\n\n  get length() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"length\"];\n  }\n\n}\n\nObject.defineProperties(HTMLFormElement.prototype, {\n  submit: {\n    enumerable: true\n  },\n  reset: {\n    enumerable: true\n  },\n  checkValidity: {\n    enumerable: true\n  },\n  reportValidity: {\n    enumerable: true\n  },\n  acceptCharset: {\n    enumerable: true\n  },\n  action: {\n    enumerable: true\n  },\n  enctype: {\n    enumerable: true\n  },\n  method: {\n    enumerable: true\n  },\n  name: {\n    enumerable: true\n  },\n  noValidate: {\n    enumerable: true\n  },\n  target: {\n    enumerable: true\n  },\n  elements: {\n    enumerable: true\n  },\n  length: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"HTMLFormElement\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'HTMLFormElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLFormElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLFormElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: HTMLFormElement,\n  expose: {\n    Window: {\n      HTMLFormElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLFormElement-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLFormElement.js"],"names":["conversions","require","utils","impl","implSymbol","HTMLElement","HTMLFormElement","interface","constructor","TypeError","submit","module","exports","is","reset","checkValidity","reportValidity","acceptCharset","value","getAttributeNS","V","context","setAttributeNS","action","enctype","method","name","noValidate","hasAttributeNS","removeAttributeNS","target","elements","getSameObject","tryWrapperForImpl","length","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nclass HTMLFormElement extends HTMLElement.interface {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  submit() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].submit();\n  }\n\n  reset() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].reset();\n  }\n\n  checkValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].checkValidity();\n  }\n\n  reportValidity() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl].reportValidity();\n  }\n\n  get acceptCharset() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"accept-charset\");\n    return value === null ? \"\" : value;\n  }\n\n  set acceptCharset(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'acceptCharset' property on 'HTMLFormElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"accept-charset\", V);\n  }\n\n  get action() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"action\"];\n  }\n\n  set action(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"USVString\"](V, {\n      context: \"Failed to set the 'action' property on 'HTMLFormElement': The provided value\"\n    });\n\n    this[impl][\"action\"] = V;\n  }\n\n  get enctype() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"enctype\"];\n  }\n\n  set enctype(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'enctype' property on 'HTMLFormElement': The provided value\"\n    });\n\n    this[impl][\"enctype\"] = V;\n  }\n\n  get method() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"method\"];\n  }\n\n  set method(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'method' property on 'HTMLFormElement': The provided value\"\n    });\n\n    this[impl][\"method\"] = V;\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"name\");\n    return value === null ? \"\" : value;\n  }\n\n  set name(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLFormElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"name\", V);\n  }\n\n  get noValidate() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttributeNS(null, \"novalidate\");\n  }\n\n  set noValidate(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'noValidate' property on 'HTMLFormElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttributeNS(null, \"novalidate\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"novalidate\");\n    }\n  }\n\n  get target() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    const value = this.getAttributeNS(null, \"target\");\n    return value === null ? \"\" : value;\n  }\n\n  set target(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'target' property on 'HTMLFormElement': The provided value\"\n    });\n\n    this.setAttributeNS(null, \"target\", V);\n  }\n\n  get elements() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"elements\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"elements\"]);\n    });\n  }\n\n  get length() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"length\"];\n  }\n}\nObject.defineProperties(HTMLFormElement.prototype, {\n  submit: { enumerable: true },\n  reset: { enumerable: true },\n  checkValidity: { enumerable: true },\n  reportValidity: { enumerable: true },\n  acceptCharset: { enumerable: true },\n  action: { enumerable: true },\n  enctype: { enumerable: true },\n  method: { enumerable: true },\n  name: { enumerable: true },\n  noValidate: { enumerable: true },\n  target: { enumerable: true },\n  elements: { enumerable: true },\n  length: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"HTMLFormElement\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'HTMLFormElement'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(HTMLFormElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(HTMLFormElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: HTMLFormElement,\n  expose: {\n    Window: { HTMLFormElement }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/HTMLFormElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}