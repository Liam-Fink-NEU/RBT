{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass Attr {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get namespaceURI() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"namespaceURI\"];\n  }\n\n  get prefix() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"prefix\"];\n  }\n\n  get localName() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"localName\"];\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"name\"];\n  }\n\n  get nodeName() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"nodeName\"];\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'value' property on 'Attr': The provided value\"\n    });\n    this[impl][\"value\"] = V;\n  }\n\n  get nodeValue() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"nodeValue\"];\n  }\n\n  set nodeValue(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'nodeValue' property on 'Attr': The provided value\",\n      treatNullAsEmptyString: true\n    });\n    this[impl][\"nodeValue\"] = V;\n  }\n\n  get textContent() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"textContent\"];\n  }\n\n  set textContent(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'textContent' property on 'Attr': The provided value\",\n      treatNullAsEmptyString: true\n    });\n    this[impl][\"textContent\"] = V;\n  }\n\n  get ownerElement() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"ownerElement\"]);\n  }\n\n  get specified() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"specified\"];\n  }\n\n}\n\nObject.defineProperties(Attr.prototype, {\n  namespaceURI: {\n    enumerable: true\n  },\n  prefix: {\n    enumerable: true\n  },\n  localName: {\n    enumerable: true\n  },\n  name: {\n    enumerable: true\n  },\n  nodeName: {\n    enumerable: true\n  },\n  value: {\n    enumerable: true\n  },\n  nodeValue: {\n    enumerable: true\n  },\n  textContent: {\n    enumerable: true\n  },\n  ownerElement: {\n    enumerable: true\n  },\n  specified: {\n    enumerable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"Attr\",\n    configurable: true\n  }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(`${context} is not of type 'Attr'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Attr.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Attr.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n\n  _internalSetup(obj) {},\n\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n\n  interface: Attr,\n  expose: {\n    Window: {\n      Attr\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nconst Impl = require(\"../attributes/Attr-impl.js\");","map":{"version":3,"sources":["/Users/liamfink/class-app/node_modules/jsdom/lib/jsdom/living/generated/Attr.js"],"names":["conversions","require","utils","impl","implSymbol","Attr","constructor","TypeError","namespaceURI","module","exports","is","prefix","localName","name","nodeName","value","V","context","nodeValue","treatNullAsEmptyString","textContent","ownerElement","tryWrapperForImpl","specified","Object","defineProperties","prototype","enumerable","Symbol","toStringTag","configurable","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","wrapperSymbol","init","interface","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nclass Attr {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  get namespaceURI() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"namespaceURI\"];\n  }\n\n  get prefix() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"prefix\"];\n  }\n\n  get localName() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"localName\"];\n  }\n\n  get name() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"name\"];\n  }\n\n  get nodeName() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"nodeName\"];\n  }\n\n  get value() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"value\"];\n  }\n\n  set value(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, { context: \"Failed to set the 'value' property on 'Attr': The provided value\" });\n\n    this[impl][\"value\"] = V;\n  }\n\n  get nodeValue() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"nodeValue\"];\n  }\n\n  set nodeValue(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'nodeValue' property on 'Attr': The provided value\",\n      treatNullAsEmptyString: true\n    });\n\n    this[impl][\"nodeValue\"] = V;\n  }\n\n  get textContent() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"textContent\"];\n  }\n\n  set textContent(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'textContent' property on 'Attr': The provided value\",\n      treatNullAsEmptyString: true\n    });\n\n    this[impl][\"textContent\"] = V;\n  }\n\n  get ownerElement() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"ownerElement\"]);\n  }\n\n  get specified() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"specified\"];\n  }\n}\nObject.defineProperties(Attr.prototype, {\n  namespaceURI: { enumerable: true },\n  prefix: { enumerable: true },\n  localName: { enumerable: true },\n  name: { enumerable: true },\n  nodeName: { enumerable: true },\n  value: { enumerable: true },\n  nodeValue: { enumerable: true },\n  textContent: { enumerable: true },\n  ownerElement: { enumerable: true },\n  specified: { enumerable: true },\n  [Symbol.toStringTag]: { value: \"Attr\", configurable: true }\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'Attr'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Attr.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Attr.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: Attr,\n  expose: {\n    Window: { Attr }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../attributes/Attr-impl.js\");\n"]},"metadata":{},"sourceType":"script"}